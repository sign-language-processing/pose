Search.setIndex({"docnames": ["examples", "index", "js_docs", "json", "modules", "pose_format", "pose_format.numpy", "pose_format.numpy.pose_body", "pose_format.numpy.representation", "pose_format.numpy.representation.distance", "pose_format.numpy.representation.distance_test", "pose_format.pose", "pose_format.pose_body", "pose_format.pose_header", "pose_format.pose_representation", "pose_format.pose_test", "pose_format.pose_visualizer", "pose_format.tensorflow", "pose_format.tensorflow.masked", "pose_format.tensorflow.masked.tensor", "pose_format.tensorflow.masked.tensor_graph_mode_test", "pose_format.tensorflow.masked.tensor_test", "pose_format.tensorflow.masked.tensorflow", "pose_format.tensorflow.masked.tensorflow_test", "pose_format.tensorflow.pose_body", "pose_format.tensorflow.pose_body_test", "pose_format.tensorflow.pose_representation", "pose_format.tensorflow.pose_representation_test", "pose_format.tensorflow.representation", "pose_format.tensorflow.representation.angle", "pose_format.tensorflow.representation.angle_test", "pose_format.tensorflow.representation.distance", "pose_format.tensorflow.representation.distance_test", "pose_format.tensorflow.representation.inner_angle", "pose_format.tensorflow.representation.inner_angle_test", "pose_format.tensorflow.representation.point_line_distance", "pose_format.tensorflow.representation.point_line_distance_test", "pose_format.testing", "pose_format.third_party", "pose_format.third_party.py", "pose_format.torch", "pose_format.torch.masked", "pose_format.torch.masked.tensor", "pose_format.torch.masked.torch", "pose_format.torch.masked.torch_test", "pose_format.torch.pose_body", "pose_format.torch.pose_representation", "pose_format.torch.representation", "pose_format.torch.representation.angle", "pose_format.torch.representation.angle_test", "pose_format.torch.representation.distance", "pose_format.torch.representation.distance_test", "pose_format.torch.representation.inner_angle", "pose_format.torch.representation.inner_angle_test", "pose_format.torch.representation.point_line_distance", "pose_format.torch.representation.point_line_distance_test", "pose_format.torch.representation.points", "pose_format.utils", "pose_format.utils.fast_math", "pose_format.utils.holistic", "pose_format.utils.normalization_3d", "pose_format.utils.openpose", "pose_format.utils.openpose_135", "pose_format.utils.openpose_test", "pose_format.utils.optical_flow", "pose_format.utils.pose_converter", "pose_format.utils.reader", "pose_format.utils.reader_test", "pose_format.utils.siren", "pose_format_js", "pose_viewer_example", "pose_viewer_files", "pose_viewer_js", "pose_viewer_src", "readme", "specs/v0.0", "specs/v0.1", "specs_v01", "src", "test_data", "tests", "tests_hand_normalization_test", "tests_optical_flow", "tests_pose", "tests_pose_tf", "tests_subs"], "filenames": ["examples.rst", "index.rst", "js_docs.rst", "json.rst", "modules.rst", "pose_format.rst", "pose_format.numpy.rst", "pose_format.numpy.pose_body.rst", "pose_format.numpy.representation.rst", "pose_format.numpy.representation.distance.rst", "pose_format.numpy.representation.distance_test.rst", "pose_format.pose.rst", "pose_format.pose_body.rst", "pose_format.pose_header.rst", "pose_format.pose_representation.rst", "pose_format.pose_test.rst", "pose_format.pose_visualizer.rst", "pose_format.tensorflow.rst", "pose_format.tensorflow.masked.rst", "pose_format.tensorflow.masked.tensor.rst", "pose_format.tensorflow.masked.tensor_graph_mode_test.rst", "pose_format.tensorflow.masked.tensor_test.rst", "pose_format.tensorflow.masked.tensorflow.rst", "pose_format.tensorflow.masked.tensorflow_test.rst", "pose_format.tensorflow.pose_body.rst", "pose_format.tensorflow.pose_body_test.rst", "pose_format.tensorflow.pose_representation.rst", "pose_format.tensorflow.pose_representation_test.rst", "pose_format.tensorflow.representation.rst", "pose_format.tensorflow.representation.angle.rst", "pose_format.tensorflow.representation.angle_test.rst", "pose_format.tensorflow.representation.distance.rst", "pose_format.tensorflow.representation.distance_test.rst", "pose_format.tensorflow.representation.inner_angle.rst", "pose_format.tensorflow.representation.inner_angle_test.rst", "pose_format.tensorflow.representation.point_line_distance.rst", "pose_format.tensorflow.representation.point_line_distance_test.rst", "pose_format.testing.rst", "pose_format.third_party.rst", "pose_format.third_party.py.rst", "pose_format.torch.rst", "pose_format.torch.masked.rst", "pose_format.torch.masked.tensor.rst", "pose_format.torch.masked.torch.rst", "pose_format.torch.masked.torch_test.rst", "pose_format.torch.pose_body.rst", "pose_format.torch.pose_representation.rst", "pose_format.torch.representation.rst", "pose_format.torch.representation.angle.rst", "pose_format.torch.representation.angle_test.rst", "pose_format.torch.representation.distance.rst", "pose_format.torch.representation.distance_test.rst", "pose_format.torch.representation.inner_angle.rst", "pose_format.torch.representation.inner_angle_test.rst", "pose_format.torch.representation.point_line_distance.rst", "pose_format.torch.representation.point_line_distance_test.rst", "pose_format.torch.representation.points.rst", "pose_format.utils.rst", "pose_format.utils.fast_math.rst", "pose_format.utils.holistic.rst", "pose_format.utils.normalization_3d.rst", "pose_format.utils.openpose.rst", "pose_format.utils.openpose_135.rst", "pose_format.utils.openpose_test.rst", "pose_format.utils.optical_flow.rst", "pose_format.utils.pose_converter.rst", "pose_format.utils.reader.rst", "pose_format.utils.reader_test.rst", "pose_format.utils.siren.rst", "pose_format_js.rst", "pose_viewer_example.rst", "pose_viewer_files.rst", "pose_viewer_js.rst", "pose_viewer_src.rst", "readme.rst", "specs\\v0.0.md", "specs\\v0.1.md", "specs_v01.rst", "src.rst", "test_data.rst", "tests.rst", "tests_hand_normalization_test.rst", "tests_optical_flow.rst", "tests_pose.rst", "tests_pose_tf.rst", "tests_subs.rst"], "titles": ["Examples", "Welcome to Pose-Format\u2019s documentation!", "JavaScript", "JSON Files", "Structure", "pose_format package", "pose_format.numpy package", "pose_format.numpy.pose_body module", "pose_format.numpy.representation package", "pose_format.numpy.representation.distance module", "pose_format.numpy.representation.distance_test module", "pose_format.pose module", "pose_format.pose_body module", "pose_format.pose_header module", "pose_format.pose_representation module", "pose_format.pose_test module", "pose_format.pose_visualizer module", "pose_format.tensorflow package", "pose_format.tensorflow.masked package", "pose_format.tensorflow.masked.tensor module", "pose_format.tensorflow.masked.tensor_graph_mode_test module", "pose_format.tensorflow.masked.tensor_test module", "pose_format.tensorflow.masked.tensorflow module", "pose_format.tensorflow.masked.tensorflow_test module", "pose_format.tensorflow.pose_body module", "pose_format.tensorflow.pose_body_test module", "pose_format.tensorflow.pose_representation module", "pose_format.tensorflow.pose_representation_test module", "pose_format.tensorflow.representation package", "pose_format.tensorflow.representation.angle module", "pose_format.tensorflow.representation.angle_test module", "pose_format.tensorflow.representation.distance module", "pose_format.tensorflow.representation.distance_test module", "pose_format.tensorflow.representation.inner_angle module", "pose_format.tensorflow.representation.inner_angle_test module", "pose_format.tensorflow.representation.point_line_distance module", "pose_format.tensorflow.representation.point_line_distance_test module", "pose_format.testing package", "pose_format.third_party package", "pose_format.third_party.py package", "pose_format.torch package", "pose_format.torch.masked package", "pose_format.torch.masked.tensor module", "pose_format.torch.masked.torch module", "pose_format.torch.masked.torch_test module", "pose_format.torch.pose_body module", "pose_format.torch.pose_representation module", "pose_format.torch.representation package", "pose_format.torch.representation.angle module", "pose_format.torch.representation.angle_test module", "pose_format.torch.representation.distance module", "pose_format.torch.representation.distance_test module", "pose_format.torch.representation.inner_angle module", "pose_format.torch.representation.inner_angle_test module", "pose_format.torch.representation.point_line_distance module", "pose_format.torch.representation.point_line_distance_test module", "pose_format.torch.representation.points module", "pose_format.utils package", "pose_format.utils.fast_math module", "pose_format.utils.holistic module", "pose_format.utils.normalization_3d module", "pose_format.utils.openpose module", "pose_format.utils.openpose_135 module", "pose_format.utils.openpose_test module", "pose_format.utils.optical_flow module", "pose_format.utils.pose_converter module", "pose_format.utils.reader module", "pose_format.utils.reader_test module", "pose_format.utils.siren module", "pose_format", "example", "pose viewer files", "pose_viewer", "src", "Pose Format Introduction", "Header", "Header", "specs/v0.1.md", "pose_format/src", "Test Data", "tests package", "tests.hand_normalization_test module", "tests.optical_flow_test module", "tests.pose_test module", "tests.pose_tf_graph_mode_test module", "tests Submodules"], "terms": {"The": [0, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 16, 17, 19, 21, 22, 24, 25, 26, 31, 33, 41, 42, 48, 52, 54, 56, 59, 60, 61, 62, 65, 66, 68, 74, 81], "script": [0, 3, 71], "show": [0, 59], "u": [0, 74], "how": [0, 68, 74], "chang": [0, 3, 7, 74], "3d": [0, 10, 52, 81], "us": [0, 3, 4, 5, 7, 11, 12, 13, 14, 15, 16, 17, 19, 22, 24, 26, 40, 41, 43, 45, 46, 54, 59, 60, 61, 64, 66, 68, 71, 74, 81, 82, 83, 84], "someth": 0, "call": [0, 3, 17, 25], "neural": [0, 52], "network": [0, 52, 68], "function": [0, 3, 4, 17, 21, 22, 27, 31, 33, 40, 41, 42, 43, 48, 49, 52, 58, 59, 61, 62, 64, 65, 68, 74, 78], "follow": [0, 5, 12, 54, 61, 74], "fill": [0, 5, 7, 12, 17, 19, 24, 25, 40, 41, 43, 45, 56], "miss": [0, 5, 7, 11, 61, 63], "data": [0, 1, 4, 5, 7, 11, 12, 13, 15, 16, 17, 19, 24, 25, 27, 37, 40, 41, 42, 43, 44, 45, 46, 59, 60, 61, 62, 63, 66, 68, 78, 80, 81, 82, 83], "bodi": [0, 1, 5, 7, 11, 12, 17, 24, 25, 59, 61, 62, 68, 74, 78], "zero": [0, 1, 5, 7, 10, 12, 17, 18, 19, 22, 23, 24, 25, 40, 41, 42, 43, 44, 45, 49, 52, 53, 55, 56, 63, 74], "normal": [0, 1, 4, 5, 11, 12, 13, 15, 17, 24, 33, 52, 60, 64, 81, 83, 84], "distribut": [0, 5, 11, 12, 15, 17, 24, 68, 83, 84], "convert": [0, 5, 7, 11, 12, 13, 17, 19, 20, 24, 61, 65, 74], "construct": [0, 3, 5, 13, 17, 24, 25], "new": [0, 3, 5, 7, 11, 12, 17, 19, 24, 40, 41, 42, 43, 44, 45, 65, 73, 74, 78], "predict": [0, 68], "unnorm": [0, 5, 11], "also": [0, 7, 61, 68, 74], "befor": [0, 68], "you": [0, 5, 14, 40, 45, 74], "start": [0, 3, 5, 11, 14, 71], "ensur": [0, 3, 4, 5, 17, 20, 23, 27, 74], "have": [0, 3, 5, 9, 11, 13, 14, 58, 62, 74], "file": [0, 1, 2, 4, 5, 11, 12, 16, 39, 61, 63, 69, 72, 73, 78, 79], "path": [0, 3, 5, 16, 59, 61, 74, 78, 79], "thi": [0, 3, 5, 7, 9, 10, 12, 13, 16, 17, 20, 22, 24, 26, 33, 40, 45, 46, 52, 53, 54, 56, 61, 71, 73, 74, 76, 77, 78, 82], "i": [0, 1, 3, 5, 7, 10, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 25, 27, 41, 42, 44, 48, 52, 54, 55, 59, 60, 61, 63, 66, 68, 71, 73, 74, 76, 77, 78, 79, 81, 83], "standard": [0, 5, 11, 12, 17, 19, 21, 24, 74], "store": [0, 61, 74, 79], "inform": [0, 5, 7, 11, 13, 14, 40, 45, 46, 60, 73, 74], "If": [0, 5, 11, 12, 13, 14, 16, 17, 19, 25, 41, 42, 43, 59, 68, 74, 82], "don": [0, 59], "t": [0, 3, 59, 60, 69, 72], "one": [0, 3, 5, 9, 10, 12, 53, 54], "might": [0, 5, 12], "either": [0, 3, 7], "need": [0, 3, 5, 11, 13, 14, 17, 26, 40, 45, 60, 74], "obtain": [0, 23], "from": [0, 3, 4, 5, 7, 11, 12, 13, 14, 16, 17, 19, 23, 24, 26, 40, 41, 43, 45, 52, 53, 54, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 81, 82], "relev": 0, "dataset": [0, 5, 15, 68, 83], "your": [0, 74], "exist": [0, 3, 5, 12, 73, 74], "prepar": 0, "begin": 0, "import": [0, 3, 60, 71, 73, 74, 78], "necessari": 0, "modul": [0, 1, 3, 4, 6, 8, 18, 28, 37, 47, 57, 71, 73, 80, 85], "numpi": [0, 1, 4, 5, 11, 12, 15, 21, 39, 66, 74, 83], "np": [0, 5, 7, 11, 12, 16, 17, 21, 24, 40, 45, 58, 59, 60, 66], "ma": [0, 7, 9, 60], "pose_format": [0, 1, 2, 3, 4, 74], "util": [0, 1, 3, 4, 5, 7, 41, 42, 74], "numpyposebodi": [0, 1, 5, 6, 7, 11, 12, 59, 74], "pose_visu": [0, 1, 4, 74], "posevisu": [0, 1, 4, 5, 16, 74], "defin": [0, 3, 5, 11, 14, 22, 23, 52, 61, 65], "perform": [0, 5, 7, 11, 19, 22, 40, 41, 42, 45, 74], "an": [0, 1, 3, 5, 7, 11, 12, 13, 14, 17, 21, 24, 41, 42, 44, 53, 61, 63, 65, 68, 73, 74], "find": [0, 52, 54, 61], "whole": 0, "def": 0, "p": [0, 74, 81], "fp": [0, 5, 7, 12, 17, 24, 25, 40, 45, 59, 61, 64, 68, 74, 75, 76, 77, 78], "none": [0, 5, 7, 11, 12, 13, 16, 19, 41, 42, 43, 59, 61, 68], "given": [0, 5, 7, 11, 12, 13, 14, 17, 19, 24, 26, 33, 41, 42, 43, 52, 65, 66, 81], "object": [0, 3, 5, 9, 11, 12, 13, 14, 15, 16, 19, 22, 29, 31, 33, 35, 41, 42, 43, 44, 59, 60, 61, 62, 64, 65, 66, 68, 74, 83, 84], "its": [0, 4, 5, 13, 21, 33, 56, 60, 74], "represent": [0, 1, 5, 6, 12, 14, 17, 24, 26, 27, 40, 46, 59], "back": 0, "valu": [0, 3, 5, 7, 10, 11, 13, 16, 17, 19, 21, 23, 26, 40, 41, 42, 44, 45, 49, 52, 53, 55, 56, 61, 63, 67, 68, 74], "0": [0, 3, 5, 7, 10, 11, 12, 13, 16, 17, 19, 21, 23, 24, 41, 42, 58, 59, 60, 61, 63, 68, 71, 74, 78, 81], "": [0, 5, 12, 19, 21, 41, 42, 54, 61, 63, 66, 68], "zero_fil": [0, 1, 5, 6, 7, 12, 17, 18, 19, 24, 25, 40, 41, 42, 45], "noral": 0, "mu": [0, 5, 11], "std": [0, 1, 5, 11, 17, 18, 19], "normalize_distribut": [0, 1, 5, 11, 15, 74, 83], "net": 0, "get_pose_siren": [0, 1, 5, 57, 68], "total_step": [0, 68], "3000": 0, "steps_til_summari": [0, 68], "100": 0, "learning_r": [0, 68], "1e": [0, 68], "4": [0, 3, 5, 10, 12, 68, 71, 78], "cuda": [0, 1, 5, 40, 41, 42, 45, 68], "true": [0, 3, 5, 13, 16, 19, 41, 42, 59, 68, 71, 78], "new_fp": [0, 7], "els": 0, "coord": [0, 68], "posedataset": [0, 1, 5, 57, 68], "get_coord": [0, 1, 5, 57, 68], "time": [0, 5, 12, 66, 68], "len": [0, 5, 14, 17, 26, 31, 40, 46, 48, 50, 52, 54, 56], "get": [0, 5, 7, 11, 12, 13, 14, 17, 19, 24, 26, 40, 41, 42, 45, 59, 60, 68, 74, 78], "prediciton": 0, "pred": 0, "cpu": 0, "out": [0, 3, 5, 12, 13, 17, 24], "predcit": 0, "pose_bodi": [0, 1, 6, 11, 74], "arrai": [0, 3, 5, 7, 9, 12, 15, 21, 58, 59, 60, 61, 66, 67, 74, 78, 83], "confid": [0, 5, 7, 12, 16, 17, 24, 25, 40, 45, 59, 62, 68, 74, 75, 76, 77, 78], "ones": 0, "shape": [0, 5, 9, 12, 14, 15, 17, 19, 21, 22, 23, 26, 27, 31, 40, 41, 42, 43, 44, 46, 48, 50, 52, 54, 56, 58, 60, 63, 66, 83], "tupl": [0, 5, 11, 12, 13, 14, 16, 17, 19, 21, 22, 26, 40, 41, 42, 46, 59, 60, 61, 66, 68], "3": [0, 3, 5, 10, 12, 40, 46, 52, 60, 68, 71, 81], "header": [0, 1, 5, 7, 11, 12, 13, 14, 17, 26, 40, 46, 59, 61, 62, 74, 78], "revert": 0, "give": [0, 5, 12, 41, 43, 66], "instanc": [0, 5, 7, 12, 13, 17, 20, 24, 25, 35, 40, 45, 54, 63, 65, 74], "unnormalize_distribut": [0, 1, 5, 11], "return": [0, 3, 5, 7, 9, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 24, 26, 31, 33, 40, 41, 42, 43, 45, 46, 48, 50, 52, 54, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 78, 83], "doe": [0, 3, 5, 13, 82, 84], "oper": [0, 1, 3, 5, 7, 15, 17, 19, 20, 22, 23, 24, 41, 42, 83, 84], "transform": [0, 3, 7, 17, 24, 56], "usag": [0, 3, 74], "after": [0, 19, 40, 41, 42, 46, 60], "can": [0, 3, 4, 5, 11, 15, 20, 21, 59, 61, 74, 83, 84], "main": [0, 1, 3, 5, 13, 71], "__name__": 0, "__main__": 0, "pose_path": 0, "home": 0, "nlp": 0, "amit": [0, 1, 3, 74], "phd": 0, "poseformat": 0, "sampl": 0, "1": [0, 1, 3, 5, 10, 11, 12, 13, 17, 19, 24, 40, 41, 43, 46, 58, 60, 66, 68, 71, 78, 81], "own": 0, "buffer": [0, 5, 7, 11, 12, 13, 66, 74, 78], "open": [0, 74], "rb": [0, 74], "read": [0, 1, 4, 5, 7, 11, 12, 13, 17, 24, 62, 66, 67], "print": [0, 5, 13, 61, 68], "load": [0, 4, 59, 61, 62, 63], "info": [0, 3, 5, 7, 11, 13, 78], "normalization_info": [0, 1, 5, 13, 74], "p1": [0, 5, 9, 10, 13, 31, 48, 50, 52, 54, 56, 58, 60, 74], "pose_keypoints_2d": [0, 63, 74], "rshoulder": [0, 74], "p2": [0, 5, 9, 10, 13, 31, 48, 50, 52, 54, 58, 60, 74], "lshoulder": [0, 74], "scale_factor": [0, 5, 11], "300": 0, "focu": [0, 1, 5, 11], "v": [0, 74], "save_video": [0, 1, 5, 16, 74], "reconstruct": 0, "mp4": [0, 74], "draw": [0, 1, 5, 16, 74], "max_fram": [0, 5, 16], "task": [0, 1, 4, 74], "appli": [0, 5, 11, 16, 40, 46, 48, 74], "focus": 0, "visual": [0, 1, 4, 5, 16, 65, 68, 82], "execut": [0, 20, 21, 84], "To": [0, 3, 74, 75, 76, 77], "run": [0, 1], "python": [0, 5, 16], "pose_format_convert": 0, "combin": [0, 5, 14], "great": 0, "work": [0, 1, 63], "By": [0, 74], "understand": [0, 3], "method": [0, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 34, 36, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 63, 66, 67, 68, 74, 81, 82, 83, 84], "provid": [0, 1, 4, 5, 7, 16, 17, 19, 24, 26, 40, 41, 42, 45, 46, 52, 68, 74, 82], "abl": 0, "better": [0, 3], "manipul": [0, 1, 4, 5, 17, 26, 40, 45, 46], "suit": [0, 4, 5, 15, 55, 83], "requir": [0, 3, 60, 71], "A": [0, 5, 9, 11, 12, 15, 16, 17, 19, 21, 22, 23, 24, 29, 31, 33, 35, 40, 41, 42, 45, 46, 48, 52, 68, 76, 77, 81, 83], "result": [0, 5, 12, 15, 19, 21, 40, 41, 42, 45, 52, 53, 81, 83], "paramet": [0, 3, 5, 7, 9, 11, 12, 13, 14, 16, 17, 19, 21, 22, 24, 26, 31, 33, 35, 40, 41, 42, 43, 45, 46, 48, 50, 52, 54, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68], "input": [0, 5, 9, 11, 17, 27, 33, 52, 53, 56, 58, 62, 68], "int": [0, 5, 7, 11, 12, 13, 14, 16, 17, 19, 21, 22, 24, 26, 40, 41, 42, 43, 45, 59, 61, 66, 68], "option": [0, 3, 4, 5, 7, 11, 12, 13, 14, 16, 17, 19, 21, 22, 24, 41, 42, 43, 59, 61, 66, 68], "frame": [0, 5, 7, 11, 12, 15, 16, 17, 24, 59, 61, 63, 64, 68, 74, 78, 83, 84], "per": [0, 5, 7, 12, 17, 24, 59, 64, 68, 74], "second": [0, 5, 7, 9, 12, 13, 17, 24, 31, 41, 42, 48, 50, 52, 59, 64, 68, 74], "through": [0, 5, 11, 68], "innov": 1, "toolkit": [1, 74], "creat": [1, 5, 12, 17, 21, 24, 41, 43, 59, 61, 73, 74], "mmuller21": 1, "dedic": 1, "handl": [1, 3, 5, 7, 22, 53, 74], "With": 1, "support": [1, 3, 5, 12, 41, 43, 74], "variou": [1, 5, 14], "abil": 1, "especi": 1, "packag": [1, 4, 69, 72], "javascript": [1, 74], "comprehens": 1, "solut": 1, "relat": [1, 4, 5], "overview": 1, "structur": [1, 5, 7, 13, 40, 46, 62, 65], "implement": [1, 5, 7, 12, 14, 23, 78], "guid": 1, "test": [1, 5, 10, 15, 17, 20, 21, 23, 25, 30, 32, 34, 36, 41, 44, 49, 53, 55, 63, 67, 71], "acknowledg": 1, "featur": [1, 68, 74], "avail": [1, 4, 80], "submodul": [1, 4, 80], "hand_normalization_test": [1, 4, 80, 85], "test3dnorm": [1, 4, 80, 81, 85], "test_hand_norm": [1, 81, 85], "test_hand_normalization_result": [1, 81, 85], "test_norm": [1, 81, 85], "test_rotate_vector_by_90_degre": [1, 81, 85], "optical_flow_test": [1, 4, 80, 85], "testopticalflow": [1, 4, 80, 82, 85], "test_optical_flow": [1, 82, 85], "pose_tf_graph_mode_test": [1, 4, 80, 85], "testpos": [1, 4, 5, 15, 80, 83, 84, 85], "test_pose_tf_posebody_frame_dropout_normal_graph_mode_does_not_fail": [1, 84, 85], "test_pose_tf_posebody_frame_dropout_uniform_graph_mode_does_not_fail": [1, 84, 85], "test_pose_tf_posebody_normalize_graph_mode_does_not_fail": [1, 84, 85], "pose_test": [1, 4, 80, 85], "test_pose_object_should_be_cal": [1, 5, 15, 83, 85], "testposenumpyposebodi": [1, 4, 5, 15, 80, 83, 85], "test_pose_numpy_posebody_frame_dropout_normal_eager_mode_num_frames_not_zero": [1, 5, 15, 83, 85], "test_pose_numpy_posebody_frame_dropout_uniform_eager_mode_num_frames_not_zero": [1, 5, 15, 83, 85], "test_pose_numpy_posebody_normalize_preserves_shap": [1, 5, 15, 83, 85], "testposetensorflowposebodi": [1, 4, 5, 15, 80, 83, 85], "test_pose_frame_dropout_normal_can_be_used_in_tf_dataset_map": [1, 5, 15, 83, 85], "test_pose_frame_dropout_uniform_can_be_used_in_tf_dataset_map": [1, 5, 15, 83, 85], "test_pose_normalize_can_be_used_in_tf_dataset_map": [1, 5, 15, 83, 85], "test_pose_normalize_distribution_can_be_used_in_tf_dataset_map": [1, 5, 15, 83, 85], "test_pose_tf_posebody_frame_dropout_normal_eager_mode_num_frames_not_zero": [1, 5, 15, 83, 85], "test_pose_tf_posebody_frame_dropout_uniform_eager_mode_num_frames_not_zero": [1, 5, 15, 83, 85], "test_pose_tf_posebody_normalize_distribution_eager_mode_correct_result": [1, 5, 15, 83, 85], "test_pose_tf_posebody_normalize_eager_mode_preserves_shap": [1, 5, 15, 83, 85], "distanc": [1, 5, 6, 8, 10, 11, 17, 28, 32, 35, 36, 40, 47, 54, 55, 58, 64], "distancerepresent": [1, 5, 6, 8, 9, 10, 17, 28, 31, 32, 35, 40, 47, 50, 54], "distance_test": [1, 5, 6, 8, 17, 28, 40, 47], "testdistancerepresent": [1, 5, 6, 8, 10, 17, 28, 32, 40, 47, 51], "test_call_masked_value_should_be_zero": [1, 5, 6, 10, 40, 47, 49, 51, 53, 55], "test_call_value_should_be_dist": [1, 5, 6, 10, 17, 28, 32, 36, 40, 47, 51, 55], "bbox": [1, 5, 6, 7, 11, 12, 13], "flatten": [1, 5, 6, 7, 12, 40, 45], "flip": [1, 5, 6, 7, 11], "get_point": [1, 5, 6, 7, 12, 14, 17, 24, 26, 40, 45], "interpol": [1, 4, 5, 6, 7, 11], "mask": [1, 5, 6, 7, 10, 12, 17, 40, 45, 49, 52, 53, 55, 56, 68, 74], "matmul": [1, 5, 6, 7, 12, 17, 18, 19, 24, 40, 41, 42, 45], "points_perspect": [1, 5, 6, 7, 12, 17, 24, 40, 45], "read_v0_0": [1, 5, 6, 7, 12], "tensor_read": [1, 5, 6, 7, 12, 17, 24, 40, 45], "tensorflow": [1, 4, 5, 6, 7, 11, 12, 15, 39, 66, 74, 83, 84], "torch": [1, 4, 5, 6, 7, 11, 12, 14, 39, 66, 68, 74], "write": [1, 5, 6, 7, 11, 12, 13, 16], "tensor": [1, 5, 7, 14, 15, 17, 18, 21, 22, 23, 24, 26, 31, 33, 40, 43, 45, 46, 48, 49, 50, 52, 54, 56, 66, 68, 74, 83], "maskedtensor": [1, 5, 17, 18, 19, 20, 21, 22, 23, 24, 25, 40, 41, 42, 43, 44, 45, 48, 50, 52, 54, 56], "arithmet": [1, 5, 17, 18, 19, 40, 41, 42], "div": [1, 5, 17, 18, 19, 40, 41, 42], "fix_nan": [1, 5, 17, 18, 19, 40, 41, 42], "float": [1, 3, 5, 7, 11, 12, 13, 16, 17, 18, 19, 20, 21, 24, 40, 41, 42, 43, 44, 45, 57, 59, 60, 61, 64, 66, 68, 75, 76, 77], "gather": [1, 5, 17, 18, 19], "mean": [1, 3, 5, 11, 12, 17, 18, 19, 21, 24, 68, 74], "permut": [1, 5, 14, 17, 18, 19, 26, 40, 41, 42, 45, 46], "renam": [1, 5, 17, 18, 19, 40, 41, 42], "reshap": [1, 5, 7, 17, 18, 19, 21, 40, 41, 42, 46, 56], "size": [1, 5, 14, 16, 17, 18, 19, 22, 27, 40, 41, 42, 43, 46, 60, 66, 68], "split": [1, 5, 17, 18, 19, 40, 41, 42], "sqrt": [1, 5, 10, 17, 18, 19, 22, 41, 43], "squar": [1, 5, 17, 18, 19, 22, 23, 31, 41, 43, 52, 68], "squeez": [1, 5, 17, 18, 19, 40, 41, 42, 43], "sum": [1, 5, 17, 18, 19, 25, 31, 40, 41, 42, 52], "transpos": [1, 5, 17, 18, 19, 33, 40, 41, 42, 56], "varianc": [1, 5, 17, 18, 19, 74], "tensor_graph_mode_test": [1, 5, 17, 18], "testmaskedtensor": [1, 5, 17, 18, 20, 21], "test_eq_graph_execut": [1, 5, 17, 18, 20], "test_float_graph_execution_fail": [1, 5, 17, 18, 20], "tensor_test": [1, 5, 17, 18, 74], "test_fix_nan": [1, 5, 17, 18, 21], "test_float_eager_execution_return_type_is_correct": [1, 5, 17, 18, 21], "test_mean": [1, 5, 17, 18, 21], "test_reshape_identical_to_numpy_reshap": [1, 5, 17, 18, 21], "test_reshape_return_type_is_correct": [1, 5, 17, 18, 21], "test_std": [1, 5, 17, 18, 21], "create_random_numpy_tensor_and_mask": [1, 5, 17, 18, 21], "maskedtensorflow": [1, 5, 17, 18, 22, 23], "concat": [1, 5, 17, 18, 22, 23], "stack": [1, 3, 5, 17, 18, 22, 23, 40, 41, 43, 44], "tensorflowfallback": [1, 5, 17, 18, 22], "doesnt_change_mask": [1, 5, 17, 18, 22, 40, 41, 43], "tensorflow_test": [1, 5, 17, 18], "testmaskedtensorflow": [1, 5, 17, 18, 23], "test_cat": [1, 5, 17, 18, 23, 40, 41, 44], "test_not_implemented_method": [1, 5, 17, 18, 23, 40, 41, 44], "test_stack": [1, 5, 17, 18, 23, 40, 41, 44], "test_zeros_mask_valu": [1, 5, 17, 18, 23, 40, 41, 44], "test_zeros_tensor_shap": [1, 5, 17, 18, 23, 40, 41, 44], "test_zeros_tensor_type_bool": [1, 5, 17, 18, 23, 40, 41, 44], "test_zeros_tensor_type_float": [1, 5, 17, 18, 23, 40, 41, 44], "test_zeros_tensor_valu": [1, 5, 17, 18, 23, 40, 41, 44], "angl": [1, 5, 17, 28, 30, 33, 34, 40, 47, 49, 52, 53, 60], "anglerepresent": [1, 5, 17, 28, 29, 30, 40, 47, 48, 49], "angle_test": [1, 5, 17, 28, 40, 47], "testanglerepresent": [1, 5, 17, 28, 30, 40, 47, 49], "test_call_value_should_be_angl": [1, 5, 17, 28, 30, 40, 47, 49], "inner_angl": [1, 5, 17, 28, 40, 47], "inneranglerepresent": [1, 5, 17, 28, 33, 34, 40, 47, 52, 53], "get_vectors_norm": [1, 5, 17, 28, 33, 40, 47, 52], "inner_angle_test": [1, 5, 17, 28, 40, 47], "testinneranglerepresent": [1, 5, 17, 28, 34, 40, 47, 53], "test_call_value_should_be_inner_angl": [1, 5, 17, 28, 34, 40, 47, 53], "point_line_dist": [1, 5, 17, 28, 40, 47], "pointlinedistancerepresent": [1, 5, 17, 28, 35, 36, 40, 47, 54, 55], "point_line_distance_test": [1, 5, 17, 28, 40, 47], "testpointlinedistancerepresent": [1, 5, 17, 28, 36, 40, 47, 55], "tensorflowposebodi": [1, 5, 7, 12, 17, 24, 25, 74], "as_tfrecord": [1, 5, 17, 24], "frame_dropout_given_perc": [1, 5, 12, 17, 24], "frame_dropout_norm": [1, 5, 11, 12, 15, 17, 24, 83], "frame_dropout_uniform": [1, 5, 11, 12, 15, 17, 24, 83], "from_tfrecord": [1, 5, 17, 24], "select_fram": [1, 5, 12, 17, 24], "pose_body_test": [1, 5], "testtensorflowposebodi": [1, 5, 17, 25], "test_tf_pose_body_zero_filled_fills_in_zero": [1, 5, 17, 25], "pose_represent": 1, "tensorflowposerepresent": [1, 5, 17, 26, 27], "group_emb": [1, 5, 14, 17, 26, 40, 46], "pose_representation_test": [1, 5], "testtensorflowposerepresent": [1, 5, 17, 27], "test_calc_output_s": [1, 5, 17, 27], "test_call_return_shap": [1, 5, 17, 27], "test_input_s": [1, 5, 17, 27], "third_parti": [1, 4, 5], "subpackag": [1, 4], "py": [1, 5, 38, 74], "pow_": [1, 5, 40, 41, 42], "maskedtorch": [1, 5, 40, 41, 43], "cat": [1, 5, 40, 41, 43, 44], "torchfallback": [1, 5, 40, 41, 43], "torch_test": [1, 5, 40], "testmaskedtorch": [1, 5, 40, 41, 44], "forward": [1, 5, 40, 47, 48, 50, 52, 54, 56, 57, 68], "train": [1, 5, 40, 47, 48, 50, 52, 54, 56, 57, 68], "point": [1, 5, 7, 9, 10, 11, 12, 13, 14, 17, 20, 24, 26, 29, 31, 33, 35, 40, 45, 47, 48, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 66, 74, 78, 81], "pointsrepresent": [1, 5, 40, 47, 56], "torchposebodi": [1, 5, 7, 12, 40, 45, 74], "torchposerepresent": [1, 5, 40, 46], "rep_modules1": [1, 5, 14, 17, 26, 40, 46], "rep_modules2": [1, 5, 14, 17, 26, 40, 46], "rep_modules3": [1, 5, 14, 17, 26, 40, 46], "fast_math": [1, 5, 57], "distance_batch": [1, 5, 57, 58], "normalization_3d": [1, 5, 57], "posenorm": [1, 5, 57, 60, 81], "get_norm": [1, 5, 57, 60], "get_rotation_angl": [1, 5, 57, 60], "normalize_pos": [1, 5, 57, 60], "rotat": [1, 5, 12, 57, 60, 81], "rotate_to_norm": [1, 5, 57, 60], "scale": [1, 5, 11, 12, 57, 60, 74], "openpos": [1, 5, 57, 62, 63, 79], "openpose_hand_compon": [1, 5, 57, 61], "get_frame_id": [1, 5, 57, 61], "limbs_index": [1, 5, 57, 61], "load_frames_directory_dict": [1, 5, 57, 61], "load_openpos": [1, 5, 57, 61, 63], "load_openpose_directori": [1, 5, 57, 61, 63, 74], "openpose_135": [1, 5, 57], "load_openpose_135_directori": [1, 5, 57, 62], "openpose_test": [1, 5, 57], "testloadopenpos": [1, 5, 57, 63], "test_load_openpose_data_shap": [1, 5, 57, 63], "test_load_openpose_data_shape_missing_fram": [1, 5, 57, 63], "test_load_openpose_extracts_correct_number_of_peopl": [1, 5, 57, 63], "test_load_openpose_fixed_num_fram": [1, 5, 57, 63], "test_load_openpose_fixed_num_frames_and_missing_fram": [1, 5, 57, 63], "test_load_openpose_returns_pose_object": [1, 5, 57, 63], "testloadopenposedirectori": [1, 5, 57, 63], "test_get_frame_id_no_prefix": [1, 5, 57, 63], "test_get_frame_id_nonzero": [1, 5, 57, 63], "test_get_frame_id_several_digit": [1, 5, 57, 63], "test_get_frame_id_zero": [1, 5, 57, 63], "test_load_openpose_directory_data_shap": [1, 5, 57, 63], "test_load_openpose_directory_data_shape_add_empty_kei": [1, 5, 57, 63], "test_load_openpose_directory_data_shape_missing_fram": [1, 5, 57, 63], "test_load_openpose_directory_data_shape_no_file_prefix": [1, 5, 57, 63], "test_load_openpose_directory_extracts_correct_number_of_peopl": [1, 5, 57, 63], "test_load_openpose_directory_returns_pose_object": [1, 5, 57, 63], "testopenposecompon": [1, 5, 57, 63], "test_openpose_components_nam": [1, 5, 57, 63], "test_openpose_components_total_point": [1, 5, 57, 63], "test_openpose_num_points_per_component_fac": [1, 5, 57, 63], "test_openpose_num_points_per_component_hand_left": [1, 5, 57, 63], "test_openpose_num_points_per_component_hand_right": [1, 5, 57, 63], "test_openpose_num_points_per_component_pos": [1, 5, 57, 63], "optical_flow": [1, 5, 57, 79, 82], "opticalflowcalcul": [1, 5, 57, 64], "reader": [1, 3, 5, 7, 12, 13, 40, 45, 57, 74], "bufferread": [1, 5, 7, 12, 13, 57, 66, 67], "advanc": [1, 5, 57, 66, 67], "bytes_left": [1, 5, 57, 66, 67], "unpack": [1, 5, 7, 40, 45, 57, 66, 67], "unpack_f": [1, 5, 57, 66, 67], "unpack_numpi": [1, 5, 7, 57, 66, 67], "unpack_str": [1, 5, 57, 66, 67], "unpack_tensorflow": [1, 5, 57, 66, 67], "unpack_torch": [1, 5, 57, 66, 67], "conststruct": [1, 5, 57, 66], "double_ushort": [1, 5, 57, 66], "short": [1, 5, 57, 66, 75, 76, 77], "triple_ushort": [1, 5, 57, 66], "ushort": [1, 5, 57, 66], "reader_test": [1, 5, 57], "testbufferread": [1, 5, 57, 67], "test_adv": [1, 5, 57, 67], "test_bytes_left": [1, 5, 57, 67], "test_unpack": [1, 5, 57, 67], "test_unpack_f": [1, 5, 57, 67], "test_unpack_numpi": [1, 5, 57, 67], "test_unpack_numpy_writ": [1, 5, 57, 67], "test_unpack_str": [1, 5, 57, 67], "test_unpack_tensorflow": [1, 5, 57, 67], "test_unpack_torch": [1, 5, 57, 67], "siren": [1, 5, 57], "sinelay": [1, 5, 57, 68], "omega_0": [1, 5, 57, 68], "is_first": [1, 5, 57, 68], "forward_with_intermedi": [1, 5, 57, 68], "init_weight": [1, 5, 57, 68], "forward_with_activ": [1, 5, 57, 68], "masked_mse_loss": [1, 5, 57, 68], "pose_convert": [1, 5, 57], "convert_pos": [1, 5, 57, 65], "save_imag": [1, 5, 57, 65], "holist": [1, 5, 57], "face_point": [1, 5, 57, 59], "face_points_num": [1, 5, 57, 59], "body_point": [1, 5, 57, 59], "component_point": [1, 5, 57, 59], "formatted_holistic_pos": [1, 5, 57, 59], "holistic_compon": [1, 5, 57, 59], "holistic_hand_compon": [1, 5, 57, 59], "load_holist": [1, 5, 57, 59], "load_mediapipe_directori": [1, 5, 57, 59, 74], "process_holist": [1, 5, 57, 59], "get_compon": [1, 5, 11], "pass_through_method": [1, 5, 11], "posebodi": [1, 5, 7, 11, 12, 15, 17, 24, 40, 45, 83, 84], "augment2d": [1, 5, 11, 12, 74], "read_v0_1": [1, 5, 12], "read_v0_1_fram": [1, 5, 12], "slice_step": [1, 5, 11, 12], "pose_head": 1, "posehead": [1, 5, 7, 11, 12, 13, 14, 17, 26, 40, 46, 61], "total_point": [1, 5, 13], "poseheadercompon": [1, 5, 13, 59, 61, 65], "get_relative_limb": [1, 5, 13], "poseheaderdimens": [1, 5, 13], "posenormalizationinfo": [1, 5, 11, 13, 60], "poserepresent": [1, 5, 14, 17, 26, 40, 46], "input_s": [1, 5, 14], "rep_modules1_s": [1, 5, 14], "rep_modules2_s": [1, 5, 14], "rep_modules3_s": [1, 5, 14], "output_s": [1, 5, 14], "calc_output_s": [1, 5, 14], "get_limbs_point": [1, 5, 14], "get_triangles_point": [1, 5, 14], "fastanduglyposevisu": [1, 5, 16], "draw_on_video": [1, 5, 16, 74], "save_fram": [1, 5, 16], "save_gif": [1, 5, 16, 74], "pose_view": [1, 2], "exampl": [1, 2, 5, 13, 58, 60, 61, 72, 73, 74, 81], "convers": [1, 7], "spec": [1, 3, 5, 7, 12, 71, 74], "v0": [1, 74], "md": [1, 74], "moryossef": [1, 3, 74], "mathia": [1, 74], "m": [1, 74], "\u00fc": 1, "ller": [1, 74], "librari": [1, 3, 4, 5, 6, 38, 74], "view": [1, 5, 12, 74], "augment": [1, 5, 11, 12], "http": [1, 3, 5, 12, 52, 54, 71, 74, 78], "github": [1, 74, 78], "com": [1, 52, 74, 78], "sign": [1, 66, 74, 81], "languag": [1, 74], "process": [1, 4, 5, 16, 40, 46, 56, 59, 74], "2021": [1, 74], "index": [1, 3, 5, 7, 11, 12, 13, 17, 19, 24, 40, 45, 59, 69, 71, 72, 75, 76, 77], "search": 1, "page": 1, "json": [2, 61, 69, 72, 78], "src": [2, 3, 5, 14, 17, 26, 40, 46, 64, 69, 71, 72], "pose": [2, 3, 4, 7, 12, 13, 14, 15, 16, 17, 24, 26, 27, 37, 40, 45, 46, 59, 60, 61, 62, 63, 65, 68, 72, 73, 78, 79, 81, 82, 83, 84], "viewer": [2, 72, 73], "descript": [3, 71, 73, 78, 81], "titl": [3, 71, 73, 74, 78], "name": [3, 5, 7, 11, 13, 19, 41, 42, 59, 61, 63, 65, 71, 75, 76, 77, 78], "format": [3, 5, 7, 11, 12, 13, 14, 17, 24, 40, 45, 56, 59, 61, 66, 68, 71, 73, 75, 76, 77, 78], "version": [3, 5, 7, 12, 13, 33, 71, 75, 76, 77, 78], "tsc": 3, "w": [3, 59, 71], "dist": [3, 71], "j": [3, 71, 78], "author": [3, 74], "licens": [3, 71], "mit": [3, 71], "depend": [3, 5, 12, 71], "binari": [3, 7, 66, 71, 74, 78], "parser": [3, 69, 71], "2": [3, 5, 10, 11, 12, 17, 24, 40, 46, 58, 60, 68, 71, 81], "devdepend": [3, 71], "type": [3, 5, 7, 9, 11, 12, 13, 14, 16, 17, 19, 21, 22, 24, 26, 31, 33, 40, 41, 42, 43, 44, 45, 46, 48, 50, 52, 54, 56, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 71, 73, 74], "node": [3, 71], "17": [3, 61], "42": 3, "typescript": [3, 71, 73, 78], "7": [3, 71], "lockfilevers": [3, 71], "node_modul": [3, 71], "resolv": [3, 71], "registri": [3, 71], "npmj": [3, 71], "org": [3, 5, 12, 54, 71], "tgz": [3, 71], "integr": [3, 5, 6, 71], "sha512": [3, 71], "q5bpgygkcvqgambsr7qegn": 3, "kipn6zzecyyabetdbizosau": 3, "2nmdsvtar9uqw21a2": 3, "jya2krndyayrpb0rpk2oq": 3, "dev": [3, 71], "r6ws2w7a7uhafylm0vwlk5m2atayojiybzp": 3, "bvuzputeuu5hi9barehkaflgpq": 3, "nkhemgsxzozp": 3, "x3nxddqiq": 3, "engin": [3, 71], "12": [3, 71], "wokt3xyvrpxx4vmmqld": 3, "8r8r37fzkjylglxavmc4ib8lrl8l0detchbygw": 3, "v0n": 3, "z9wafsgbhcsf0ruoyss22ma": 3, "bin": [3, 71], "tsserver": 3, "compileropt": [3, 71], "noimplicitreturn": 3, "skiplibcheck": 3, "nounusedloc": [3, 71], "outdir": 3, "sourcemap": [3, 71], "strict": 3, "target": [3, 41, 42, 71, 73, 78], "es2017": [3, 71], "moduleresolut": [3, 71], "compileonsav": 3, "binary_pars": 3, "d": [3, 58, 71, 72], "includ": [3, 4, 5, 7, 11, 16, 71, 74], "exclud": [3, 71], "rule": 3, "error": [3, 20, 68, 74, 78, 84], "These": [3, 5], "lint": 3, "ar": [3, 5, 7, 12, 17, 21, 23, 27, 30, 32, 34, 36, 39, 41, 42, 43, 49, 52, 53, 60, 61, 63, 68, 74, 84], "like": [3, 7, 58], "alwai": 3, "good": 3, "idea": 3, "forc": 3, "overload": 3, "declar": [3, 71, 73], "togeth": 3, "api": 3, "adjac": 3, "signatur": 3, "do": [3, 5, 12, 19, 74], "allow": [3, 7], "subtl": 3, "obscur": 3, "comma": 3, "ban": 3, "intern": [3, 73, 74], "namespac": [3, 71, 73], "deprec": [3, 71], "favor": 3, "es6": 3, "reassign": 3, "avoid": [3, 71], "bug": 3, "develop": [3, 74], "should": [3, 5, 7, 13, 20], "instead": 3, "assign": 3, "var": [3, 73, 78], "style": 3, "refer": [3, 82], "assert": 3, "noth": 3, "big": [3, 5, 11], "warn": 3, "mai": 3, "code": [3, 59], "current": [3, 5, 7, 12, 66], "being": [3, 5, 13], "edit": [3, 4], "thei": [3, 74], "incorrectli": 3, "differ": [3, 5, 12, 31, 74], "case": [3, 5, 10, 30, 32, 34, 36, 41, 44, 49, 53, 61, 63, 78, 81, 82], "unnecessari": 3, "disallow": 3, "nonsens": 3, "label": 3, "posit": [3, 74], "often": 3, "typo": 3, "syntax": 3, "var1": 3, "var2": 3, "replac": [3, 5, 12, 19, 41, 42], "condit": 3, "constructor": [3, 78], "primit": 3, "e": [3, 5, 12, 78], "g": [3, 5, 12, 78], "number": [3, 5, 12, 13, 16, 19, 20, 21, 58, 59, 61, 63, 66, 67, 68, 73, 74, 75, 76, 77, 78], "123": 3, "though": 3, "still": 3, "super": 3, "twice": 3, "duplic": 3, "same": [3, 5, 9, 13, 19, 41, 42, 48, 52, 58, 74], "appear": 3, "more": [3, 74], "than": [3, 5, 9, 12], "onc": [3, 74], "switch": [3, 78], "block": 3, "variabl": [3, 62], "consid": [3, 41, 42, 59, 74], "check": [3, 5, 10, 15, 17, 23, 25, 27, 83, 84], "definit": 3, "inner": [3, 33, 34, 52], "scope": 3, "shadow": 3, "outer": 3, "separ": [3, 61, 74], "empti": [3, 5, 14, 63], "almost": 3, "never": 3, "gener": [3, 5, 13, 16, 21, 71, 74, 82], "except": 3, "catch": [3, 78], "must": [3, 5, 14, 61, 62], "directli": 3, "handler": 3, "anoth": [3, 19, 41, 42], "major": 3, "sourc": [3, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 82, 83, 84], "cloud": 3, "team": 3, "strongli": 3, "recommend": 3, "leav": 3, "promis": [3, 73], "ani": [3, 5, 12, 13, 20, 41, 42, 52, 74, 78], "certainli": 3, "fail": [3, 84], "when": [3, 41, 44, 61, 63, 74], "deploi": 3, "implicit": 3, "keyword": [3, 62], "onli": [3, 5, 7, 12, 17, 24, 62, 68], "insid": 3, "class": [3, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 63, 64, 66, 67, 68, 74, 78, 81, 82, 83, 84], "invalid": [3, 7, 19, 40, 45], "string": [3, 59, 66, 71, 73, 75, 76, 77, 78], "thrown": 3, "becaus": 3, "trace": 3, "throw": [3, 78], "control": [3, 68], "flow": [3, 64, 82], "statement": 3, "continu": 3, "break": [3, 78], "final": [3, 60, 68], "unsaf": 3, "express": [3, 61], "common": 3, "const": [3, 71, 78], "myvalu": 3, "functionreturningvoid": 3, "void": [3, 73], "ignor": [3, 78], "arrow": 3, "shorthand": 3, "strong": 3, "due": [3, 5, 12], "legaci": 3, "left": [3, 66, 67], "frustrat": 3, "want": [3, 59, 74], "anywai": 3, "interfac": [3, 38, 73, 78], "sever": [3, 63], "side": 3, "effect": [3, 5, 16], "ha": [3, 4, 9, 17, 27, 63, 71], "lead": 3, "prefer": 3, "most": 3, "let": [3, 78], "over": [3, 19, 41, 42], "latter": 3, "accident": 3, "tripl": 3, "equal": [3, 17, 20, 25, 53], "light": 3, "intend": 3, "help": [3, 4, 5, 74], "simpler": 3, "fewer": [3, 9], "would": [3, 61], "level": [3, 40, 46], "loop": [3, 73], "fetch": [3, 78], "even": 3, "map": [3, 5, 11, 13, 15, 78, 83], "could": 3, "unifi": 3, "singl": [3, 5, 16, 61], "rest": 3, "document": 3, "multi": 3, "line": [3, 29, 35, 48, 54, 55, 60], "liter": 3, "trail": 3, "merg": 3, "conflict": 3, "defaultsever": 3, "aim": 4, "user": [4, 20], "manag": [4, 5, 22], "analysi": 4, "mani": [4, 74], "It": [4, 5, 10, 16, 17, 22, 25, 62, 73, 74], "wide": 4, "rang": [4, 5, 12], "cross": [4, 81], "compat": [4, 17, 60, 62], "between": [4, 5, 9, 10, 11, 12, 29, 31, 35, 48, 50, 52, 54, 55, 58, 64, 74], "popular": [4, 5, 7], "pytorch": [4, 5, 7, 40, 41, 42, 45, 46, 66, 74], "present": 4, "multipl": [4, 7, 19, 40, 41, 42, 45], "agument": 4, "capabl": 4, "raw": 4, "overlai": [4, 74], "video": [4, 5, 16, 61, 74], "organ": 4, "compon": [4, 5, 7, 11, 13, 14, 59, 62, 63, 65, 71, 72, 78], "serv": [4, 71], "purpos": 4, "interact": 4, "tool": [4, 5, 17, 38], "extern": 4, "_pose_format_util": 4, "reliabl": [4, 5, 7], "setup": 4, "found": [4, 74], "here": [5, 39], "breakdown": 5, "offer": [5, 74], "numer": 5, "comput": [5, 7, 9, 10, 11, 12, 19, 21, 23, 31, 33, 35, 48, 49, 50, 52, 53, 54, 55, 58, 60, 64, 68, 74, 82], "context": [5, 20], "therefor": [5, 74], "within": [5, 15, 83], "entir": [5, 19], "third": [5, 13, 38, 39, 52], "parti": [5, 38, 39], "contain": [5, 7, 11, 12, 14, 15, 17, 19, 21, 24, 33, 39, 40, 41, 42, 45, 59, 61, 62, 68, 73, 74, 83], "repres": [5, 7, 11, 13, 14, 29, 31, 33, 40, 46, 48, 50, 52, 54, 56], "consist": [5, 68, 71, 74], "base": [5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 61, 63, 64, 65, 66, 67, 68, 81, 82, 83, 84], "io": [5, 11], "attribut": [5, 7, 11, 12, 17, 22, 24, 40, 41, 43, 45, 48, 50, 52, 54, 56, 60, 66, 68], "calcul": [5, 9, 11, 14, 17, 27, 30, 31, 32, 34, 36, 48, 50, 52, 53, 54, 68, 81], "bound": [5, 7, 11, 12, 13], "box": [5, 7, 11, 12, 13], "dimens": [5, 9, 11, 12, 13, 17, 19, 26, 40, 41, 42, 43, 44, 45, 46, 52, 56, 74], "dropout_mean": [5, 11, 12, 17, 24], "5": [5, 10, 11, 12, 13, 17, 24, 68], "dropout_std": [5, 11, 12, 17, 24], "dropout": [5, 11, 12, 15, 17, 24, 83, 84], "default": [5, 11, 12, 13, 14, 16, 17, 19, 21, 22, 24, 41, 42, 43, 59, 60, 61, 66, 68, 74, 78], "deviat": [5, 11, 12, 17, 19, 21, 24, 74], "drop": [5, 11, 12, 17, 24], "list": [5, 7, 11, 12, 13, 14, 17, 19, 22, 24, 26, 40, 41, 42, 43, 45, 46, 59, 61, 62, 65, 79], "select": [5, 11, 12, 17, 19, 24], "dropout_min": [5, 11, 12, 17, 24], "dropout_max": [5, 11, 12, 17, 24], "uniform": [5, 11, 12, 15, 17, 24, 83, 84], "minimum": [5, 11, 12, 17, 24], "maximum": [5, 11, 12, 16, 17, 24], "criteria": [5, 11], "str": [5, 7, 11, 13, 16, 17, 19, 24, 41, 42, 59, 61, 65, 66], "dict": [5, 11, 12, 17, 24, 59, 61], "fix": [5, 11, 21, 63], "two": [5, 7, 9, 10, 11, 13, 14, 23, 29, 31, 41, 42, 48, 50, 58, 64, 66], "particular": [5, 11], "factor": [5, 11], "axi": [5, 7, 11, 19, 22, 23, 29, 31, 48, 60, 74], "ndarrai": [5, 7, 11, 12, 16, 17, 24, 40, 45, 60, 66], "ax": [5, 11], "set": [5, 9, 10, 11, 31, 41, 42, 48, 50, 52, 53, 56, 58, 65, 68, 74], "which": [5, 7, 11, 12, 13, 14, 16, 19, 22, 41, 42, 43, 52, 54, 60, 66, 74], "action": [5, 11, 19, 41, 42], "2d": [5, 11, 12, 74], "step": [5, 11, 68], "static": [5, 11, 13, 22, 41, 43, 68, 78], "kwarg": [5, 11, 12, 48, 50, 52, 56, 62], "byte": [5, 11, 66, 67], "deviationn": [5, 11], "binaryio": [5, 7, 11, 12, 13], "peopl": [5, 12, 63, 75, 76, 77, 78], "dim": [5, 12, 19, 31, 41, 42, 43, 48, 50, 52, 54, 56, 78], "93": [5, 12], "137": [5, 12], "rotation_std": [5, 12, 74], "shear_std": [5, 12, 74], "scale_std": [5, 12, 74], "radian": [5, 12, 48], "shear": [5, 12], "x": [5, 12, 29, 48, 60, 74, 75, 76, 77, 78, 81], "percent": [5, 12], "modifi": [5, 7, 12, 62], "en": [5, 12, 54], "wikipedia": [5, 12, 54], "wiki": [5, 12, 54], "shear_matrix": [5, 12], "rotation_matrix": [5, 12], "scaling_": [5, 12], "geometri": [5, 12], "For": [5, 12, 19, 61, 68, 74], "everi": [5, 12, 74], "item": [5, 12, 78], "millisecond": [5, 12], "person": [5, 12, 78], "id": [5, 12, 61, 63, 75, 78], "y": [5, 12, 29, 48, 60, 74, 75, 76, 77, 78], "z": [5, 12, 60, 78], "6": [5, 10, 12, 71, 78], "estim": [5, 12, 16], "detail": [5, 12, 16, 73, 74], "rais": [5, 12, 13, 14, 17, 20, 25, 41, 42, 60, 82], "notimplementederror": [5, 12, 14], "specif": [5, 12, 17, 26, 40, 45, 61, 68, 74, 79], "dropout_perc": [5, 12, 17, 24], "percentag": [5, 12, 17, 24], "20": [5, 12, 13], "gotten": [5, 12, 14, 17, 24], "actual": [5, 12], "slightli": [5, 12], "round": [5, 12, 78], "retriev": [5, 12], "randomli": [5, 12, 17, 24], "were": [5, 12], "retain": [5, 12], "indic": [5, 7, 12, 13, 14, 17, 19, 26, 59, 61], "choosen": [5, 12], "matrix": [5, 7, 12, 17, 19, 24, 40, 41, 42, 45], "multipli": [5, 7, 12, 17, 24, 41, 42, 68], "perspect": [5, 7, 12, 17, 24, 40, 45], "adjust": [5, 12, 74], "classmethod": [5, 7, 12, 17, 24], "addit": [5, 12, 40, 46, 59, 68], "initi": [5, 10, 12, 41, 44, 60, 65, 68, 74], "unused_kwarg": [5, 7, 12], "unus": [5, 12], "sinc": [5, 12, 59], "start_fram": [5, 12], "end_fram": [5, 12], "first": [5, 9, 12, 13, 17, 26, 31, 48, 50, 52, 56, 62, 68], "last": [5, 9, 12, 31, 52, 61], "specifi": [5, 7, 12, 16, 17, 19, 22, 25, 40, 41, 42, 43, 44, 45, 46, 66], "valueerror": [5, 12, 13, 60], "greater": [5, 12], "frame_index": [5, 12, 17, 24], "indexerror": [5, 12], "valid": [5, 12, 17, 27, 37, 41, 42, 82], "slice": [5, 12], "skip": [5, 12], "row": [5, 7, 12], "affect": [5, 12], "take": [5, 12, 31, 52], "abstract": [5, 7, 12], "NOT": [5, 12], "is_bbox": [5, 13], "fals": [5, 13, 16, 19, 41, 42, 59, 68, 71], "bool": [5, 13, 16, 19, 23, 41, 42, 48, 50, 52, 54, 56, 59, 68], "total": [5, 13, 14, 59, 63, 68, 74], "across": [5, 7, 13, 14, 74], "all": [5, 13, 14, 16, 19, 23, 41, 42, 44, 71, 73, 74, 79], "10": [5, 13, 71], "p3": [5, 13, 52, 54, 60], "normaliz": [5, 13], "limb": [5, 13, 14, 61, 78], "color": [5, 13, 16, 61, 78], "point_format": [5, 13], "rgb": [5, 13, 16], "each": [5, 7, 13, 14, 17, 19, 26, 33, 41, 42, 48, 58, 59, 60, 61, 74], "length": [5, 13, 62, 78], "correspond": [5, 13, 21, 41, 42, 61], "rel": [5, 13], "Then": [5, 13, 56], "attempt": [5, 13, 20], "self": [5, 13, 19], "expect": [5, 13, 15, 17, 23, 25, 27, 49, 53, 55, 61, 63, 83], "where": [5, 7, 10, 13, 16, 19, 58, 61, 74], "width": [5, 13, 59, 61, 73, 74, 75, 76, 77, 78], "height": [5, 13, 54, 59, 61, 73, 74, 75, 76, 77, 78], "depth": [5, 13, 59, 61, 75, 76, 77, 78], "arg": [5, 13, 19, 41, 42, 48, 50, 52, 56, 62], "65535": [5, 13], "written": [5, 13], "about": [5, 14, 74], "triangl": [5, 14, 33, 52, 54, 60], "count": [5, 14, 15, 83], "overal": [5, 14], "output": [5, 14, 17, 22, 23, 27, 53, 56, 61, 63, 68], "activ": [5, 14, 68], "end": [5, 14, 54, 73], "extract": [5, 14, 61, 63], "make": [5, 7, 14, 41, 43, 49, 59, 74], "up": [5, 14, 53, 59], "three": [5, 14, 53, 54, 66], "corner": [5, 14], "emb": [5, 14, 17, 26, 40, 46], "group": [5, 14, 17, 26, 40, 46], "embed": [5, 14, 17, 26, 40, 46], "desir": [5, 7, 14, 17, 21, 26, 40, 41, 42, 43, 44, 46, 56, 60], "subclass": [5, 7, 14], "embed_s": [5, 14, 17, 26, 40, 46], "batch": [5, 14, 17, 26, 31, 40, 46, 48, 50, 52, 54, 56, 58, 68], "accord": [5, 14, 17, 19, 26, 40, 45, 46], "methodnam": [5, 10, 15, 17, 20, 21, 23, 25, 27, 30, 32, 34, 36, 41, 44, 49, 51, 53, 55, 63, 67, 81, 82, 83, 84], "runtest": [5, 10, 15, 17, 20, 21, 23, 25, 27, 30, 32, 34, 36, 41, 44, 49, 51, 53, 55, 63, 67, 81, 82, 83, 84], "testcas": [5, 10, 15, 17, 20, 21, 23, 25, 27, 30, 32, 34, 36, 41, 44, 49, 51, 53, 55, 63, 67, 81, 82, 83, 84], "callabl": [5, 15, 64, 83], "preserv": [5, 15, 19, 83], "tf": [5, 15, 17, 19, 22, 23, 24, 26, 31, 33, 83], "eager": [5, 15, 21, 83], "mode": [5, 15, 83, 84], "thick": [5, 16, 73], "grayscal": [5, 16], "without": [5, 16, 20, 59, 63, 84], "opac": [5, 16], "faster": [5, 16], "less": [5, 16, 62], "opencv": [5, 16], "inherit": [5, 7, 16, 17, 24, 26], "posevisza": [5, 16], "background_color": [5, 16], "foreground_color": [5, 16], "255": [5, 16], "plain": [5, 16], "background": [5, 16, 73], "foreground": [5, 16], "yield": [5, 16], "drawn": [5, 16], "imag": [5, 16, 65, 74, 79, 82], "pose_fp": [5, 16], "rate": [5, 7, 16, 68, 74], "cv2": [5, 16], "bind": [5, 16], "white": [5, 16], "custom": [5, 16, 19, 41, 42, 60], "background_video": [5, 16], "blur": [5, 16], "iter": [5, 16], "overlaid": [5, 16], "f_name": [5, 16], "save": [5, 16, 65, 74], "im": [5, 16], "filensmr": [5, 16], "seri": [5, 16], "gif": [5, 16, 74], "filenam": [5, 16, 61, 63], "custom_ffmpeg": [5, 16], "ffmpeg": [5, 16], "leverag": 7, "optim": [7, 17, 24, 68], "suitabl": [7, 56, 74], "applic": 7, "effici": 7, "come": 7, "other": [7, 19, 41, 42, 54], "tempor": 7, "aspect": 7, "union": [7, 17, 24, 41, 42], "maskedarrai": [7, 9, 21, 60], "regular": [7, 61], "associ": [7, 17, 27, 40, 45], "keypoint": [7, 74], "dimension": [7, 58], "filter": 7, "remov": [7, 17, 19, 21, 24, 41, 43], "along": [7, 17, 19, 22, 23, 26, 31, 40, 41, 42, 43, 44, 45, 52, 68], "kind": [7, 74], "cubic": [7, 74], "match": [7, 21, 49, 53, 56, 60, 63, 82], "linear": [7, 68, 74], "quadrat": 7, "properti": 7, "see": [7, 68, 74, 81], "doc": [7, 71, 74], "euclidean": [9, 10, 31, 35, 50, 54, 58], "collaps": 9, "assum": [9, 58, 62, 68], "unit": [10, 20, 21, 53, 74], "scenario": 10, "correct": [10, 17, 23, 27, 30, 32, 34, 36, 41, 44, 49, 53, 63, 67, 82], "27": 10, "score": [17, 24, 68], "record": [17, 24], "dictionari": [17, 24, 61], "some": [17, 24], "random": [17, 21, 24], "tfrecord_dict": [17, 24], "subset": [17, 24], "unpack_tensorflowstr": [17, 24], "testscas": [17, 25], "correctli": [17, 21, 25, 41, 44, 60, 63], "assertionerror": [17, 25, 82], "extend": [17, 26, 40, 45, 46, 73], "accur": [17, 27], "element": [19, 21, 41, 42], "wise": [19, 41, 42], "in_plac": [19, 41, 42], "update_mask": [19, 41, 42], "divid": [19, 33, 41, 42, 52, 68], "divisor": 19, "whether": [19, 41, 42], "divis": [19, 41, 42], "place": [19, 41, 42, 78], "updat": [19, 41, 42, 62, 66], "nan": [19, 21, 41, 42, 52], "while": 19, "keep": [19, 68], "float32": [19, 22, 23], "sxi": 19, "order": [19, 41, 42], "split_size_or_sect": [19, 41, 42], "section": [19, 41, 42], "root": [19, 31, 52], "origin": [19, 52, 60], "perm": 19, "transposit": 19, "dure": [20, 21], "graph": [20, 84], "evalu": 20, "compar": [20, 82], "typeerror": 20, "cast": 21, "produc": [21, 41, 44], "ident": 21, "itself": 21, "probability_for_mask": 21, "num_nan": 21, "probabl": 21, "insert": 21, "metaclass": 22, "explicitli": [22, 23], "concaten": [22, 23, 41, 43, 44], "dtype": [22, 23, 41, 43], "datatyp": 22, "fallback": [22, 23, 41, 43], "aco": [22, 41, 43], "asin": [22, 41, 43], "atan": [22, 41, 43], "co": [22, 41, 43], "sin": [22, 41, 43], "tan": [22, 41, 43], "via": [23, 53], "form": [29, 33, 48, 54, 61], "vector": [33, 52, 60, 81], "note": [33, 52], "magnitud": [33, 52, 68], "norm": 33, "segment": [35, 48, 54], "dataclass": 39, "build": [39, 71], "scipi": 39, "tqdm": 39, "move": [40, 41, 42, 45], "cofid": [40, 45], "gpu": [40, 41, 42, 45, 68], "points_dim": [40, 45], "unpack_torchstr": [40, 45], "describ": [40, 46, 68], "boolean": [41, 42, 44, 73], "helper": [41, 42], "operand": [41, 42], "devic": [41, 42], "non_block": [41, 42], "asynchron": [41, 42], "expon": [41, 42], "power": [41, 42], "chosen": [41, 42], "dim0": [41, 42], "dim1": [41, 42], "mimic": [41, 43], "masked_tensor": [41, 43], "meta": [41, 43], "mechan": [41, 43], "noindex": [41, 43], "unsqueez": [41, 43], "behavior": [41, 44], "invok": [41, 44], "unimpl": [41, 44], "made": 48, "slope": 48, "determin": [48, 54, 66, 68], "pair": 48, "arctang": 48, "sure": 49, "space": [50, 52, 61], "approach": 52, "suggest": 52, "stackoverflow": 52, "question": 52, "19729831": 52, "v1": 52, "v2": 52, "subtract": 52, "respect": [52, 60], "arccosin": [52, 53], "dot": 52, "product": [52, 81], "verifi": 53, "edg": 53, "appropri": 53, "middl": 53, "approxim": 53, "predefin": [53, 66], "heron": 54, "formula": 54, "area": 54, "27s_formula": 54, "n": 58, "41421356": 58, "additional_point": 59, "face": 59, "ad": [59, 63], "num": 59, "landmark": [59, 82], "coordin": [59, 68], "visibl": 59, "additional_face_point": 59, "pf": 59, "xyzc": 59, "hand": [59, 81], "24": [59, 61, 74], "1000": [59, 61, 74, 78], "kinect": 59, "progress": 59, "additional_holistic_config": 59, "bar": 59, "configur": 59, "model": [59, 68, 74], "directori": [59, 61, 62, 63, 74], "num_face_point": 59, "128": 59, "mediapip": [59, 79], "ideal": 59, "we": [59, 74], "hard": 59, "reduc": [59, 78], "refin": 59, "118": 59, "478": 59, "full": 59, "468": 59, "h": [59, 66, 71], "plane": [60, 81], "masked_arrai": 60, "degre": [60, 81], "fulli": 60, "around": 60, "so": 60, "align": 60, "aren": 60, "rotated_pos": 60, "lambda": 61, "constant": [61, 68, 74], "pattern": 61, "pars": [61, 78], "cam2_000000000017_keypoint": 61, "regex": 61, "openpose_frame_pattern": 61, "integ": [61, 66], "scheme": 61, "adher": 61, "arbitrari": [61, 62], "charact": 61, "_": 61, "frame_id": 61, "_keypoint": 61, "folder": 61, "identifi": 61, "kei": [61, 63, 78], "openposefram": 61, "content": 61, "num_fram": 61, "individu": [61, 74], "framer": 61, "known": 61, "cannot": 61, "deriv": 61, "That": 61, "opnepos": 62, "135": 62, "argument": [62, 74], "matric": 62, "least": 62, "prefix": 63, "non": 63, "digit": 63, "face_keypoints_2d": 63, "hand_left_keypoints_2d": 63, "hand_right_keypoints_2d": 63, "optic": [64, 82], "post": 64, "pre": 64, "pose_compon": 65, "read_offset": [66, 67], "offset": [66, 78], "struct": 66, "s_format": 66, "encod": 66, "utf": 66, "8": [66, 71], "hold": 66, "collect": [66, 71], "reus": 66, "unsign": [66, 75, 76, 77], "writeabl": 67, "durat": [68, 73], "in_featur": 68, "out_featur": 68, "bia": 68, "30": 68, "sine": 68, "layer": 68, "paper": 68, "learn": [68, 74], "hyperparamet": 68, "weight": 68, "sec": 68, "paragraph": 68, "supplement": 68, "discuss": 68, "nonlinear": 68, "pass": 68, "intermedi": 68, "act": 68, "hidden_featur": 68, "hidden_lay": 68, "outermost_linear": 68, "first_omega_0": 68, "hidden_omega_0": 68, "hidden": 68, "outermost": 68, "retain_grad": 68, "later": 68, "256": 68, "5000": 68, "05": 68, "batch_siz": 68, "until": 68, "summari": 68, "model_output": 68, "ground_truth": 68, "loss": 68, "floattensor": 68, "ground": 68, "truth": 68, "mse": 68, "lock": [69, 72], "tsconfig": [69, 72], "tslint": [69, 73], "thingi": [70, 73], "core": [71, 73, 74], "nodepolyfil": 71, "rollup": 71, "plugin": 71, "polyfil": 71, "export": [71, 73, 78], "buildes5": 71, "prod": 71, "outputtarget": 71, "esmloaderpath": 71, "loader": 71, "readm": 71, "www": 71, "servicework": 71, "null": 71, "disabl": [71, 73], "servic": 71, "worker": 71, "arrowparen": 71, "bracketspac": 71, "jsxbracketsamelin": 71, "jsxsinglequot": 71, "quoteprop": 71, "printwidth": 71, "180": 71, "semi": 71, "singlequot": 71, "tabwidth": 71, "trailingcomma": 71, "usetab": 71, "starter": 71, "cj": 71, "es2015": 71, "esm": 71, "mj": 71, "manifest": 71, "unpkg": 71, "watch": 71, "e2": 71, "watchal": 71, "myhrolnzatbujh0feggap2pwm5guvkb4wyrpzzftuzgxapamvrsreuf8qsge0c4ndfdk8nluaufxeege3z1": 71, "sw": 71, "14": 71, "npm": 71, "5atpz": 71, "updgq5ggedxtb4ouxcde7q2lqaqlsdbrqvl": 71, "ajnxmqmhifyxjx": 71, "0mgu": 71, "d5rhqifkfgbwwlaysg0o9na": 71, "estre": 71, "walker": 71, "sqmzanlws0mnatqbsfrp5g8oxzc12fgg1iwntlsyhdzjizorw4khdfjpqjzsempwbb2uqykuah5ypq6epsqc": 71, "magic": 71, "25": 71, "4crmt5dohtdk4hydlzmwu4fvcciyi8gauveasrdcu2ikifoj3f0v": 71, "8mdgjcdl9od2ppz": 71, "av1b0nj345h9m": 71, "xia": 71, "codec": 71, "7ekyjbm3gls3f77ebhe5b": 71, "mfb5u1f9ptlrdty0drtoij4d2qnl96auptk8lrkewo4o8k5y5nbu": 71, "lm1vpzwtteq": 71, "inject": 71, "ptg9pqwzs3orn4jkgxj74bfs5vyz1nczlsqmbua0wkcgp5i5pa1ao3fouete8enhguc": 71, "iaptczeww2jeffuo": 71, "been": 71, "longer": 71, "maintain": 71, "pleas": [71, 74], "pluginutil": 71, "4kcrkptj6sk4": 71, "gll": 71, "u5qzvt8cxjcofo0ou74tnb19f40cmuakszh5": 71, "siithxloffejwvw1yahpmbvgna6jeroa": 71, "eep9nhnukwy8aif6bxgovphmomonr2fuljzitndpt5h9rdwc47gsguii9xxpsdzvgm0gwrnphv6ie1ltnjpalq": 71, "9nykojv5uih4lgo5so5dtw": 71, "f0jgjx30kcni8gwhz2j9a15wd0ml6tjhkwf6ftsa6fadvbdzenos9ej71qck8va": 71, "allowsyntheticdefaultimport": 71, "allowunreachablecod": 71, "experimentaldecor": 71, "lib": 71, "dom": 71, "esnext": 71, "nounusedparamet": 71, "jsx": [71, 73], "react": 71, "jsxfactori": 71, "stencil": [72, 73], "config": 72, "prettierrc": 72, "html": 72, "eslint": 73, "autogener": 73, "compil": 73, "project": [73, 74], "htmlstencilel": 73, "jsxbase": 73, "posemodel": [73, 78], "poseview": 73, "aspectratio": 73, "autoplai": 73, "currenttim": 73, "getpos": 73, "nextfram": 73, "pad": 73, "paus": 73, "plai": 73, "playbackr": 73, "readyst": 73, "svg": 73, "syncmedia": 73, "media": 73, "htmlmediael": 73, "poseviewercustomev": 73, "customev": 73, "htmlposeviewerel": 73, "global": 73, "prototyp": 73, "htmlelementtagnamemap": 73, "localjsx": 73, "oncanplaythrough": 73, "event": 73, "onend": 73, "onfirstrend": 73, "onloadeddata": 73, "onloadedmetadata": 73, "onloadstart": 73, "onpaus": 73, "onplai": 73, "intrinsicel": 73, "htmlattribut": 73, "repositori": [74, 79], "interest": 74, "slp": 74, "complet": 74, "writer": 74, "hopefulli": 74, "simpl": 74, "design": 74, "accommod": 74, "indefinit": 74, "veri": 74, "At": 74, "exact": 74, "connect": 74, "pip": 74, "data_buff": 74, "pose_inst": 74, "numpy_data": 74, "confidence_measur": 74, "howev": 74, "just": 74, "Or": 74, "wai": 74, "stai": 74, "One": 74, "achiev": 74, "shoulder": 74, "measur": 74, "usual": 74, "improv": 74, "machin": 74, "now": 74, "re": [74, 78], "deal": 74, "interpolate_fp": 74, "f": [74, 78], "top": 74, "background_video_path": 74, "those": 74, "googl": 74, "colab": 74, "easi": 74, "inspect": 74, "In": 74, "notebook": 74, "ipython": 74, "displai": 74, "easili": 74, "similarli": 74, "bazel": 74, "cd": 74, "test_output": 74, "altern": 74, "framework": 74, "pytest": 74, "emploi": 74, "our": 74, "research": 74, "cite": 74, "misc": 74, "moryossef2021pos": 74, "howpublish": 74, "url": [74, 78], "year": 74, "char": [75, 76, 77], "red": [75, 76, 77], "green": [75, 76, 77], "blue": [75, 76, 77], "unsin": [75, 76, 77], "problem": [76, 77], "posebodymodel": 78, "poseheadermodel": 78, "parsepos": 78, "public": 78, "async": 78, "fromloc": 78, "readfilesync": 78, "fromremot": 78, "abortcontrol": 78, "init": 78, "requestinit": 78, "signal": 78, "await": 78, "ok": 78, "messag": 78, "statustext": 78, "statu": 78, "try": 78, "arraybuff": 78, "posebodyframemodel": 78, "newpars": 78, "endia": 78, "littl": 78, "componentheaderpars": 78, "limbpars": 78, "uint16": 78, "colorpars": 78, "r": [78, 81], "b": 78, "strparser": 78, "_char": 78, "text": 78, "_name": 78, "_format": 78, "_point": 78, "_limb": 78, "_color": 78, "formatt": 78, "arr": 78, "getheaderpars": 78, "componentpars": 78, "floatl": 78, "_compon": 78, "saveoffset": 78, "headerlength": 78, "getbodyparserv0_0": 78, "personpars": 78, "int16": 78, "foreach": 78, "pointpars": 78, "c": 78, "framepars": 78, "_peopl": 78, "seek": 78, "_frame": 78, "parsebodyv0_0": 78, "unknown": 78, "parsebodyv0_1": 78, "_dim": 78, "math": 78, "max": 78, "infopars": 78, "issu": 78, "keichi": 78, "208": 78, "parsefloat32arrai": 78, "dataview": 78, "byteoffset": 78, "currentoffset": 78, "float32arrai": 78, "tmp1": 78, "getfloat32": 78, "framerepresent": 78, "k": 78, "l": 78, "dimindex": 78, "push": 78, "proxi": 78, "headerpars": 78, "rgbcolor": 78, "poselimb": 78, "poseheadercomponentmodel": 78, "posepointmodel": 78, "posebodyframepersonmodel": 78, "under": 79, "below": 79, "mediapipe_hand_norm": 79, "mediapipe_long": 79, "mediapipe_long_hand_norm": 79, "png": [79, 82], "taken": 81, "translat": 81, "link": 81, "equat": 81, "revisit": 81, "q": 81, "90": 81, "heatmap": 82, "omput": 82, "chack": 84, "undergo": 84}, "objects": {"pose_format": [[6, 0, 0, "-", "numpy"], [11, 0, 0, "-", "pose"], [12, 0, 0, "-", "pose_body"], [13, 0, 0, "-", "pose_header"], [14, 0, 0, "-", "pose_representation"], [15, 0, 0, "-", "pose_test"], [16, 0, 0, "-", "pose_visualizer"], [37, 0, 0, "-", "testing"], [38, 0, 0, "-", "third_party"], [40, 0, 0, "-", "torch"]], "pose_format.numpy": [[7, 0, 0, "-", "pose_body"]], "pose_format.numpy.pose_body": [[7, 1, 1, "", "NumPyPoseBody"]], "pose_format.numpy.pose_body.NumPyPoseBody": [[7, 2, 1, "", "bbox"], [7, 2, 1, "", "flatten"], [7, 2, 1, "", "flip"], [7, 2, 1, "", "get_points"], [7, 2, 1, "", "interpolate"], [7, 3, 1, "", "mask"], [7, 2, 1, "", "matmul"], [7, 2, 1, "", "points_perspective"], [7, 2, 1, "", "read_v0_0"], [7, 4, 1, "", "tensor_reader"], [7, 2, 1, "", "tensorflow"], [7, 2, 1, "", "torch"], [7, 2, 1, "", "write"], [7, 2, 1, "", "zero_filled"]], "pose_format.numpy.representation": [[9, 0, 0, "-", "distance"], [10, 0, 0, "-", "distance_test"]], "pose_format.numpy.representation.distance": [[9, 1, 1, "", "DistanceRepresentation"]], "pose_format.numpy.representation.distance.DistanceRepresentation": [[9, 2, 1, "", "distance"]], "pose_format.numpy.representation.distance_test": [[10, 1, 1, "", "TestDistanceRepresentation"]], "pose_format.numpy.representation.distance_test.TestDistanceRepresentation": [[10, 2, 1, "", "test_call_masked_value_should_be_zero"], [10, 2, 1, "", "test_call_value_should_be_distance"]], "pose_format.pose": [[11, 1, 1, "", "Pose"]], "pose_format.pose.Pose": [[11, 2, 1, "", "bbox"], [11, 2, 1, "", "focus"], [11, 2, 1, "", "frame_dropout_normal"], [11, 2, 1, "", "frame_dropout_uniform"], [11, 2, 1, "", "get_components"], [11, 2, 1, "", "normalize"], [11, 2, 1, "", "normalize_distribution"], [11, 4, 1, "", "pass_through_methods"], [11, 2, 1, "", "read"], [11, 2, 1, "", "unnormalize_distribution"], [11, 2, 1, "", "write"]], "pose_format.pose_body": [[12, 1, 1, "", "PoseBody"]], "pose_format.pose_body.PoseBody": [[12, 2, 1, "", "augment2d"], [12, 2, 1, "", "bbox"], [12, 2, 1, "", "flatten"], [12, 2, 1, "", "frame_dropout_given_percent"], [12, 2, 1, "", "frame_dropout_normal"], [12, 2, 1, "", "frame_dropout_uniform"], [12, 2, 1, "", "get_points"], [12, 2, 1, "", "matmul"], [12, 2, 1, "", "numpy"], [12, 2, 1, "", "points_perspective"], [12, 2, 1, "", "read"], [12, 2, 1, "", "read_v0_0"], [12, 2, 1, "", "read_v0_1"], [12, 2, 1, "", "read_v0_1_frames"], [12, 2, 1, "", "select_frames"], [12, 2, 1, "", "slice_step"], [12, 4, 1, "", "tensor_reader"], [12, 2, 1, "", "tensorflow"], [12, 2, 1, "", "torch"], [12, 2, 1, "", "write"], [12, 2, 1, "", "zero_filled"]], "pose_format.pose_header": [[13, 1, 1, "", "PoseHeader"], [13, 1, 1, "", "PoseHeaderComponent"], [13, 1, 1, "", "PoseHeaderDimensions"], [13, 1, 1, "", "PoseNormalizationInfo"]], "pose_format.pose_header.PoseHeader": [[13, 2, 1, "", "bbox"], [13, 2, 1, "", "normalization_info"], [13, 2, 1, "", "read"], [13, 2, 1, "", "total_points"], [13, 2, 1, "", "write"]], "pose_format.pose_header.PoseHeaderComponent": [[13, 2, 1, "", "get_relative_limbs"], [13, 2, 1, "", "read"], [13, 2, 1, "", "write"]], "pose_format.pose_header.PoseHeaderDimensions": [[13, 2, 1, "", "read"], [13, 2, 1, "", "write"]], "pose_format.pose_representation": [[14, 1, 1, "", "PoseRepresentation"]], "pose_format.pose_representation.PoseRepresentation": [[14, 2, 1, "", "calc_output_size"], [14, 2, 1, "", "get_limbs_points"], [14, 2, 1, "", "get_points"], [14, 2, 1, "", "get_triangles_points"], [14, 2, 1, "", "group_embeds"], [14, 4, 1, "", "input_size"], [14, 4, 1, "", "output_size"], [14, 2, 1, "", "permute"], [14, 4, 1, "", "rep_modules1_size"], [14, 4, 1, "", "rep_modules2_size"], [14, 4, 1, "", "rep_modules3_size"]], "pose_format.pose_test": [[15, 1, 1, "", "TestPose"], [15, 1, 1, "", "TestPoseNumpyPoseBody"], [15, 1, 1, "", "TestPoseTensorflowPoseBody"]], "pose_format.pose_test.TestPose": [[15, 2, 1, "", "test_pose_object_should_be_callable"]], "pose_format.pose_test.TestPoseNumpyPoseBody": [[15, 2, 1, "", "test_pose_numpy_posebody_frame_dropout_normal_eager_mode_num_frames_not_zero"], [15, 2, 1, "", "test_pose_numpy_posebody_frame_dropout_uniform_eager_mode_num_frames_not_zero"], [15, 2, 1, "", "test_pose_numpy_posebody_normalize_preserves_shape"]], "pose_format.pose_test.TestPoseTensorflowPoseBody": [[15, 2, 1, "", "test_pose_frame_dropout_normal_can_be_used_in_tf_dataset_map"], [15, 2, 1, "", "test_pose_frame_dropout_uniform_can_be_used_in_tf_dataset_map"], [15, 2, 1, "", "test_pose_normalize_can_be_used_in_tf_dataset_map"], [15, 2, 1, "", "test_pose_normalize_distribution_can_be_used_in_tf_dataset_map"], [15, 2, 1, "", "test_pose_tf_posebody_frame_dropout_normal_eager_mode_num_frames_not_zero"], [15, 2, 1, "", "test_pose_tf_posebody_frame_dropout_uniform_eager_mode_num_frames_not_zero"], [15, 2, 1, "", "test_pose_tf_posebody_normalize_distribution_eager_mode_correct_result"], [15, 2, 1, "", "test_pose_tf_posebody_normalize_eager_mode_preserves_shape"]], "pose_format.pose_visualizer": [[16, 1, 1, "", "FastAndUglyPoseVisualizer"], [16, 1, 1, "", "PoseVisualizer"]], "pose_format.pose_visualizer.FastAndUglyPoseVisualizer": [[16, 2, 1, "", "draw"]], "pose_format.pose_visualizer.PoseVisualizer": [[16, 2, 1, "", "draw"], [16, 2, 1, "", "draw_on_video"], [16, 2, 1, "", "save_frame"], [16, 2, 1, "", "save_gif"], [16, 2, 1, "", "save_video"]], "pose_format.tensorflow": [[18, 0, 0, "-", "masked"], [24, 0, 0, "-", "pose_body"], [25, 0, 0, "-", "pose_body_test"], [26, 0, 0, "-", "pose_representation"], [27, 0, 0, "-", "pose_representation_test"]], "pose_format.tensorflow.masked": [[19, 0, 0, "-", "tensor"], [20, 0, 0, "-", "tensor_graph_mode_test"], [21, 0, 0, "-", "tensor_test"], [22, 0, 0, "-", "tensorflow"], [23, 0, 0, "-", "tensorflow_test"]], "pose_format.tensorflow.masked.tensor": [[19, 1, 1, "", "MaskedTensor"]], "pose_format.tensorflow.masked.tensor.MaskedTensor": [[19, 2, 1, "", "arithmetic"], [19, 2, 1, "", "div"], [19, 2, 1, "", "fix_nan"], [19, 2, 1, "", "float"], [19, 2, 1, "", "gather"], [19, 2, 1, "", "matmul"], [19, 2, 1, "", "mean"], [19, 2, 1, "", "permute"], [19, 2, 1, "", "rename"], [19, 2, 1, "", "reshape"], [19, 2, 1, "", "size"], [19, 2, 1, "", "split"], [19, 2, 1, "", "sqrt"], [19, 2, 1, "", "square"], [19, 2, 1, "", "squeeze"], [19, 2, 1, "", "std"], [19, 2, 1, "", "sum"], [19, 2, 1, "", "transpose"], [19, 2, 1, "", "variance"], [19, 2, 1, "", "zero_filled"]], "pose_format.tensorflow.masked.tensor_graph_mode_test": [[20, 1, 1, "", "TestMaskedTensor"]], "pose_format.tensorflow.masked.tensor_graph_mode_test.TestMaskedTensor": [[20, 2, 1, "", "test_eq_graph_execution"], [20, 2, 1, "", "test_float_graph_execution_fails"]], "pose_format.tensorflow.masked.tensor_test": [[21, 1, 1, "", "TestMaskedTensor"], [21, 5, 1, "", "create_random_numpy_tensor_and_mask"]], "pose_format.tensorflow.masked.tensor_test.TestMaskedTensor": [[21, 2, 1, "", "test_fix_nan"], [21, 2, 1, "", "test_float_eager_execution_return_type_is_correct"], [21, 2, 1, "", "test_mean"], [21, 2, 1, "", "test_reshape_identical_to_numpy_reshape"], [21, 2, 1, "", "test_reshape_return_type_is_correct"], [21, 2, 1, "", "test_std"]], "pose_format.tensorflow.masked.tensorflow": [[22, 1, 1, "", "MaskedTensorflow"], [22, 1, 1, "", "TensorflowFallback"]], "pose_format.tensorflow.masked.tensorflow.MaskedTensorflow": [[22, 2, 1, "", "concat"], [22, 2, 1, "", "stack"], [22, 2, 1, "", "zeros"]], "pose_format.tensorflow.masked.tensorflow.TensorflowFallback": [[22, 4, 1, "", "doesnt_change_mask"]], "pose_format.tensorflow.masked.tensorflow_test": [[23, 1, 1, "", "TestMaskedTensorflow"]], "pose_format.tensorflow.masked.tensorflow_test.TestMaskedTensorflow": [[23, 2, 1, "", "test_cat"], [23, 2, 1, "", "test_not_implemented_method"], [23, 2, 1, "", "test_stack"], [23, 2, 1, "", "test_zeros_mask_value"], [23, 2, 1, "", "test_zeros_tensor_shape"], [23, 2, 1, "", "test_zeros_tensor_type_bool"], [23, 2, 1, "", "test_zeros_tensor_type_float"], [23, 2, 1, "", "test_zeros_tensor_value"]], "pose_format.tensorflow.pose_body": [[24, 1, 1, "", "TensorflowPoseBody"]], "pose_format.tensorflow.pose_body.TensorflowPoseBody": [[24, 2, 1, "", "as_tfrecord"], [24, 2, 1, "", "frame_dropout_given_percent"], [24, 2, 1, "", "frame_dropout_normal"], [24, 2, 1, "", "frame_dropout_uniform"], [24, 2, 1, "", "from_tfrecord"], [24, 2, 1, "", "get_points"], [24, 2, 1, "", "matmul"], [24, 2, 1, "", "points_perspective"], [24, 2, 1, "", "select_frames"], [24, 4, 1, "", "tensor_reader"], [24, 2, 1, "", "zero_filled"]], "pose_format.tensorflow.pose_body_test": [[25, 1, 1, "", "TestTensorflowPoseBody"]], "pose_format.tensorflow.pose_body_test.TestTensorflowPoseBody": [[25, 2, 1, "", "test_tf_pose_body_zero_filled_fills_in_zeros"]], "pose_format.tensorflow.pose_representation": [[26, 1, 1, "", "TensorflowPoseRepresentation"]], "pose_format.tensorflow.pose_representation.TensorflowPoseRepresentation": [[26, 2, 1, "", "get_points"], [26, 2, 1, "", "group_embeds"], [26, 2, 1, "", "permute"]], "pose_format.tensorflow.pose_representation_test": [[27, 1, 1, "", "TestTensorflowPoseRepresentation"]], "pose_format.tensorflow.pose_representation_test.TestTensorflowPoseRepresentation": [[27, 2, 1, "", "test_calc_output_size"], [27, 2, 1, "", "test_call_return_shape"], [27, 2, 1, "", "test_input_size"]], "pose_format.tensorflow.representation": [[29, 0, 0, "-", "angle"], [30, 0, 0, "-", "angle_test"], [31, 0, 0, "-", "distance"], [32, 0, 0, "-", "distance_test"], [33, 0, 0, "-", "inner_angle"], [34, 0, 0, "-", "inner_angle_test"], [35, 0, 0, "-", "point_line_distance"], [36, 0, 0, "-", "point_line_distance_test"]], "pose_format.tensorflow.representation.angle": [[29, 1, 1, "", "AngleRepresentation"]], "pose_format.tensorflow.representation.angle_test": [[30, 1, 1, "", "TestAngleRepresentation"]], "pose_format.tensorflow.representation.angle_test.TestAngleRepresentation": [[30, 2, 1, "", "test_call_value_should_be_angle"]], "pose_format.tensorflow.representation.distance": [[31, 1, 1, "", "DistanceRepresentation"]], "pose_format.tensorflow.representation.distance.DistanceRepresentation": [[31, 2, 1, "", "distance"]], "pose_format.tensorflow.representation.distance_test": [[32, 1, 1, "", "TestDistanceRepresentation"]], "pose_format.tensorflow.representation.distance_test.TestDistanceRepresentation": [[32, 2, 1, "", "test_call_value_should_be_distance"]], "pose_format.tensorflow.representation.inner_angle": [[33, 1, 1, "", "InnerAngleRepresentation"], [33, 5, 1, "", "get_vectors_norm"]], "pose_format.tensorflow.representation.inner_angle_test": [[34, 1, 1, "", "TestInnerAngleRepresentation"]], "pose_format.tensorflow.representation.inner_angle_test.TestInnerAngleRepresentation": [[34, 2, 1, "", "test_call_value_should_be_inner_angle"]], "pose_format.tensorflow.representation.point_line_distance": [[35, 1, 1, "", "PointLineDistanceRepresentation"]], "pose_format.tensorflow.representation.point_line_distance_test": [[36, 1, 1, "", "TestPointLineDistanceRepresentation"]], "pose_format.tensorflow.representation.point_line_distance_test.TestPointLineDistanceRepresentation": [[36, 2, 1, "", "test_call_value_should_be_distance"]], "pose_format.torch.masked": [[42, 0, 0, "-", "tensor"], [43, 0, 0, "-", "torch"], [44, 0, 0, "-", "torch_test"]], "pose_format.torch.masked.tensor": [[42, 1, 1, "", "MaskedTensor"]], "pose_format.torch.masked.tensor.MaskedTensor": [[42, 2, 1, "", "arithmetic"], [42, 2, 1, "", "cuda"], [42, 2, 1, "", "div"], [42, 2, 1, "", "fix_nan"], [42, 2, 1, "", "matmul"], [42, 2, 1, "", "permute"], [42, 2, 1, "", "pow_"], [42, 2, 1, "", "rename"], [42, 2, 1, "", "reshape"], [42, 2, 1, "", "size"], [42, 2, 1, "", "split"], [42, 2, 1, "", "squeeze"], [42, 2, 1, "", "sum"], [42, 2, 1, "", "to"], [42, 2, 1, "", "transpose"], [42, 2, 1, "", "zero_filled"]], "pose_format.torch.masked.torch": [[43, 1, 1, "", "MaskedTorch"], [43, 1, 1, "", "TorchFallback"]], "pose_format.torch.masked.torch.MaskedTorch": [[43, 2, 1, "", "cat"], [43, 2, 1, "", "squeeze"], [43, 2, 1, "", "stack"], [43, 2, 1, "", "zeros"]], "pose_format.torch.masked.torch.TorchFallback": [[43, 4, 1, "", "doesnt_change_mask"]], "pose_format.torch.masked.torch_test": [[44, 1, 1, "", "TestMaskedTorch"]], "pose_format.torch.masked.torch_test.TestMaskedTorch": [[44, 2, 1, "", "test_cat"], [44, 2, 1, "", "test_not_implemented_method"], [44, 2, 1, "", "test_stack"], [44, 2, 1, "", "test_zeros_mask_value"], [44, 2, 1, "", "test_zeros_tensor_shape"], [44, 2, 1, "", "test_zeros_tensor_type_bool"], [44, 2, 1, "", "test_zeros_tensor_type_float"], [44, 2, 1, "", "test_zeros_tensor_value"]], "pose_format.torch": [[45, 0, 0, "-", "pose_body"], [46, 0, 0, "-", "pose_representation"], [47, 0, 0, "-", "representation"]], "pose_format.torch.pose_body": [[45, 1, 1, "", "TorchPoseBody"]], "pose_format.torch.pose_body.TorchPoseBody": [[45, 2, 1, "", "cuda"], [45, 2, 1, "", "flatten"], [45, 2, 1, "", "get_points"], [45, 2, 1, "", "matmul"], [45, 2, 1, "", "points_perspective"], [45, 4, 1, "", "tensor_reader"], [45, 2, 1, "", "zero_filled"]], "pose_format.torch.pose_representation": [[46, 1, 1, "", "TorchPoseRepresentation"]], "pose_format.torch.pose_representation.TorchPoseRepresentation": [[46, 2, 1, "", "group_embeds"], [46, 4, 1, "", "header"], [46, 2, 1, "", "permute"], [46, 4, 1, "", "rep_modules1"], [46, 4, 1, "", "rep_modules2"], [46, 4, 1, "", "rep_modules3"]], "pose_format.torch.representation": [[48, 0, 0, "-", "angle"], [49, 0, 0, "-", "angle_test"], [50, 0, 0, "-", "distance"], [51, 0, 0, "-", "distance_test"], [52, 0, 0, "-", "inner_angle"], [53, 0, 0, "-", "inner_angle_test"], [54, 0, 0, "-", "point_line_distance"], [55, 0, 0, "-", "point_line_distance_test"], [56, 0, 0, "-", "points"]], "pose_format.torch.representation.angle": [[48, 1, 1, "", "AngleRepresentation"]], "pose_format.torch.representation.angle.AngleRepresentation": [[48, 2, 1, "", "forward"], [48, 4, 1, "", "training"]], "pose_format.torch.representation.angle_test": [[49, 1, 1, "", "TestAngleRepresentation"]], "pose_format.torch.representation.angle_test.TestAngleRepresentation": [[49, 2, 1, "", "test_call_masked_value_should_be_zero"], [49, 2, 1, "", "test_call_value_should_be_angle"]], "pose_format.torch.representation.distance": [[50, 1, 1, "", "DistanceRepresentation"]], "pose_format.torch.representation.distance.DistanceRepresentation": [[50, 2, 1, "", "distance"], [50, 2, 1, "", "forward"], [50, 4, 1, "", "training"]], "pose_format.torch.representation.distance_test": [[51, 1, 1, "", "TestDistanceRepresentation"]], "pose_format.torch.representation.distance_test.TestDistanceRepresentation": [[51, 2, 1, "", "test_call_masked_value_should_be_zero"], [51, 2, 1, "", "test_call_value_should_be_distance"]], "pose_format.torch.representation.inner_angle": [[52, 1, 1, "", "InnerAngleRepresentation"], [52, 5, 1, "", "get_vectors_norm"]], "pose_format.torch.representation.inner_angle.InnerAngleRepresentation": [[52, 2, 1, "", "forward"], [52, 4, 1, "", "training"]], "pose_format.torch.representation.inner_angle_test": [[53, 1, 1, "", "TestInnerAngleRepresentation"]], "pose_format.torch.representation.inner_angle_test.TestInnerAngleRepresentation": [[53, 2, 1, "", "test_call_masked_value_should_be_zero"], [53, 2, 1, "", "test_call_value_should_be_inner_angle"]], "pose_format.torch.representation.point_line_distance": [[54, 1, 1, "", "PointLineDistanceRepresentation"]], "pose_format.torch.representation.point_line_distance.PointLineDistanceRepresentation": [[54, 2, 1, "", "forward"], [54, 4, 1, "", "training"]], "pose_format.torch.representation.point_line_distance_test": [[55, 1, 1, "", "TestPointLineDistanceRepresentation"]], "pose_format.torch.representation.point_line_distance_test.TestPointLineDistanceRepresentation": [[55, 2, 1, "", "test_call_masked_value_should_be_zero"], [55, 2, 1, "", "test_call_value_should_be_distance"]], "pose_format.torch.representation.points": [[56, 1, 1, "", "PointsRepresentation"]], "pose_format.torch.representation.points.PointsRepresentation": [[56, 2, 1, "", "forward"], [56, 4, 1, "", "training"]], "pose_format.utils": [[58, 0, 0, "-", "fast_math"], [59, 0, 0, "-", "holistic"], [60, 0, 0, "-", "normalization_3d"], [61, 0, 0, "-", "openpose"], [62, 0, 0, "-", "openpose_135"], [63, 0, 0, "-", "openpose_test"], [64, 0, 0, "-", "optical_flow"], [65, 0, 0, "-", "pose_converter"], [66, 0, 0, "-", "reader"], [67, 0, 0, "-", "reader_test"], [68, 0, 0, "-", "siren"]], "pose_format.utils.fast_math": [[58, 5, 1, "", "distance_batch"]], "pose_format.utils.holistic": [[59, 5, 1, "", "FACE_POINTS"], [59, 5, 1, "", "FACE_POINTS_NUM"], [59, 5, 1, "", "body_points"], [59, 5, 1, "", "component_points"], [59, 5, 1, "", "formatted_holistic_pose"], [59, 5, 1, "", "holistic_components"], [59, 5, 1, "", "holistic_hand_component"], [59, 5, 1, "", "load_holistic"], [59, 5, 1, "", "load_mediapipe_directory"], [59, 5, 1, "", "process_holistic"]], "pose_format.utils.normalization_3d": [[60, 1, 1, "", "PoseNormalizer"]], "pose_format.utils.normalization_3d.PoseNormalizer": [[60, 2, 1, "", "get_normal"], [60, 2, 1, "", "get_rotation_angle"], [60, 2, 1, "", "normalize_pose"], [60, 2, 1, "", "rotate"], [60, 2, 1, "", "rotate_to_normal"], [60, 2, 1, "", "scale"]], "pose_format.utils.openpose": [[61, 5, 1, "", "OpenPose_Hand_Component"], [61, 5, 1, "", "get_frame_id"], [61, 5, 1, "", "limbs_index"], [61, 5, 1, "", "load_frames_directory_dict"], [61, 5, 1, "", "load_openpose"], [61, 5, 1, "", "load_openpose_directory"]], "pose_format.utils.openpose_135": [[62, 5, 1, "", "load_openpose_135_directory"]], "pose_format.utils.openpose_test": [[63, 1, 1, "", "TestLoadOpenpose"], [63, 1, 1, "", "TestLoadOpenposeDirectory"], [63, 1, 1, "", "TestOpenposeComponents"]], "pose_format.utils.openpose_test.TestLoadOpenpose": [[63, 2, 1, "", "test_load_openpose_data_shape"], [63, 2, 1, "", "test_load_openpose_data_shape_missing_frames"], [63, 2, 1, "", "test_load_openpose_extracts_correct_number_of_people"], [63, 2, 1, "", "test_load_openpose_fixed_num_frames"], [63, 2, 1, "", "test_load_openpose_fixed_num_frames_and_missing_frames"], [63, 2, 1, "", "test_load_openpose_returns_pose_object"]], "pose_format.utils.openpose_test.TestLoadOpenposeDirectory": [[63, 2, 1, "", "test_get_frame_id_no_prefix"], [63, 2, 1, "", "test_get_frame_id_nonzero"], [63, 2, 1, "", "test_get_frame_id_several_digits"], [63, 2, 1, "", "test_get_frame_id_zero"], [63, 2, 1, "", "test_load_openpose_directory_data_shape"], [63, 2, 1, "", "test_load_openpose_directory_data_shape_add_empty_keys"], [63, 2, 1, "", "test_load_openpose_directory_data_shape_missing_frames"], [63, 2, 1, "", "test_load_openpose_directory_data_shape_no_file_prefix"], [63, 2, 1, "", "test_load_openpose_directory_extracts_correct_number_of_people"], [63, 2, 1, "", "test_load_openpose_directory_returns_pose_object"]], "pose_format.utils.openpose_test.TestOpenposeComponents": [[63, 2, 1, "", "test_openpose_components_names"], [63, 2, 1, "", "test_openpose_components_total_points"], [63, 2, 1, "", "test_openpose_num_points_per_component_face"], [63, 2, 1, "", "test_openpose_num_points_per_component_hand_left"], [63, 2, 1, "", "test_openpose_num_points_per_component_hand_right"], [63, 2, 1, "", "test_openpose_num_points_per_component_pose"]], "pose_format.utils.optical_flow": [[64, 1, 1, "", "OpticalFlowCalculator"]], "pose_format.utils.pose_converter": [[65, 5, 1, "", "convert_pose"], [65, 5, 1, "", "save_image"]], "pose_format.utils.reader": [[66, 1, 1, "", "BufferReader"], [66, 1, 1, "", "ConstStructs"]], "pose_format.utils.reader.BufferReader": [[66, 2, 1, "", "advance"], [66, 2, 1, "", "bytes_left"], [66, 2, 1, "", "unpack"], [66, 2, 1, "", "unpack_f"], [66, 2, 1, "", "unpack_numpy"], [66, 2, 1, "", "unpack_str"], [66, 2, 1, "", "unpack_tensorflow"], [66, 2, 1, "", "unpack_torch"]], "pose_format.utils.reader.ConstStructs": [[66, 4, 1, "", "double_ushort"], [66, 4, 1, "", "float"], [66, 4, 1, "", "short"], [66, 4, 1, "", "triple_ushort"], [66, 4, 1, "", "ushort"]], "pose_format.utils.reader_test": [[67, 1, 1, "", "TestBufferReader"]], "pose_format.utils.reader_test.TestBufferReader": [[67, 2, 1, "", "test_advance"], [67, 2, 1, "", "test_bytes_left"], [67, 2, 1, "", "test_unpack"], [67, 2, 1, "", "test_unpack_f"], [67, 2, 1, "", "test_unpack_numpy"], [67, 2, 1, "", "test_unpack_numpy_writeable"], [67, 2, 1, "", "test_unpack_str"], [67, 2, 1, "", "test_unpack_tensorflow"], [67, 2, 1, "", "test_unpack_torch"]], "pose_format.utils.siren": [[68, 1, 1, "", "PoseDataset"], [68, 1, 1, "", "SineLayer"], [68, 1, 1, "", "Siren"], [68, 5, 1, "", "get_pose_siren"], [68, 5, 1, "", "masked_mse_loss"]], "pose_format.utils.siren.PoseDataset": [[68, 2, 1, "", "get_coords"]], "pose_format.utils.siren.SineLayer": [[68, 2, 1, "", "forward"], [68, 2, 1, "", "forward_with_intermediate"], [68, 2, 1, "", "init_weights"], [68, 4, 1, "", "is_first"], [68, 4, 1, "", "omega_0"], [68, 4, 1, "", "training"]], "pose_format.utils.siren.Siren": [[68, 2, 1, "", "forward"], [68, 2, 1, "", "forward_with_activations"], [68, 4, 1, "", "training"]], "tests": [[81, 0, 0, "-", "hand_normalization_test"], [82, 0, 0, "-", "optical_flow_test"], [83, 0, 0, "-", "pose_test"], [84, 0, 0, "-", "pose_tf_graph_mode_test"]], "tests.hand_normalization_test": [[81, 1, 1, "", "Test3DNormalization"]], "tests.hand_normalization_test.Test3DNormalization": [[81, 2, 1, "", "test_hand_normalization"], [81, 2, 1, "", "test_hand_normalization_results"], [81, 2, 1, "", "test_normal"], [81, 2, 1, "", "test_rotate_vector_by_90_degrees"]], "tests.optical_flow_test": [[82, 1, 1, "", "TestOpticalFlow"]], "tests.optical_flow_test.TestOpticalFlow": [[82, 2, 1, "", "test_optical_flow"]], "tests.pose_test": [[83, 1, 1, "", "TestPose"], [83, 1, 1, "", "TestPoseNumpyPoseBody"], [83, 1, 1, "", "TestPoseTensorflowPoseBody"]], "tests.pose_test.TestPose": [[83, 2, 1, "", "test_pose_object_should_be_callable"]], "tests.pose_test.TestPoseNumpyPoseBody": [[83, 2, 1, "", "test_pose_numpy_posebody_frame_dropout_normal_eager_mode_num_frames_not_zero"], [83, 2, 1, "", "test_pose_numpy_posebody_frame_dropout_uniform_eager_mode_num_frames_not_zero"], [83, 2, 1, "", "test_pose_numpy_posebody_normalize_preserves_shape"]], "tests.pose_test.TestPoseTensorflowPoseBody": [[83, 2, 1, "", "test_pose_frame_dropout_normal_can_be_used_in_tf_dataset_map"], [83, 2, 1, "", "test_pose_frame_dropout_uniform_can_be_used_in_tf_dataset_map"], [83, 2, 1, "", "test_pose_normalize_can_be_used_in_tf_dataset_map"], [83, 2, 1, "", "test_pose_normalize_distribution_can_be_used_in_tf_dataset_map"], [83, 2, 1, "", "test_pose_tf_posebody_frame_dropout_normal_eager_mode_num_frames_not_zero"], [83, 2, 1, "", "test_pose_tf_posebody_frame_dropout_uniform_eager_mode_num_frames_not_zero"], [83, 2, 1, "", "test_pose_tf_posebody_normalize_distribution_eager_mode_correct_result"], [83, 2, 1, "", "test_pose_tf_posebody_normalize_eager_mode_preserves_shape"]], "tests.pose_tf_graph_mode_test": [[84, 1, 1, "", "TestPose"]], "tests.pose_tf_graph_mode_test.TestPose": [[84, 2, 1, "", "test_pose_tf_posebody_frame_dropout_normal_graph_mode_does_not_fail"], [84, 2, 1, "", "test_pose_tf_posebody_frame_dropout_uniform_graph_mode_does_not_fail"], [84, 2, 1, "", "test_pose_tf_posebody_normalize_graph_mode_does_not_fail"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"exampl": [0, 70], "pose": [0, 1, 5, 11, 70, 71, 74], "format": [0, 1, 74], "convers": 0, "siren": [0, 68], "step": 0, "guid": [0, 74], "overview": [0, 74], "pose_to_siren_to_pos": 0, "py": [0, 39], "welcom": 1, "": [1, 75, 76, 77], "document": 1, "introduct": [1, 74], "python": [1, 74], "code": 1, "addit": 1, "materi": 1, "refer": 1, "indic": 1, "tabl": 1, "javascript": 2, "json": [3, 71], "file": [3, 71, 74], "packag": [3, 5, 6, 8, 17, 18, 28, 37, 38, 39, 40, 41, 47, 57, 71, 80], "lock": [3, 71], "tsconfig": [3, 71], "tslint": 3, "structur": [4, 74], "main": 4, "featur": 4, "test": [4, 37, 74, 79, 80, 81, 82, 83, 84, 85], "pose_format": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 78], "subpackag": [5, 17, 38, 40, 41], "submodul": [5, 40, 57, 85], "modul": [5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 82, 83, 84], "pose_bodi": [5, 7, 12, 17, 24, 40, 45], "pose_head": [5, 13], "pose_represent": [5, 14, 17, 26, 40, 46], "pose_test": [5, 15, 83], "pose_visu": [5, 16], "numpi": [6, 7, 8, 9, 10], "represent": [8, 9, 10, 28, 29, 30, 31, 32, 33, 34, 35, 36, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "distanc": [9, 31, 50], "distance_test": [10, 32, 51], "tensorflow": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "pose_body_test": [17, 25], "pose_representation_test": [17, 27], "mask": [18, 19, 20, 21, 22, 23, 41, 42, 43, 44], "tensor": [19, 41, 42], "tensor_graph_mode_test": 20, "tensor_test": 21, "tensorflow_test": 23, "angl": [29, 48], "angle_test": [30, 49], "inner_angl": [33, 52], "inner_angle_test": [34, 53], "point_line_dist": [35, 54], "point_line_distance_test": [36, 55], "third_parti": [38, 39], "torch": [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "torch_test": [41, 44], "point": [56, 75, 76, 77], "util": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "fast_math": 58, "holist": [59, 74], "normalization_3d": 60, "openpos": [61, 74], "openpose_135": 62, "openpose_test": 63, "optical_flow": 64, "pose_convert": 65, "reader": 66, "reader_test": 67, "viewer": 71, "stencil": 71, "config": 71, "t": [71, 73, 78], "prettierrc": 71, "pose_view": 72, "src": [73, 78], "index": [73, 78], "html": 73, "compon": [73, 75, 76, 77], "d": 73, "implement": 74, "1": [74, 77], "instal": 74, "2": 74, "read": 74, "3": 74, "data": [74, 79], "manipul": 74, "normal": 74, "augment": 74, "interpol": 74, "4": 74, "visual": 74, "5": 74, "integr": 74, "extern": 74, "sourc": 74, "load": 74, "mediapip": 74, "run": 74, "acknowledg": 74, "work": 74, "header": [75, 76, 77], "For": [75, 76, 77], "everi": [75, 76, 77], "limb": [75, 76, 77], "color": [75, 76, 77], "bodi": [75, 76, 77], "frame": [75, 76, 77], "person": [75, 76, 77], "spec": 77, "v0": 77, "md": 77, "parser": 78, "type": 78, "avail": 79, "hand_normalization_test": 81, "optical_flow_test": 82, "pose_tf_graph_mode_test": 84}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"Examples": [[0, "examples"]], "Pose Format Conversion with Sirens": [[0, "pose-format-conversion-with-sirens"]], "Step-by-step Guide:": [[0, "step-by-step-guide"]], "Overview of pose_to_siren_to_pose.py": [[0, "overview-of-pose-to-siren-to-pose-py"]], "Welcome to Pose-Format\u2019s documentation!": [[1, "welcome-to-pose-format-s-documentation"]], "Introduction": [[1, null]], "Python Code Documentation": [[1, null]], "Additional Material": [[1, null]], "References": [[1, "references"]], "Indices and tables": [[1, "indices-and-tables"]], "JavaScript": [[2, "javascript"]], "JSON Files": [[3, "json-files"]], "package.JSON": [[3, "package-json"]], "package-lock.JSON": [[3, "package-lock-json"]], "tsconfig.JSON": [[3, "tsconfig-json"]], "tslint.JSON": [[3, "tslint-json"]], "Structure": [[4, "structure"]], "Main Features": [[4, "main-features"]], "Tests": [[4, "tests"]], "pose_format package": [[5, "pose-format-package"]], "Subpackages:": [[5, null], [40, null]], "Submodules": [[5, "submodules"], [40, "submodules"]], "pose_format.pose module": [[5, "module-pose_format.pose"], [11, "module-pose_format.pose"]], "pose_format.pose_body module": [[5, "module-pose_format.pose_body"], [12, "module-pose_format.pose_body"]], "pose_format.pose_header module": [[5, "module-pose_format.pose_header"], [13, "module-pose_format.pose_header"]], "pose_format.pose_representation module": [[5, "module-pose_format.pose_representation"], [14, "module-pose_format.pose_representation"]], "pose_format.pose_test module": [[5, "module-pose_format.pose_test"], [15, "module-pose_format.pose_test"]], "pose_format.pose_visualizer module": [[5, "module-pose_format.pose_visualizer"], [16, "module-pose_format.pose_visualizer"]], "pose_format.numpy package": [[6, "pose-format-numpy-package"]], "pose_format.numpy.pose_body module": [[7, "module-pose_format.numpy.pose_body"]], "pose_format.numpy.representation package": [[8, "pose-format-numpy-representation-package"]], "pose_format.numpy.representation.distance module": [[9, "module-pose_format.numpy.representation.distance"]], "pose_format.numpy.representation.distance_test module": [[10, "module-pose_format.numpy.representation.distance_test"]], "pose_format.tensorflow package": [[17, "pose-format-tensorflow-package"]], "pose_format.tensorflow subpackages": [[17, null]], "pose_format.tensorflow.pose_body module": [[17, "module-pose_format.tensorflow.pose_body"], [24, "module-pose_format.tensorflow.pose_body"]], "pose_format.tensorflow.pose_body_test module": [[17, "module-pose_format.tensorflow.pose_body_test"], [25, "module-pose_format.tensorflow.pose_body_test"]], "pose_format.tensorflow.pose_representation module": [[17, "module-pose_format.tensorflow.pose_representation"], [26, "module-pose_format.tensorflow.pose_representation"]], "pose_format.tensorflow.pose_representation_test module": [[17, "module-pose_format.tensorflow.pose_representation_test"], [27, "module-pose_format.tensorflow.pose_representation_test"]], "pose_format.tensorflow.masked package": [[18, "module-pose_format.tensorflow.masked"]], "pose_format.tensorflow.masked.tensor module": [[19, "module-pose_format.tensorflow.masked.tensor"]], "pose_format.tensorflow.masked.tensor_graph_mode_test module": [[20, "module-pose_format.tensorflow.masked.tensor_graph_mode_test"]], "pose_format.tensorflow.masked.tensor_test module": [[21, "module-pose_format.tensorflow.masked.tensor_test"]], "pose_format.tensorflow.masked.tensorflow module": [[22, "module-pose_format.tensorflow.masked.tensorflow"]], "pose_format.tensorflow.masked.tensorflow_test module": [[23, "module-pose_format.tensorflow.masked.tensorflow_test"]], "pose_format.tensorflow.representation package": [[28, "pose-format-tensorflow-representation-package"]], "pose_format.tensorflow.representation.angle module": [[29, "module-pose_format.tensorflow.representation.angle"]], "pose_format.tensorflow.representation.angle_test module": [[30, "module-pose_format.tensorflow.representation.angle_test"]], "pose_format.tensorflow.representation.distance module": [[31, "module-pose_format.tensorflow.representation.distance"]], "pose_format.tensorflow.representation.distance_test module": [[32, "module-pose_format.tensorflow.representation.distance_test"]], "pose_format.tensorflow.representation.inner_angle module": [[33, "module-pose_format.tensorflow.representation.inner_angle"]], "pose_format.tensorflow.representation.inner_angle_test module": [[34, "module-pose_format.tensorflow.representation.inner_angle_test"]], "pose_format.tensorflow.representation.point_line_distance module": [[35, "module-pose_format.tensorflow.representation.point_line_distance"]], "pose_format.tensorflow.representation.point_line_distance_test module": [[36, "module-pose_format.tensorflow.representation.point_line_distance_test"]], "pose_format.testing package": [[37, "module-pose_format.testing"]], "pose_format.third_party package": [[38, "pose-format-third-party-package"]], "Subpackages": [[38, "subpackages"]], "pose_format.third_party.py package": [[39, "pose-format-third-party-py-package"]], "pose_format.torch package": [[40, "pose-format-torch-package"]], "pose_format.torch.pose_body module": [[40, "module-pose_format.torch.pose_body"], [45, "module-pose_format.torch.pose_body"]], "pose_format.torch.pose_representation module": [[40, "module-pose_format.torch.pose_representation"], [46, "module-pose_format.torch.pose_representation"]], "pose_format.torch.masked package": [[41, "pose-format-torch-masked-package"]], "pose_format.torch.masked subpackages:": [[41, null]], "pose_format.torch.masked.tensor module": [[41, "module-pose_format.torch.masked.tensor"], [42, "module-pose_format.torch.masked.tensor"]], "pose_format.torch.masked.torch module": [[41, "module-pose_format.torch.masked.torch"], [43, "module-pose_format.torch.masked.torch"]], "pose_format.torch.masked.torch_test module": [[41, "module-pose_format.torch.masked.torch_test"], [44, "module-pose_format.torch.masked.torch_test"]], "pose_format.torch.representation package": [[47, "module-pose_format.torch.representation"]], "pose_format.torch.representation.angle module": [[48, "module-pose_format.torch.representation.angle"]], "pose_format.torch.representation.angle_test module": [[49, "module-pose_format.torch.representation.angle_test"]], "pose_format.torch.representation.distance module": [[50, "module-pose_format.torch.representation.distance"]], "pose_format.torch.representation.distance_test module": [[51, "module-pose_format.torch.representation.distance_test"]], "pose_format.torch.representation.inner_angle module": [[52, "module-pose_format.torch.representation.inner_angle"]], "pose_format.torch.representation.inner_angle_test module": [[53, "module-pose_format.torch.representation.inner_angle_test"]], "pose_format.torch.representation.point_line_distance module": [[54, "module-pose_format.torch.representation.point_line_distance"]], "pose_format.torch.representation.point_line_distance_test module": [[55, "module-pose_format.torch.representation.point_line_distance_test"]], "pose_format.torch.representation.points module": [[56, "module-pose_format.torch.representation.points"]], "pose_format.utils package": [[57, "pose-format-utils-package"]], "pose_format.utils submodules:": [[57, null]], "pose_format.utils.fast_math module": [[58, "module-pose_format.utils.fast_math"]], "pose_format.utils.holistic module": [[59, "module-pose_format.utils.holistic"]], "pose_format.utils.normalization_3d module": [[60, "module-pose_format.utils.normalization_3d"]], "pose_format.utils.openpose module": [[61, "module-pose_format.utils.openpose"]], "pose_format.utils.openpose_135 module": [[62, "module-pose_format.utils.openpose_135"]], "pose_format.utils.openpose_test module": [[63, "module-pose_format.utils.openpose_test"]], "pose_format.utils.optical_flow module": [[64, "module-pose_format.utils.optical_flow"]], "pose_format.utils.pose_converter module": [[65, "module-pose_format.utils.pose_converter"]], "pose_format.utils.reader module": [[66, "module-pose_format.utils.reader"]], "pose_format.utils.reader_test module": [[67, "module-pose_format.utils.reader_test"]], "pose_format.utils.siren module": [[68, "module-pose_format.utils.siren"]], "pose_format": [[69, "pose-format"]], "example": [[70, "example"]], "example.pose": [[70, "example-pose"]], "pose viewer files": [[71, "pose-viewer-files"]], "stencil.config.ts": [[71, "stencil-config-ts"]], "prettierrc.json": [[71, "prettierrc-json"]], "package.json": [[71, "package-json"]], "package-lock.json": [[71, "package-lock-json"]], "tsconfig.json": [[71, "tsconfig-json"]], "pose_viewer": [[72, "pose-viewer"]], "src": [[73, "src"]], "index.html": [[73, "index-html"]], "components.d.ts": [[73, "components-d-ts"]], "index.ts": [[73, "index-ts"], [78, "index-ts"]], "Pose Format Introduction": [[74, "pose-format-introduction"]], "Overview": [[74, "overview"]], "File Format Structure": [[74, "file-format-structure"]], "Python Implementation Guide:": [[74, "python-implementation-guide"]], "1. Installation:": [[74, "installation"]], "2. Reading .pose Files:": [[74, "reading-pose-files"]], "3. Data Manipulation:": [[74, "data-manipulation"]], "Normalizing Data:": [[74, "normalizing-data"]], "Augmentation:": [[74, "augmentation"]], "Interpolation": [[74, "interpolation"]], "4. Visualization": [[74, "visualization"]], "5. Integration with External Data Sources:": [[74, "integration-with-external-data-sources"]], "Loading OpenPose and Mediapipe Holistic Data": [[74, "loading-openpose-and-mediapipe-holistic-data"]], "Running Tests:": [[74, "running-tests"]], "Acknowledging the Work": [[74, "acknowledging-the-work"]], "Header": [[75, "header"], [76, "header"], [77, "header"]], "For every component:": [[75, "for-every-component"], [76, "for-every-component"], [77, "for-every-component"]], "For every point:": [[75, "for-every-point"], [76, "for-every-point"], [77, "for-every-point"]], "For every limb:": [[75, "for-every-limb"], [76, "for-every-limb"], [77, "for-every-limb"]], "For every color:": [[75, "for-every-color"], [76, "for-every-color"], [77, "for-every-color"]], "Body": [[75, "body"], [76, "body"], [77, "body"]], "For every frame": [[75, "for-every-frame"], [76, "for-every-frame"], [76, "id1"], [77, "for-every-frame"], [77, "id1"]], "For every person:": [[75, "for-every-person"], [76, "for-every-person"], [76, "id2"], [77, "for-every-person"], [77, "id2"]], "For every person\u2019s component:": [[75, "for-every-person-s-component"], [76, "for-every-person-s-component"], [76, "id3"], [77, "for-every-person-s-component"], [77, "id3"]], "specs/v0.1.md": [[77, "specs-v0-1-md"]], "pose_format/src": [[78, "pose-format-src"]], "parser.ts": [[78, "parser-ts"]], "types.ts": [[78, "types-ts"]], "Test Data": [[79, "test-data"]], "Available Test Data": [[79, "available-test-data"]], "tests package": [[80, "tests-package"]], "tests.hand_normalization_test module": [[81, "module-tests.hand_normalization_test"]], "tests.optical_flow_test module": [[82, "module-tests.optical_flow_test"]], "tests.pose_test module": [[83, "module-tests.pose_test"]], "tests.pose_tf_graph_mode_test module": [[84, "module-tests.pose_tf_graph_mode_test"]], "tests Submodules": [[85, "tests-submodules"]]}, "indexentries": {"fastanduglyposevisualizer (class in pose_format.pose_visualizer)": [[5, "pose_format.pose_visualizer.FastAndUglyPoseVisualizer"], [16, "pose_format.pose_visualizer.FastAndUglyPoseVisualizer"]], "pose (class in pose_format.pose)": [[5, "pose_format.pose.Pose"], [11, "pose_format.pose.Pose"]], "posebody (class in pose_format.pose_body)": [[5, "pose_format.pose_body.PoseBody"], [12, "pose_format.pose_body.PoseBody"]], "poseheader (class in pose_format.pose_header)": [[5, "pose_format.pose_header.PoseHeader"], [13, "pose_format.pose_header.PoseHeader"]], "poseheadercomponent (class in pose_format.pose_header)": [[5, "pose_format.pose_header.PoseHeaderComponent"], [13, "pose_format.pose_header.PoseHeaderComponent"]], "poseheaderdimensions (class in pose_format.pose_header)": [[5, "pose_format.pose_header.PoseHeaderDimensions"], [13, "pose_format.pose_header.PoseHeaderDimensions"]], "posenormalizationinfo (class in pose_format.pose_header)": [[5, "pose_format.pose_header.PoseNormalizationInfo"], [13, "pose_format.pose_header.PoseNormalizationInfo"]], "poserepresentation (class in pose_format.pose_representation)": [[5, "pose_format.pose_representation.PoseRepresentation"], [14, "pose_format.pose_representation.PoseRepresentation"]], "posevisualizer (class in pose_format.pose_visualizer)": [[5, "pose_format.pose_visualizer.PoseVisualizer"], [16, "pose_format.pose_visualizer.PoseVisualizer"]], "testpose (class in pose_format.pose_test)": [[5, "pose_format.pose_test.TestPose"], [15, "pose_format.pose_test.TestPose"]], "testposenumpyposebody (class in pose_format.pose_test)": [[5, "pose_format.pose_test.TestPoseNumpyPoseBody"], [15, "pose_format.pose_test.TestPoseNumpyPoseBody"]], "testposetensorflowposebody (class in pose_format.pose_test)": [[5, "pose_format.pose_test.TestPoseTensorflowPoseBody"], [15, "pose_format.pose_test.TestPoseTensorflowPoseBody"]], "augment2d() (pose_format.pose_body.posebody method)": [[5, "pose_format.pose_body.PoseBody.augment2d"], [12, "pose_format.pose_body.PoseBody.augment2d"]], "bbox() (pose_format.pose.pose method)": [[5, "pose_format.pose.Pose.bbox"], [11, "pose_format.pose.Pose.bbox"]], "bbox() (pose_format.pose_body.posebody method)": [[5, "pose_format.pose_body.PoseBody.bbox"], [12, "pose_format.pose_body.PoseBody.bbox"]], "bbox() (pose_format.pose_header.poseheader method)": [[5, "pose_format.pose_header.PoseHeader.bbox"], [13, "pose_format.pose_header.PoseHeader.bbox"]], "calc_output_size() (pose_format.pose_representation.poserepresentation method)": [[5, "pose_format.pose_representation.PoseRepresentation.calc_output_size"], [14, "pose_format.pose_representation.PoseRepresentation.calc_output_size"]], "draw() (pose_format.pose_visualizer.fastanduglyposevisualizer method)": [[5, "pose_format.pose_visualizer.FastAndUglyPoseVisualizer.draw"], [16, "pose_format.pose_visualizer.FastAndUglyPoseVisualizer.draw"]], "draw() (pose_format.pose_visualizer.posevisualizer method)": [[5, "pose_format.pose_visualizer.PoseVisualizer.draw"], [16, "pose_format.pose_visualizer.PoseVisualizer.draw"]], "draw_on_video() (pose_format.pose_visualizer.posevisualizer method)": [[5, "pose_format.pose_visualizer.PoseVisualizer.draw_on_video"], [16, "pose_format.pose_visualizer.PoseVisualizer.draw_on_video"]], "flatten() (pose_format.pose_body.posebody method)": [[5, "pose_format.pose_body.PoseBody.flatten"], [12, "pose_format.pose_body.PoseBody.flatten"]], "focus() (pose_format.pose.pose method)": [[5, "pose_format.pose.Pose.focus"], [11, "pose_format.pose.Pose.focus"]], "frame_dropout_given_percent() (pose_format.pose_body.posebody method)": [[5, "pose_format.pose_body.PoseBody.frame_dropout_given_percent"], [12, "pose_format.pose_body.PoseBody.frame_dropout_given_percent"]], "frame_dropout_normal() (pose_format.pose.pose method)": [[5, "pose_format.pose.Pose.frame_dropout_normal"], [11, "pose_format.pose.Pose.frame_dropout_normal"]], "frame_dropout_normal() (pose_format.pose_body.posebody method)": [[5, "pose_format.pose_body.PoseBody.frame_dropout_normal"], [12, "pose_format.pose_body.PoseBody.frame_dropout_normal"]], "frame_dropout_uniform() (pose_format.pose.pose method)": [[5, "pose_format.pose.Pose.frame_dropout_uniform"], [11, "pose_format.pose.Pose.frame_dropout_uniform"]], "frame_dropout_uniform() (pose_format.pose_body.posebody method)": [[5, "pose_format.pose_body.PoseBody.frame_dropout_uniform"], [12, "pose_format.pose_body.PoseBody.frame_dropout_uniform"]], "get_components() (pose_format.pose.pose method)": [[5, "pose_format.pose.Pose.get_components"], [11, "pose_format.pose.Pose.get_components"]], "get_limbs_points() (pose_format.pose_representation.poserepresentation method)": [[5, "pose_format.pose_representation.PoseRepresentation.get_limbs_points"], [14, "pose_format.pose_representation.PoseRepresentation.get_limbs_points"]], "get_points() (pose_format.pose_body.posebody method)": [[5, "pose_format.pose_body.PoseBody.get_points"], [12, "pose_format.pose_body.PoseBody.get_points"]], "get_points() (pose_format.pose_representation.poserepresentation method)": [[5, "pose_format.pose_representation.PoseRepresentation.get_points"], [14, "pose_format.pose_representation.PoseRepresentation.get_points"]], "get_relative_limbs() (pose_format.pose_header.poseheadercomponent method)": [[5, "pose_format.pose_header.PoseHeaderComponent.get_relative_limbs"], [13, "pose_format.pose_header.PoseHeaderComponent.get_relative_limbs"]], "get_triangles_points() (pose_format.pose_representation.poserepresentation method)": [[5, "pose_format.pose_representation.PoseRepresentation.get_triangles_points"], [14, "pose_format.pose_representation.PoseRepresentation.get_triangles_points"]], "group_embeds() (pose_format.pose_representation.poserepresentation method)": [[5, "pose_format.pose_representation.PoseRepresentation.group_embeds"], [14, "pose_format.pose_representation.PoseRepresentation.group_embeds"]], "input_size (pose_format.pose_representation.poserepresentation attribute)": [[5, "pose_format.pose_representation.PoseRepresentation.input_size"], [14, "pose_format.pose_representation.PoseRepresentation.input_size"]], "matmul() (pose_format.pose_body.posebody method)": [[5, "pose_format.pose_body.PoseBody.matmul"], [12, "pose_format.pose_body.PoseBody.matmul"]], "module": [[5, "module-pose_format.pose"], [5, "module-pose_format.pose_body"], [5, "module-pose_format.pose_header"], [5, "module-pose_format.pose_representation"], [5, "module-pose_format.pose_test"], [5, "module-pose_format.pose_visualizer"], [6, "module-pose_format.numpy"], [7, "module-pose_format.numpy.pose_body"], [9, "module-pose_format.numpy.representation.distance"], [10, "module-pose_format.numpy.representation.distance_test"], [11, "module-pose_format.pose"], [12, "module-pose_format.pose_body"], [13, "module-pose_format.pose_header"], [14, "module-pose_format.pose_representation"], [15, "module-pose_format.pose_test"], [16, "module-pose_format.pose_visualizer"], [17, "module-pose_format.tensorflow.pose_body"], [17, "module-pose_format.tensorflow.pose_body_test"], [17, "module-pose_format.tensorflow.pose_representation"], [17, "module-pose_format.tensorflow.pose_representation_test"], [18, "module-pose_format.tensorflow.masked"], [19, "module-pose_format.tensorflow.masked.tensor"], [20, "module-pose_format.tensorflow.masked.tensor_graph_mode_test"], [21, "module-pose_format.tensorflow.masked.tensor_test"], [22, "module-pose_format.tensorflow.masked.tensorflow"], [23, "module-pose_format.tensorflow.masked.tensorflow_test"], [24, "module-pose_format.tensorflow.pose_body"], [25, "module-pose_format.tensorflow.pose_body_test"], [26, "module-pose_format.tensorflow.pose_representation"], [27, "module-pose_format.tensorflow.pose_representation_test"], [29, "module-pose_format.tensorflow.representation.angle"], [30, "module-pose_format.tensorflow.representation.angle_test"], [31, "module-pose_format.tensorflow.representation.distance"], [32, "module-pose_format.tensorflow.representation.distance_test"], [33, "module-pose_format.tensorflow.representation.inner_angle"], [34, "module-pose_format.tensorflow.representation.inner_angle_test"], [35, "module-pose_format.tensorflow.representation.point_line_distance"], [36, "module-pose_format.tensorflow.representation.point_line_distance_test"], [37, "module-pose_format.testing"], [38, "module-pose_format.third_party"], [40, "module-pose_format.torch"], [40, "module-pose_format.torch.pose_body"], [40, "module-pose_format.torch.pose_representation"], [41, "module-pose_format.torch.masked.tensor"], [41, "module-pose_format.torch.masked.torch"], [41, "module-pose_format.torch.masked.torch_test"], [42, "module-pose_format.torch.masked.tensor"], [43, "module-pose_format.torch.masked.torch"], [44, "module-pose_format.torch.masked.torch_test"], [45, "module-pose_format.torch.pose_body"], [46, "module-pose_format.torch.pose_representation"], [47, "module-pose_format.torch.representation"], [48, "module-pose_format.torch.representation.angle"], [49, "module-pose_format.torch.representation.angle_test"], [50, "module-pose_format.torch.representation.distance"], [51, "module-pose_format.torch.representation.distance_test"], [52, "module-pose_format.torch.representation.inner_angle"], [53, "module-pose_format.torch.representation.inner_angle_test"], [54, "module-pose_format.torch.representation.point_line_distance"], [55, "module-pose_format.torch.representation.point_line_distance_test"], [56, "module-pose_format.torch.representation.points"], [58, "module-pose_format.utils.fast_math"], [59, "module-pose_format.utils.holistic"], [60, "module-pose_format.utils.normalization_3d"], [61, "module-pose_format.utils.openpose"], [62, "module-pose_format.utils.openpose_135"], [63, "module-pose_format.utils.openpose_test"], [64, "module-pose_format.utils.optical_flow"], [65, "module-pose_format.utils.pose_converter"], [66, "module-pose_format.utils.reader"], [67, "module-pose_format.utils.reader_test"], [68, "module-pose_format.utils.siren"], [81, "module-tests.hand_normalization_test"], [82, "module-tests.optical_flow_test"], [83, "module-tests.pose_test"], [84, "module-tests.pose_tf_graph_mode_test"]], "normalization_info() (pose_format.pose_header.poseheader method)": [[5, "pose_format.pose_header.PoseHeader.normalization_info"], [13, "pose_format.pose_header.PoseHeader.normalization_info"]], "normalize() (pose_format.pose.pose method)": [[5, "pose_format.pose.Pose.normalize"], [11, "pose_format.pose.Pose.normalize"]], "normalize_distribution() (pose_format.pose.pose method)": [[5, "pose_format.pose.Pose.normalize_distribution"], [11, "pose_format.pose.Pose.normalize_distribution"]], "numpy() (pose_format.pose_body.posebody method)": [[5, "pose_format.pose_body.PoseBody.numpy"], [12, "pose_format.pose_body.PoseBody.numpy"]], "output_size (pose_format.pose_representation.poserepresentation attribute)": [[5, "pose_format.pose_representation.PoseRepresentation.output_size"], [14, "pose_format.pose_representation.PoseRepresentation.output_size"]], "pass_through_methods (pose_format.pose.pose attribute)": [[5, "pose_format.pose.Pose.pass_through_methods"], [11, "pose_format.pose.Pose.pass_through_methods"]], "permute() (pose_format.pose_representation.poserepresentation method)": [[5, "pose_format.pose_representation.PoseRepresentation.permute"], [14, "pose_format.pose_representation.PoseRepresentation.permute"]], "points_perspective() (pose_format.pose_body.posebody method)": [[5, "pose_format.pose_body.PoseBody.points_perspective"], [12, "pose_format.pose_body.PoseBody.points_perspective"]], "pose_format.pose": [[5, "module-pose_format.pose"], [11, "module-pose_format.pose"]], "pose_format.pose_body": [[5, "module-pose_format.pose_body"], [12, "module-pose_format.pose_body"]], "pose_format.pose_header": [[5, "module-pose_format.pose_header"], [13, "module-pose_format.pose_header"]], "pose_format.pose_representation": [[5, "module-pose_format.pose_representation"], [14, "module-pose_format.pose_representation"]], "pose_format.pose_test": [[5, "module-pose_format.pose_test"], [15, "module-pose_format.pose_test"]], "pose_format.pose_visualizer": [[5, "module-pose_format.pose_visualizer"], [16, "module-pose_format.pose_visualizer"]], "read() (pose_format.pose.pose static method)": [[5, "pose_format.pose.Pose.read"], [11, "pose_format.pose.Pose.read"]], "read() (pose_format.pose_body.posebody class method)": [[5, "pose_format.pose_body.PoseBody.read"], [12, "pose_format.pose_body.PoseBody.read"]], "read() (pose_format.pose_header.poseheader static method)": [[5, "pose_format.pose_header.PoseHeader.read"], [13, "pose_format.pose_header.PoseHeader.read"]], "read() (pose_format.pose_header.poseheadercomponent static method)": [[5, "pose_format.pose_header.PoseHeaderComponent.read"], [13, "pose_format.pose_header.PoseHeaderComponent.read"]], "read() (pose_format.pose_header.poseheaderdimensions static method)": [[5, "pose_format.pose_header.PoseHeaderDimensions.read"], [13, "pose_format.pose_header.PoseHeaderDimensions.read"]], "read_v0_0() (pose_format.pose_body.posebody class method)": [[5, "pose_format.pose_body.PoseBody.read_v0_0"], [12, "pose_format.pose_body.PoseBody.read_v0_0"]], "read_v0_1() (pose_format.pose_body.posebody class method)": [[5, "pose_format.pose_body.PoseBody.read_v0_1"], [12, "pose_format.pose_body.PoseBody.read_v0_1"]], "read_v0_1_frames() (pose_format.pose_body.posebody class method)": [[5, "pose_format.pose_body.PoseBody.read_v0_1_frames"], [12, "pose_format.pose_body.PoseBody.read_v0_1_frames"]], "rep_modules1_size (pose_format.pose_representation.poserepresentation attribute)": [[5, "pose_format.pose_representation.PoseRepresentation.rep_modules1_size"], [14, "pose_format.pose_representation.PoseRepresentation.rep_modules1_size"]], "rep_modules2_size (pose_format.pose_representation.poserepresentation attribute)": [[5, "pose_format.pose_representation.PoseRepresentation.rep_modules2_size"], [14, "pose_format.pose_representation.PoseRepresentation.rep_modules2_size"]], "rep_modules3_size (pose_format.pose_representation.poserepresentation attribute)": [[5, "pose_format.pose_representation.PoseRepresentation.rep_modules3_size"], [14, "pose_format.pose_representation.PoseRepresentation.rep_modules3_size"]], "save_frame() (pose_format.pose_visualizer.posevisualizer method)": [[5, "pose_format.pose_visualizer.PoseVisualizer.save_frame"], [16, "pose_format.pose_visualizer.PoseVisualizer.save_frame"]], "save_gif() (pose_format.pose_visualizer.posevisualizer method)": [[5, "pose_format.pose_visualizer.PoseVisualizer.save_gif"], [16, "pose_format.pose_visualizer.PoseVisualizer.save_gif"]], "save_video() (pose_format.pose_visualizer.posevisualizer method)": [[5, "pose_format.pose_visualizer.PoseVisualizer.save_video"], [16, "pose_format.pose_visualizer.PoseVisualizer.save_video"]], "select_frames() (pose_format.pose_body.posebody method)": [[5, "pose_format.pose_body.PoseBody.select_frames"], [12, "pose_format.pose_body.PoseBody.select_frames"]], "slice_step() (pose_format.pose_body.posebody method)": [[5, "pose_format.pose_body.PoseBody.slice_step"], [12, "pose_format.pose_body.PoseBody.slice_step"]], "tensor_reader (pose_format.pose_body.posebody attribute)": [[5, "pose_format.pose_body.PoseBody.tensor_reader"], [12, "pose_format.pose_body.PoseBody.tensor_reader"]], "tensorflow() (pose_format.pose_body.posebody method)": [[5, "pose_format.pose_body.PoseBody.tensorflow"], [12, "pose_format.pose_body.PoseBody.tensorflow"]], "test_pose_frame_dropout_normal_can_be_used_in_tf_dataset_map() (pose_format.pose_test.testposetensorflowposebody method)": [[5, "pose_format.pose_test.TestPoseTensorflowPoseBody.test_pose_frame_dropout_normal_can_be_used_in_tf_dataset_map"], [15, "pose_format.pose_test.TestPoseTensorflowPoseBody.test_pose_frame_dropout_normal_can_be_used_in_tf_dataset_map"]], "test_pose_frame_dropout_uniform_can_be_used_in_tf_dataset_map() (pose_format.pose_test.testposetensorflowposebody method)": [[5, "pose_format.pose_test.TestPoseTensorflowPoseBody.test_pose_frame_dropout_uniform_can_be_used_in_tf_dataset_map"], [15, "pose_format.pose_test.TestPoseTensorflowPoseBody.test_pose_frame_dropout_uniform_can_be_used_in_tf_dataset_map"]], "test_pose_normalize_can_be_used_in_tf_dataset_map() (pose_format.pose_test.testposetensorflowposebody method)": [[5, "pose_format.pose_test.TestPoseTensorflowPoseBody.test_pose_normalize_can_be_used_in_tf_dataset_map"], [15, "pose_format.pose_test.TestPoseTensorflowPoseBody.test_pose_normalize_can_be_used_in_tf_dataset_map"]], "test_pose_normalize_distribution_can_be_used_in_tf_dataset_map() (pose_format.pose_test.testposetensorflowposebody method)": [[5, "pose_format.pose_test.TestPoseTensorflowPoseBody.test_pose_normalize_distribution_can_be_used_in_tf_dataset_map"], [15, "pose_format.pose_test.TestPoseTensorflowPoseBody.test_pose_normalize_distribution_can_be_used_in_tf_dataset_map"]], "test_pose_numpy_posebody_frame_dropout_normal_eager_mode_num_frames_not_zero() (pose_format.pose_test.testposenumpyposebody method)": [[5, "pose_format.pose_test.TestPoseNumpyPoseBody.test_pose_numpy_posebody_frame_dropout_normal_eager_mode_num_frames_not_zero"], [15, "pose_format.pose_test.TestPoseNumpyPoseBody.test_pose_numpy_posebody_frame_dropout_normal_eager_mode_num_frames_not_zero"]], "test_pose_numpy_posebody_frame_dropout_uniform_eager_mode_num_frames_not_zero() (pose_format.pose_test.testposenumpyposebody method)": [[5, "pose_format.pose_test.TestPoseNumpyPoseBody.test_pose_numpy_posebody_frame_dropout_uniform_eager_mode_num_frames_not_zero"], [15, "pose_format.pose_test.TestPoseNumpyPoseBody.test_pose_numpy_posebody_frame_dropout_uniform_eager_mode_num_frames_not_zero"]], "test_pose_numpy_posebody_normalize_preserves_shape() (pose_format.pose_test.testposenumpyposebody method)": [[5, "pose_format.pose_test.TestPoseNumpyPoseBody.test_pose_numpy_posebody_normalize_preserves_shape"], [15, "pose_format.pose_test.TestPoseNumpyPoseBody.test_pose_numpy_posebody_normalize_preserves_shape"]], "test_pose_object_should_be_callable() (pose_format.pose_test.testpose method)": [[5, "pose_format.pose_test.TestPose.test_pose_object_should_be_callable"], [15, "pose_format.pose_test.TestPose.test_pose_object_should_be_callable"]], "test_pose_tf_posebody_frame_dropout_normal_eager_mode_num_frames_not_zero() (pose_format.pose_test.testposetensorflowposebody method)": [[5, "pose_format.pose_test.TestPoseTensorflowPoseBody.test_pose_tf_posebody_frame_dropout_normal_eager_mode_num_frames_not_zero"], [15, "pose_format.pose_test.TestPoseTensorflowPoseBody.test_pose_tf_posebody_frame_dropout_normal_eager_mode_num_frames_not_zero"]], "test_pose_tf_posebody_frame_dropout_uniform_eager_mode_num_frames_not_zero() (pose_format.pose_test.testposetensorflowposebody method)": [[5, "pose_format.pose_test.TestPoseTensorflowPoseBody.test_pose_tf_posebody_frame_dropout_uniform_eager_mode_num_frames_not_zero"], [15, "pose_format.pose_test.TestPoseTensorflowPoseBody.test_pose_tf_posebody_frame_dropout_uniform_eager_mode_num_frames_not_zero"]], "test_pose_tf_posebody_normalize_distribution_eager_mode_correct_result() (pose_format.pose_test.testposetensorflowposebody method)": [[5, "pose_format.pose_test.TestPoseTensorflowPoseBody.test_pose_tf_posebody_normalize_distribution_eager_mode_correct_result"], [15, "pose_format.pose_test.TestPoseTensorflowPoseBody.test_pose_tf_posebody_normalize_distribution_eager_mode_correct_result"]], "test_pose_tf_posebody_normalize_eager_mode_preserves_shape() (pose_format.pose_test.testposetensorflowposebody method)": [[5, "pose_format.pose_test.TestPoseTensorflowPoseBody.test_pose_tf_posebody_normalize_eager_mode_preserves_shape"], [15, "pose_format.pose_test.TestPoseTensorflowPoseBody.test_pose_tf_posebody_normalize_eager_mode_preserves_shape"]], "torch() (pose_format.pose_body.posebody method)": [[5, "pose_format.pose_body.PoseBody.torch"], [12, "pose_format.pose_body.PoseBody.torch"]], "total_points() (pose_format.pose_header.poseheader method)": [[5, "pose_format.pose_header.PoseHeader.total_points"], [13, "pose_format.pose_header.PoseHeader.total_points"]], "unnormalize_distribution() (pose_format.pose.pose method)": [[5, "pose_format.pose.Pose.unnormalize_distribution"], [11, "pose_format.pose.Pose.unnormalize_distribution"]], "write() (pose_format.pose.pose method)": [[5, "pose_format.pose.Pose.write"], [11, "pose_format.pose.Pose.write"]], "write() (pose_format.pose_body.posebody method)": [[5, "pose_format.pose_body.PoseBody.write"], [12, "pose_format.pose_body.PoseBody.write"]], "write() (pose_format.pose_header.poseheader method)": [[5, "pose_format.pose_header.PoseHeader.write"], [13, "pose_format.pose_header.PoseHeader.write"]], "write() (pose_format.pose_header.poseheadercomponent method)": [[5, "pose_format.pose_header.PoseHeaderComponent.write"], [13, "pose_format.pose_header.PoseHeaderComponent.write"]], "write() (pose_format.pose_header.poseheaderdimensions method)": [[5, "pose_format.pose_header.PoseHeaderDimensions.write"], [13, "pose_format.pose_header.PoseHeaderDimensions.write"]], "zero_filled() (pose_format.pose_body.posebody method)": [[5, "pose_format.pose_body.PoseBody.zero_filled"], [12, "pose_format.pose_body.PoseBody.zero_filled"]], "pose_format.numpy": [[6, "module-pose_format.numpy"]], "numpyposebody (class in pose_format.numpy.pose_body)": [[7, "pose_format.numpy.pose_body.NumPyPoseBody"]], "bbox() (pose_format.numpy.pose_body.numpyposebody method)": [[7, "pose_format.numpy.pose_body.NumPyPoseBody.bbox"]], "flatten() (pose_format.numpy.pose_body.numpyposebody method)": [[7, "pose_format.numpy.pose_body.NumPyPoseBody.flatten"]], "flip() (pose_format.numpy.pose_body.numpyposebody method)": [[7, "pose_format.numpy.pose_body.NumPyPoseBody.flip"]], "get_points() (pose_format.numpy.pose_body.numpyposebody method)": [[7, "pose_format.numpy.pose_body.NumPyPoseBody.get_points"]], "interpolate() (pose_format.numpy.pose_body.numpyposebody method)": [[7, "pose_format.numpy.pose_body.NumPyPoseBody.interpolate"]], "mask (pose_format.numpy.pose_body.numpyposebody property)": [[7, "pose_format.numpy.pose_body.NumPyPoseBody.mask"]], "matmul() (pose_format.numpy.pose_body.numpyposebody method)": [[7, "pose_format.numpy.pose_body.NumPyPoseBody.matmul"]], "points_perspective() (pose_format.numpy.pose_body.numpyposebody method)": [[7, "pose_format.numpy.pose_body.NumPyPoseBody.points_perspective"]], "pose_format.numpy.pose_body": [[7, "module-pose_format.numpy.pose_body"]], "read_v0_0() (pose_format.numpy.pose_body.numpyposebody class method)": [[7, "pose_format.numpy.pose_body.NumPyPoseBody.read_v0_0"]], "tensor_reader (pose_format.numpy.pose_body.numpyposebody attribute)": [[7, "pose_format.numpy.pose_body.NumPyPoseBody.tensor_reader"]], "tensorflow() (pose_format.numpy.pose_body.numpyposebody method)": [[7, "pose_format.numpy.pose_body.NumPyPoseBody.tensorflow"]], "torch() (pose_format.numpy.pose_body.numpyposebody method)": [[7, "pose_format.numpy.pose_body.NumPyPoseBody.torch"]], "write() (pose_format.numpy.pose_body.numpyposebody method)": [[7, "pose_format.numpy.pose_body.NumPyPoseBody.write"]], "zero_filled() (pose_format.numpy.pose_body.numpyposebody method)": [[7, "pose_format.numpy.pose_body.NumPyPoseBody.zero_filled"]], "distancerepresentation (class in pose_format.numpy.representation.distance)": [[9, "pose_format.numpy.representation.distance.DistanceRepresentation"]], "distance() (pose_format.numpy.representation.distance.distancerepresentation method)": [[9, "pose_format.numpy.representation.distance.DistanceRepresentation.distance"]], "pose_format.numpy.representation.distance": [[9, "module-pose_format.numpy.representation.distance"]], "testdistancerepresentation (class in pose_format.numpy.representation.distance_test)": [[10, "pose_format.numpy.representation.distance_test.TestDistanceRepresentation"]], "pose_format.numpy.representation.distance_test": [[10, "module-pose_format.numpy.representation.distance_test"]], "test_call_masked_value_should_be_zero() (pose_format.numpy.representation.distance_test.testdistancerepresentation method)": [[10, "pose_format.numpy.representation.distance_test.TestDistanceRepresentation.test_call_masked_value_should_be_zero"]], "test_call_value_should_be_distance() (pose_format.numpy.representation.distance_test.testdistancerepresentation method)": [[10, "pose_format.numpy.representation.distance_test.TestDistanceRepresentation.test_call_value_should_be_distance"]], "tensorflowposebody (class in pose_format.tensorflow.pose_body)": [[17, "pose_format.tensorflow.pose_body.TensorflowPoseBody"], [24, "pose_format.tensorflow.pose_body.TensorflowPoseBody"]], "tensorflowposerepresentation (class in pose_format.tensorflow.pose_representation)": [[17, "pose_format.tensorflow.pose_representation.TensorflowPoseRepresentation"], [26, "pose_format.tensorflow.pose_representation.TensorflowPoseRepresentation"]], "testtensorflowposebody (class in pose_format.tensorflow.pose_body_test)": [[17, "pose_format.tensorflow.pose_body_test.TestTensorflowPoseBody"], [25, "pose_format.tensorflow.pose_body_test.TestTensorflowPoseBody"]], "testtensorflowposerepresentation (class in pose_format.tensorflow.pose_representation_test)": [[17, "pose_format.tensorflow.pose_representation_test.TestTensorflowPoseRepresentation"], [27, "pose_format.tensorflow.pose_representation_test.TestTensorflowPoseRepresentation"]], "as_tfrecord() (pose_format.tensorflow.pose_body.tensorflowposebody method)": [[17, "pose_format.tensorflow.pose_body.TensorflowPoseBody.as_tfrecord"], [24, "pose_format.tensorflow.pose_body.TensorflowPoseBody.as_tfrecord"]], "frame_dropout_given_percent() (pose_format.tensorflow.pose_body.tensorflowposebody method)": [[17, "pose_format.tensorflow.pose_body.TensorflowPoseBody.frame_dropout_given_percent"], [24, "pose_format.tensorflow.pose_body.TensorflowPoseBody.frame_dropout_given_percent"]], "frame_dropout_normal() (pose_format.tensorflow.pose_body.tensorflowposebody method)": [[17, "pose_format.tensorflow.pose_body.TensorflowPoseBody.frame_dropout_normal"], [24, "pose_format.tensorflow.pose_body.TensorflowPoseBody.frame_dropout_normal"]], "frame_dropout_uniform() (pose_format.tensorflow.pose_body.tensorflowposebody method)": [[17, "pose_format.tensorflow.pose_body.TensorflowPoseBody.frame_dropout_uniform"], [24, "pose_format.tensorflow.pose_body.TensorflowPoseBody.frame_dropout_uniform"]], "from_tfrecord() (pose_format.tensorflow.pose_body.tensorflowposebody class method)": [[17, "pose_format.tensorflow.pose_body.TensorflowPoseBody.from_tfrecord"], [24, "pose_format.tensorflow.pose_body.TensorflowPoseBody.from_tfrecord"]], "get_points() (pose_format.tensorflow.pose_body.tensorflowposebody method)": [[17, "pose_format.tensorflow.pose_body.TensorflowPoseBody.get_points"], [24, "pose_format.tensorflow.pose_body.TensorflowPoseBody.get_points"]], "get_points() (pose_format.tensorflow.pose_representation.tensorflowposerepresentation method)": [[17, "pose_format.tensorflow.pose_representation.TensorflowPoseRepresentation.get_points"], [26, "pose_format.tensorflow.pose_representation.TensorflowPoseRepresentation.get_points"]], "group_embeds() (pose_format.tensorflow.pose_representation.tensorflowposerepresentation method)": [[17, "pose_format.tensorflow.pose_representation.TensorflowPoseRepresentation.group_embeds"], [26, "pose_format.tensorflow.pose_representation.TensorflowPoseRepresentation.group_embeds"]], "matmul() (pose_format.tensorflow.pose_body.tensorflowposebody method)": [[17, "pose_format.tensorflow.pose_body.TensorflowPoseBody.matmul"], [24, "pose_format.tensorflow.pose_body.TensorflowPoseBody.matmul"]], "permute() (pose_format.tensorflow.pose_representation.tensorflowposerepresentation method)": [[17, "pose_format.tensorflow.pose_representation.TensorflowPoseRepresentation.permute"], [26, "pose_format.tensorflow.pose_representation.TensorflowPoseRepresentation.permute"]], "points_perspective() (pose_format.tensorflow.pose_body.tensorflowposebody method)": [[17, "pose_format.tensorflow.pose_body.TensorflowPoseBody.points_perspective"], [24, "pose_format.tensorflow.pose_body.TensorflowPoseBody.points_perspective"]], "pose_format.tensorflow.pose_body": [[17, "module-pose_format.tensorflow.pose_body"], [24, "module-pose_format.tensorflow.pose_body"]], "pose_format.tensorflow.pose_body_test": [[17, "module-pose_format.tensorflow.pose_body_test"], [25, "module-pose_format.tensorflow.pose_body_test"]], "pose_format.tensorflow.pose_representation": [[17, "module-pose_format.tensorflow.pose_representation"], [26, "module-pose_format.tensorflow.pose_representation"]], "pose_format.tensorflow.pose_representation_test": [[17, "module-pose_format.tensorflow.pose_representation_test"], [27, "module-pose_format.tensorflow.pose_representation_test"]], "select_frames() (pose_format.tensorflow.pose_body.tensorflowposebody method)": [[17, "pose_format.tensorflow.pose_body.TensorflowPoseBody.select_frames"], [24, "pose_format.tensorflow.pose_body.TensorflowPoseBody.select_frames"]], "tensor_reader (pose_format.tensorflow.pose_body.tensorflowposebody attribute)": [[17, "pose_format.tensorflow.pose_body.TensorflowPoseBody.tensor_reader"], [24, "pose_format.tensorflow.pose_body.TensorflowPoseBody.tensor_reader"]], "test_calc_output_size() (pose_format.tensorflow.pose_representation_test.testtensorflowposerepresentation method)": [[17, "pose_format.tensorflow.pose_representation_test.TestTensorflowPoseRepresentation.test_calc_output_size"], [27, "pose_format.tensorflow.pose_representation_test.TestTensorflowPoseRepresentation.test_calc_output_size"]], "test_call_return_shape() (pose_format.tensorflow.pose_representation_test.testtensorflowposerepresentation method)": [[17, "pose_format.tensorflow.pose_representation_test.TestTensorflowPoseRepresentation.test_call_return_shape"], [27, "pose_format.tensorflow.pose_representation_test.TestTensorflowPoseRepresentation.test_call_return_shape"]], "test_input_size() (pose_format.tensorflow.pose_representation_test.testtensorflowposerepresentation method)": [[17, "pose_format.tensorflow.pose_representation_test.TestTensorflowPoseRepresentation.test_input_size"], [27, "pose_format.tensorflow.pose_representation_test.TestTensorflowPoseRepresentation.test_input_size"]], "test_tf_pose_body_zero_filled_fills_in_zeros() (pose_format.tensorflow.pose_body_test.testtensorflowposebody method)": [[17, "pose_format.tensorflow.pose_body_test.TestTensorflowPoseBody.test_tf_pose_body_zero_filled_fills_in_zeros"], [25, "pose_format.tensorflow.pose_body_test.TestTensorflowPoseBody.test_tf_pose_body_zero_filled_fills_in_zeros"]], "zero_filled() (pose_format.tensorflow.pose_body.tensorflowposebody method)": [[17, "pose_format.tensorflow.pose_body.TensorflowPoseBody.zero_filled"], [24, "pose_format.tensorflow.pose_body.TensorflowPoseBody.zero_filled"]], "pose_format.tensorflow.masked": [[18, "module-pose_format.tensorflow.masked"]], "maskedtensor (class in pose_format.tensorflow.masked.tensor)": [[19, "pose_format.tensorflow.masked.tensor.MaskedTensor"]], "arithmetic() (pose_format.tensorflow.masked.tensor.maskedtensor method)": [[19, "pose_format.tensorflow.masked.tensor.MaskedTensor.arithmetic"]], "div() (pose_format.tensorflow.masked.tensor.maskedtensor method)": [[19, "pose_format.tensorflow.masked.tensor.MaskedTensor.div"]], "fix_nan() (pose_format.tensorflow.masked.tensor.maskedtensor method)": [[19, "pose_format.tensorflow.masked.tensor.MaskedTensor.fix_nan"]], "float() (pose_format.tensorflow.masked.tensor.maskedtensor method)": [[19, "pose_format.tensorflow.masked.tensor.MaskedTensor.float"]], "gather() (pose_format.tensorflow.masked.tensor.maskedtensor method)": [[19, "pose_format.tensorflow.masked.tensor.MaskedTensor.gather"]], "matmul() (pose_format.tensorflow.masked.tensor.maskedtensor method)": [[19, "pose_format.tensorflow.masked.tensor.MaskedTensor.matmul"]], "mean() (pose_format.tensorflow.masked.tensor.maskedtensor method)": [[19, "pose_format.tensorflow.masked.tensor.MaskedTensor.mean"]], "permute() (pose_format.tensorflow.masked.tensor.maskedtensor method)": [[19, "pose_format.tensorflow.masked.tensor.MaskedTensor.permute"]], "pose_format.tensorflow.masked.tensor": [[19, "module-pose_format.tensorflow.masked.tensor"]], "rename() (pose_format.tensorflow.masked.tensor.maskedtensor method)": [[19, "pose_format.tensorflow.masked.tensor.MaskedTensor.rename"]], "reshape() (pose_format.tensorflow.masked.tensor.maskedtensor method)": [[19, "pose_format.tensorflow.masked.tensor.MaskedTensor.reshape"]], "size() (pose_format.tensorflow.masked.tensor.maskedtensor method)": [[19, "pose_format.tensorflow.masked.tensor.MaskedTensor.size"]], "split() (pose_format.tensorflow.masked.tensor.maskedtensor method)": [[19, "pose_format.tensorflow.masked.tensor.MaskedTensor.split"]], "sqrt() (pose_format.tensorflow.masked.tensor.maskedtensor method)": [[19, "pose_format.tensorflow.masked.tensor.MaskedTensor.sqrt"]], "square() (pose_format.tensorflow.masked.tensor.maskedtensor method)": [[19, "pose_format.tensorflow.masked.tensor.MaskedTensor.square"]], "squeeze() (pose_format.tensorflow.masked.tensor.maskedtensor method)": [[19, "pose_format.tensorflow.masked.tensor.MaskedTensor.squeeze"]], "std() (pose_format.tensorflow.masked.tensor.maskedtensor method)": [[19, "pose_format.tensorflow.masked.tensor.MaskedTensor.std"]], "sum() (pose_format.tensorflow.masked.tensor.maskedtensor method)": [[19, "pose_format.tensorflow.masked.tensor.MaskedTensor.sum"]], "transpose() (pose_format.tensorflow.masked.tensor.maskedtensor method)": [[19, "pose_format.tensorflow.masked.tensor.MaskedTensor.transpose"]], "variance() (pose_format.tensorflow.masked.tensor.maskedtensor method)": [[19, "pose_format.tensorflow.masked.tensor.MaskedTensor.variance"]], "zero_filled() (pose_format.tensorflow.masked.tensor.maskedtensor method)": [[19, "pose_format.tensorflow.masked.tensor.MaskedTensor.zero_filled"]], "testmaskedtensor (class in pose_format.tensorflow.masked.tensor_graph_mode_test)": [[20, "pose_format.tensorflow.masked.tensor_graph_mode_test.TestMaskedTensor"]], "pose_format.tensorflow.masked.tensor_graph_mode_test": [[20, "module-pose_format.tensorflow.masked.tensor_graph_mode_test"]], "test_eq_graph_execution() (pose_format.tensorflow.masked.tensor_graph_mode_test.testmaskedtensor method)": [[20, "pose_format.tensorflow.masked.tensor_graph_mode_test.TestMaskedTensor.test_eq_graph_execution"]], "test_float_graph_execution_fails() (pose_format.tensorflow.masked.tensor_graph_mode_test.testmaskedtensor method)": [[20, "pose_format.tensorflow.masked.tensor_graph_mode_test.TestMaskedTensor.test_float_graph_execution_fails"]], "testmaskedtensor (class in pose_format.tensorflow.masked.tensor_test)": [[21, "pose_format.tensorflow.masked.tensor_test.TestMaskedTensor"]], "create_random_numpy_tensor_and_mask() (in module pose_format.tensorflow.masked.tensor_test)": [[21, "pose_format.tensorflow.masked.tensor_test.create_random_numpy_tensor_and_mask"]], "pose_format.tensorflow.masked.tensor_test": [[21, "module-pose_format.tensorflow.masked.tensor_test"]], "test_fix_nan() (pose_format.tensorflow.masked.tensor_test.testmaskedtensor method)": [[21, "pose_format.tensorflow.masked.tensor_test.TestMaskedTensor.test_fix_nan"]], "test_float_eager_execution_return_type_is_correct() (pose_format.tensorflow.masked.tensor_test.testmaskedtensor method)": [[21, "pose_format.tensorflow.masked.tensor_test.TestMaskedTensor.test_float_eager_execution_return_type_is_correct"]], "test_mean() (pose_format.tensorflow.masked.tensor_test.testmaskedtensor method)": [[21, "pose_format.tensorflow.masked.tensor_test.TestMaskedTensor.test_mean"]], "test_reshape_identical_to_numpy_reshape() (pose_format.tensorflow.masked.tensor_test.testmaskedtensor method)": [[21, "pose_format.tensorflow.masked.tensor_test.TestMaskedTensor.test_reshape_identical_to_numpy_reshape"]], "test_reshape_return_type_is_correct() (pose_format.tensorflow.masked.tensor_test.testmaskedtensor method)": [[21, "pose_format.tensorflow.masked.tensor_test.TestMaskedTensor.test_reshape_return_type_is_correct"]], "test_std() (pose_format.tensorflow.masked.tensor_test.testmaskedtensor method)": [[21, "pose_format.tensorflow.masked.tensor_test.TestMaskedTensor.test_std"]], "maskedtensorflow (class in pose_format.tensorflow.masked.tensorflow)": [[22, "pose_format.tensorflow.masked.tensorflow.MaskedTensorflow"]], "tensorflowfallback (class in pose_format.tensorflow.masked.tensorflow)": [[22, "pose_format.tensorflow.masked.tensorflow.TensorflowFallback"]], "concat() (pose_format.tensorflow.masked.tensorflow.maskedtensorflow static method)": [[22, "pose_format.tensorflow.masked.tensorflow.MaskedTensorflow.concat"]], "doesnt_change_mask (pose_format.tensorflow.masked.tensorflow.tensorflowfallback attribute)": [[22, "pose_format.tensorflow.masked.tensorflow.TensorflowFallback.doesnt_change_mask"]], "pose_format.tensorflow.masked.tensorflow": [[22, "module-pose_format.tensorflow.masked.tensorflow"]], "stack() (pose_format.tensorflow.masked.tensorflow.maskedtensorflow static method)": [[22, "pose_format.tensorflow.masked.tensorflow.MaskedTensorflow.stack"]], "zeros() (pose_format.tensorflow.masked.tensorflow.maskedtensorflow static method)": [[22, "pose_format.tensorflow.masked.tensorflow.MaskedTensorflow.zeros"]], "testmaskedtensorflow (class in pose_format.tensorflow.masked.tensorflow_test)": [[23, "pose_format.tensorflow.masked.tensorflow_test.TestMaskedTensorflow"]], "pose_format.tensorflow.masked.tensorflow_test": [[23, "module-pose_format.tensorflow.masked.tensorflow_test"]], "test_cat() (pose_format.tensorflow.masked.tensorflow_test.testmaskedtensorflow method)": [[23, "pose_format.tensorflow.masked.tensorflow_test.TestMaskedTensorflow.test_cat"]], "test_not_implemented_method() (pose_format.tensorflow.masked.tensorflow_test.testmaskedtensorflow method)": [[23, "pose_format.tensorflow.masked.tensorflow_test.TestMaskedTensorflow.test_not_implemented_method"]], "test_stack() (pose_format.tensorflow.masked.tensorflow_test.testmaskedtensorflow method)": [[23, "pose_format.tensorflow.masked.tensorflow_test.TestMaskedTensorflow.test_stack"]], "test_zeros_mask_value() (pose_format.tensorflow.masked.tensorflow_test.testmaskedtensorflow method)": [[23, "pose_format.tensorflow.masked.tensorflow_test.TestMaskedTensorflow.test_zeros_mask_value"]], "test_zeros_tensor_shape() (pose_format.tensorflow.masked.tensorflow_test.testmaskedtensorflow method)": [[23, "pose_format.tensorflow.masked.tensorflow_test.TestMaskedTensorflow.test_zeros_tensor_shape"]], "test_zeros_tensor_type_bool() (pose_format.tensorflow.masked.tensorflow_test.testmaskedtensorflow method)": [[23, "pose_format.tensorflow.masked.tensorflow_test.TestMaskedTensorflow.test_zeros_tensor_type_bool"]], "test_zeros_tensor_type_float() (pose_format.tensorflow.masked.tensorflow_test.testmaskedtensorflow method)": [[23, "pose_format.tensorflow.masked.tensorflow_test.TestMaskedTensorflow.test_zeros_tensor_type_float"]], "test_zeros_tensor_value() (pose_format.tensorflow.masked.tensorflow_test.testmaskedtensorflow method)": [[23, "pose_format.tensorflow.masked.tensorflow_test.TestMaskedTensorflow.test_zeros_tensor_value"]], "anglerepresentation (class in pose_format.tensorflow.representation.angle)": [[29, "pose_format.tensorflow.representation.angle.AngleRepresentation"]], "pose_format.tensorflow.representation.angle": [[29, "module-pose_format.tensorflow.representation.angle"]], "testanglerepresentation (class in pose_format.tensorflow.representation.angle_test)": [[30, "pose_format.tensorflow.representation.angle_test.TestAngleRepresentation"]], "pose_format.tensorflow.representation.angle_test": [[30, "module-pose_format.tensorflow.representation.angle_test"]], "test_call_value_should_be_angle() (pose_format.tensorflow.representation.angle_test.testanglerepresentation method)": [[30, "pose_format.tensorflow.representation.angle_test.TestAngleRepresentation.test_call_value_should_be_angle"]], "distancerepresentation (class in pose_format.tensorflow.representation.distance)": [[31, "pose_format.tensorflow.representation.distance.DistanceRepresentation"]], "distance() (pose_format.tensorflow.representation.distance.distancerepresentation method)": [[31, "pose_format.tensorflow.representation.distance.DistanceRepresentation.distance"]], "pose_format.tensorflow.representation.distance": [[31, "module-pose_format.tensorflow.representation.distance"]], "testdistancerepresentation (class in pose_format.tensorflow.representation.distance_test)": [[32, "pose_format.tensorflow.representation.distance_test.TestDistanceRepresentation"]], "pose_format.tensorflow.representation.distance_test": [[32, "module-pose_format.tensorflow.representation.distance_test"]], "test_call_value_should_be_distance() (pose_format.tensorflow.representation.distance_test.testdistancerepresentation method)": [[32, "pose_format.tensorflow.representation.distance_test.TestDistanceRepresentation.test_call_value_should_be_distance"]], "inneranglerepresentation (class in pose_format.tensorflow.representation.inner_angle)": [[33, "pose_format.tensorflow.representation.inner_angle.InnerAngleRepresentation"]], "get_vectors_norm() (in module pose_format.tensorflow.representation.inner_angle)": [[33, "pose_format.tensorflow.representation.inner_angle.get_vectors_norm"]], "pose_format.tensorflow.representation.inner_angle": [[33, "module-pose_format.tensorflow.representation.inner_angle"]], "testinneranglerepresentation (class in pose_format.tensorflow.representation.inner_angle_test)": [[34, "pose_format.tensorflow.representation.inner_angle_test.TestInnerAngleRepresentation"]], "pose_format.tensorflow.representation.inner_angle_test": [[34, "module-pose_format.tensorflow.representation.inner_angle_test"]], "test_call_value_should_be_inner_angle() (pose_format.tensorflow.representation.inner_angle_test.testinneranglerepresentation method)": [[34, "pose_format.tensorflow.representation.inner_angle_test.TestInnerAngleRepresentation.test_call_value_should_be_inner_angle"]], "pointlinedistancerepresentation (class in pose_format.tensorflow.representation.point_line_distance)": [[35, "pose_format.tensorflow.representation.point_line_distance.PointLineDistanceRepresentation"]], "pose_format.tensorflow.representation.point_line_distance": [[35, "module-pose_format.tensorflow.representation.point_line_distance"]], "testpointlinedistancerepresentation (class in pose_format.tensorflow.representation.point_line_distance_test)": [[36, "pose_format.tensorflow.representation.point_line_distance_test.TestPointLineDistanceRepresentation"]], "pose_format.tensorflow.representation.point_line_distance_test": [[36, "module-pose_format.tensorflow.representation.point_line_distance_test"]], "test_call_value_should_be_distance() (pose_format.tensorflow.representation.point_line_distance_test.testpointlinedistancerepresentation method)": [[36, "pose_format.tensorflow.representation.point_line_distance_test.TestPointLineDistanceRepresentation.test_call_value_should_be_distance"]], "pose_format.testing": [[37, "module-pose_format.testing"]], "pose_format.third_party": [[38, "module-pose_format.third_party"]], "torchposebody (class in pose_format.torch.pose_body)": [[40, "pose_format.torch.pose_body.TorchPoseBody"], [45, "pose_format.torch.pose_body.TorchPoseBody"]], "torchposerepresentation (class in pose_format.torch.pose_representation)": [[40, "pose_format.torch.pose_representation.TorchPoseRepresentation"], [46, "pose_format.torch.pose_representation.TorchPoseRepresentation"]], "cuda() (pose_format.torch.pose_body.torchposebody method)": [[40, "pose_format.torch.pose_body.TorchPoseBody.cuda"], [45, "pose_format.torch.pose_body.TorchPoseBody.cuda"]], "flatten() (pose_format.torch.pose_body.torchposebody method)": [[40, "pose_format.torch.pose_body.TorchPoseBody.flatten"], [45, "pose_format.torch.pose_body.TorchPoseBody.flatten"]], "get_points() (pose_format.torch.pose_body.torchposebody method)": [[40, "pose_format.torch.pose_body.TorchPoseBody.get_points"], [45, "pose_format.torch.pose_body.TorchPoseBody.get_points"]], "group_embeds() (pose_format.torch.pose_representation.torchposerepresentation method)": [[40, "pose_format.torch.pose_representation.TorchPoseRepresentation.group_embeds"], [46, "pose_format.torch.pose_representation.TorchPoseRepresentation.group_embeds"]], "header (pose_format.torch.pose_representation.torchposerepresentation attribute)": [[40, "pose_format.torch.pose_representation.TorchPoseRepresentation.header"], [46, "pose_format.torch.pose_representation.TorchPoseRepresentation.header"]], "matmul() (pose_format.torch.pose_body.torchposebody method)": [[40, "pose_format.torch.pose_body.TorchPoseBody.matmul"], [45, "pose_format.torch.pose_body.TorchPoseBody.matmul"]], "permute() (pose_format.torch.pose_representation.torchposerepresentation method)": [[40, "pose_format.torch.pose_representation.TorchPoseRepresentation.permute"], [46, "pose_format.torch.pose_representation.TorchPoseRepresentation.permute"]], "points_perspective() (pose_format.torch.pose_body.torchposebody method)": [[40, "pose_format.torch.pose_body.TorchPoseBody.points_perspective"], [45, "pose_format.torch.pose_body.TorchPoseBody.points_perspective"]], "pose_format.torch": [[40, "module-pose_format.torch"]], "pose_format.torch.pose_body": [[40, "module-pose_format.torch.pose_body"], [45, "module-pose_format.torch.pose_body"]], "pose_format.torch.pose_representation": [[40, "module-pose_format.torch.pose_representation"], [46, "module-pose_format.torch.pose_representation"]], "rep_modules1 (pose_format.torch.pose_representation.torchposerepresentation attribute)": [[40, "pose_format.torch.pose_representation.TorchPoseRepresentation.rep_modules1"], [46, "pose_format.torch.pose_representation.TorchPoseRepresentation.rep_modules1"]], "rep_modules2 (pose_format.torch.pose_representation.torchposerepresentation attribute)": [[40, "pose_format.torch.pose_representation.TorchPoseRepresentation.rep_modules2"], [46, "pose_format.torch.pose_representation.TorchPoseRepresentation.rep_modules2"]], "rep_modules3 (pose_format.torch.pose_representation.torchposerepresentation attribute)": [[40, "pose_format.torch.pose_representation.TorchPoseRepresentation.rep_modules3"], [46, "pose_format.torch.pose_representation.TorchPoseRepresentation.rep_modules3"]], "tensor_reader (pose_format.torch.pose_body.torchposebody attribute)": [[40, "pose_format.torch.pose_body.TorchPoseBody.tensor_reader"], [45, "pose_format.torch.pose_body.TorchPoseBody.tensor_reader"]], "zero_filled() (pose_format.torch.pose_body.torchposebody method)": [[40, "pose_format.torch.pose_body.TorchPoseBody.zero_filled"], [45, "pose_format.torch.pose_body.TorchPoseBody.zero_filled"]], "maskedtensor (class in pose_format.torch.masked.tensor)": [[41, "pose_format.torch.masked.tensor.MaskedTensor"], [42, "pose_format.torch.masked.tensor.MaskedTensor"]], "maskedtorch (class in pose_format.torch.masked.torch)": [[41, "pose_format.torch.masked.torch.MaskedTorch"], [43, "pose_format.torch.masked.torch.MaskedTorch"]], "testmaskedtorch (class in pose_format.torch.masked.torch_test)": [[41, "pose_format.torch.masked.torch_test.TestMaskedTorch"], [44, "pose_format.torch.masked.torch_test.TestMaskedTorch"]], "torchfallback (class in pose_format.torch.masked.torch)": [[41, "pose_format.torch.masked.torch.TorchFallback"], [43, "pose_format.torch.masked.torch.TorchFallback"]], "arithmetic() (pose_format.torch.masked.tensor.maskedtensor method)": [[41, "pose_format.torch.masked.tensor.MaskedTensor.arithmetic"], [42, "pose_format.torch.masked.tensor.MaskedTensor.arithmetic"]], "cat() (pose_format.torch.masked.torch.maskedtorch static method)": [[41, "pose_format.torch.masked.torch.MaskedTorch.cat"], [43, "pose_format.torch.masked.torch.MaskedTorch.cat"]], "cuda() (pose_format.torch.masked.tensor.maskedtensor method)": [[41, "pose_format.torch.masked.tensor.MaskedTensor.cuda"], [42, "pose_format.torch.masked.tensor.MaskedTensor.cuda"]], "div() (pose_format.torch.masked.tensor.maskedtensor method)": [[41, "pose_format.torch.masked.tensor.MaskedTensor.div"], [42, "pose_format.torch.masked.tensor.MaskedTensor.div"]], "doesnt_change_mask (pose_format.torch.masked.torch.torchfallback attribute)": [[41, "pose_format.torch.masked.torch.TorchFallback.doesnt_change_mask"], [43, "pose_format.torch.masked.torch.TorchFallback.doesnt_change_mask"]], "fix_nan() (pose_format.torch.masked.tensor.maskedtensor method)": [[41, "pose_format.torch.masked.tensor.MaskedTensor.fix_nan"], [42, "pose_format.torch.masked.tensor.MaskedTensor.fix_nan"]], "matmul() (pose_format.torch.masked.tensor.maskedtensor method)": [[41, "pose_format.torch.masked.tensor.MaskedTensor.matmul"], [42, "pose_format.torch.masked.tensor.MaskedTensor.matmul"]], "permute() (pose_format.torch.masked.tensor.maskedtensor method)": [[41, "pose_format.torch.masked.tensor.MaskedTensor.permute"], [42, "pose_format.torch.masked.tensor.MaskedTensor.permute"]], "pose_format.torch.masked.tensor": [[41, "module-pose_format.torch.masked.tensor"], [42, "module-pose_format.torch.masked.tensor"]], "pose_format.torch.masked.torch": [[41, "module-pose_format.torch.masked.torch"], [43, "module-pose_format.torch.masked.torch"]], "pose_format.torch.masked.torch_test": [[41, "module-pose_format.torch.masked.torch_test"], [44, "module-pose_format.torch.masked.torch_test"]], "pow_() (pose_format.torch.masked.tensor.maskedtensor method)": [[41, "pose_format.torch.masked.tensor.MaskedTensor.pow_"], [42, "pose_format.torch.masked.tensor.MaskedTensor.pow_"]], "rename() (pose_format.torch.masked.tensor.maskedtensor method)": [[41, "pose_format.torch.masked.tensor.MaskedTensor.rename"], [42, "pose_format.torch.masked.tensor.MaskedTensor.rename"]], "reshape() (pose_format.torch.masked.tensor.maskedtensor method)": [[41, "pose_format.torch.masked.tensor.MaskedTensor.reshape"], [42, "pose_format.torch.masked.tensor.MaskedTensor.reshape"]], "size() (pose_format.torch.masked.tensor.maskedtensor method)": [[41, "pose_format.torch.masked.tensor.MaskedTensor.size"], [42, "pose_format.torch.masked.tensor.MaskedTensor.size"]], "split() (pose_format.torch.masked.tensor.maskedtensor method)": [[41, "pose_format.torch.masked.tensor.MaskedTensor.split"], [42, "pose_format.torch.masked.tensor.MaskedTensor.split"]], "squeeze() (pose_format.torch.masked.tensor.maskedtensor method)": [[41, "pose_format.torch.masked.tensor.MaskedTensor.squeeze"], [42, "pose_format.torch.masked.tensor.MaskedTensor.squeeze"]], "squeeze() (pose_format.torch.masked.torch.maskedtorch static method)": [[41, "pose_format.torch.masked.torch.MaskedTorch.squeeze"], [43, "pose_format.torch.masked.torch.MaskedTorch.squeeze"]], "stack() (pose_format.torch.masked.torch.maskedtorch static method)": [[41, "pose_format.torch.masked.torch.MaskedTorch.stack"], [43, "pose_format.torch.masked.torch.MaskedTorch.stack"]], "sum() (pose_format.torch.masked.tensor.maskedtensor method)": [[41, "pose_format.torch.masked.tensor.MaskedTensor.sum"], [42, "pose_format.torch.masked.tensor.MaskedTensor.sum"]], "test_cat() (pose_format.torch.masked.torch_test.testmaskedtorch method)": [[41, "pose_format.torch.masked.torch_test.TestMaskedTorch.test_cat"], [44, "pose_format.torch.masked.torch_test.TestMaskedTorch.test_cat"]], "test_not_implemented_method() (pose_format.torch.masked.torch_test.testmaskedtorch method)": [[41, "pose_format.torch.masked.torch_test.TestMaskedTorch.test_not_implemented_method"], [44, "pose_format.torch.masked.torch_test.TestMaskedTorch.test_not_implemented_method"]], "test_stack() (pose_format.torch.masked.torch_test.testmaskedtorch method)": [[41, "pose_format.torch.masked.torch_test.TestMaskedTorch.test_stack"], [44, "pose_format.torch.masked.torch_test.TestMaskedTorch.test_stack"]], "test_zeros_mask_value() (pose_format.torch.masked.torch_test.testmaskedtorch method)": [[41, "pose_format.torch.masked.torch_test.TestMaskedTorch.test_zeros_mask_value"], [44, "pose_format.torch.masked.torch_test.TestMaskedTorch.test_zeros_mask_value"]], "test_zeros_tensor_shape() (pose_format.torch.masked.torch_test.testmaskedtorch method)": [[41, "pose_format.torch.masked.torch_test.TestMaskedTorch.test_zeros_tensor_shape"], [44, "pose_format.torch.masked.torch_test.TestMaskedTorch.test_zeros_tensor_shape"]], "test_zeros_tensor_type_bool() (pose_format.torch.masked.torch_test.testmaskedtorch method)": [[41, "pose_format.torch.masked.torch_test.TestMaskedTorch.test_zeros_tensor_type_bool"], [44, "pose_format.torch.masked.torch_test.TestMaskedTorch.test_zeros_tensor_type_bool"]], "test_zeros_tensor_type_float() (pose_format.torch.masked.torch_test.testmaskedtorch method)": [[41, "pose_format.torch.masked.torch_test.TestMaskedTorch.test_zeros_tensor_type_float"], [44, "pose_format.torch.masked.torch_test.TestMaskedTorch.test_zeros_tensor_type_float"]], "test_zeros_tensor_value() (pose_format.torch.masked.torch_test.testmaskedtorch method)": [[41, "pose_format.torch.masked.torch_test.TestMaskedTorch.test_zeros_tensor_value"], [44, "pose_format.torch.masked.torch_test.TestMaskedTorch.test_zeros_tensor_value"]], "to() (pose_format.torch.masked.tensor.maskedtensor method)": [[41, "pose_format.torch.masked.tensor.MaskedTensor.to"], [42, "pose_format.torch.masked.tensor.MaskedTensor.to"]], "transpose() (pose_format.torch.masked.tensor.maskedtensor method)": [[41, "pose_format.torch.masked.tensor.MaskedTensor.transpose"], [42, "pose_format.torch.masked.tensor.MaskedTensor.transpose"]], "zero_filled() (pose_format.torch.masked.tensor.maskedtensor method)": [[41, "pose_format.torch.masked.tensor.MaskedTensor.zero_filled"], [42, "pose_format.torch.masked.tensor.MaskedTensor.zero_filled"]], "zeros() (pose_format.torch.masked.torch.maskedtorch static method)": [[41, "pose_format.torch.masked.torch.MaskedTorch.zeros"], [43, "pose_format.torch.masked.torch.MaskedTorch.zeros"]], "pose_format.torch.representation": [[47, "module-pose_format.torch.representation"]], "anglerepresentation (class in pose_format.torch.representation.angle)": [[48, "pose_format.torch.representation.angle.AngleRepresentation"]], "forward() (pose_format.torch.representation.angle.anglerepresentation method)": [[48, "pose_format.torch.representation.angle.AngleRepresentation.forward"]], "pose_format.torch.representation.angle": [[48, "module-pose_format.torch.representation.angle"]], "training (pose_format.torch.representation.angle.anglerepresentation attribute)": [[48, "pose_format.torch.representation.angle.AngleRepresentation.training"]], "testanglerepresentation (class in pose_format.torch.representation.angle_test)": [[49, "pose_format.torch.representation.angle_test.TestAngleRepresentation"]], "pose_format.torch.representation.angle_test": [[49, "module-pose_format.torch.representation.angle_test"]], "test_call_masked_value_should_be_zero() (pose_format.torch.representation.angle_test.testanglerepresentation method)": [[49, "pose_format.torch.representation.angle_test.TestAngleRepresentation.test_call_masked_value_should_be_zero"]], "test_call_value_should_be_angle() (pose_format.torch.representation.angle_test.testanglerepresentation method)": [[49, "pose_format.torch.representation.angle_test.TestAngleRepresentation.test_call_value_should_be_angle"]], "distancerepresentation (class in pose_format.torch.representation.distance)": [[50, "pose_format.torch.representation.distance.DistanceRepresentation"]], "distance() (pose_format.torch.representation.distance.distancerepresentation method)": [[50, "pose_format.torch.representation.distance.DistanceRepresentation.distance"]], "forward() (pose_format.torch.representation.distance.distancerepresentation method)": [[50, "pose_format.torch.representation.distance.DistanceRepresentation.forward"]], "pose_format.torch.representation.distance": [[50, "module-pose_format.torch.representation.distance"]], "training (pose_format.torch.representation.distance.distancerepresentation attribute)": [[50, "pose_format.torch.representation.distance.DistanceRepresentation.training"]], "testdistancerepresentation (class in pose_format.torch.representation.distance_test)": [[51, "pose_format.torch.representation.distance_test.TestDistanceRepresentation"]], "pose_format.torch.representation.distance_test": [[51, "module-pose_format.torch.representation.distance_test"]], "test_call_masked_value_should_be_zero() (pose_format.torch.representation.distance_test.testdistancerepresentation method)": [[51, "pose_format.torch.representation.distance_test.TestDistanceRepresentation.test_call_masked_value_should_be_zero"]], "test_call_value_should_be_distance() (pose_format.torch.representation.distance_test.testdistancerepresentation method)": [[51, "pose_format.torch.representation.distance_test.TestDistanceRepresentation.test_call_value_should_be_distance"]], "inneranglerepresentation (class in pose_format.torch.representation.inner_angle)": [[52, "pose_format.torch.representation.inner_angle.InnerAngleRepresentation"]], "forward() (pose_format.torch.representation.inner_angle.inneranglerepresentation method)": [[52, "pose_format.torch.representation.inner_angle.InnerAngleRepresentation.forward"]], "get_vectors_norm() (in module pose_format.torch.representation.inner_angle)": [[52, "pose_format.torch.representation.inner_angle.get_vectors_norm"]], "pose_format.torch.representation.inner_angle": [[52, "module-pose_format.torch.representation.inner_angle"]], "training (pose_format.torch.representation.inner_angle.inneranglerepresentation attribute)": [[52, "pose_format.torch.representation.inner_angle.InnerAngleRepresentation.training"]], "testinneranglerepresentation (class in pose_format.torch.representation.inner_angle_test)": [[53, "pose_format.torch.representation.inner_angle_test.TestInnerAngleRepresentation"]], "pose_format.torch.representation.inner_angle_test": [[53, "module-pose_format.torch.representation.inner_angle_test"]], "test_call_masked_value_should_be_zero() (pose_format.torch.representation.inner_angle_test.testinneranglerepresentation method)": [[53, "pose_format.torch.representation.inner_angle_test.TestInnerAngleRepresentation.test_call_masked_value_should_be_zero"]], "test_call_value_should_be_inner_angle() (pose_format.torch.representation.inner_angle_test.testinneranglerepresentation method)": [[53, "pose_format.torch.representation.inner_angle_test.TestInnerAngleRepresentation.test_call_value_should_be_inner_angle"]], "pointlinedistancerepresentation (class in pose_format.torch.representation.point_line_distance)": [[54, "pose_format.torch.representation.point_line_distance.PointLineDistanceRepresentation"]], "forward() (pose_format.torch.representation.point_line_distance.pointlinedistancerepresentation method)": [[54, "pose_format.torch.representation.point_line_distance.PointLineDistanceRepresentation.forward"]], "pose_format.torch.representation.point_line_distance": [[54, "module-pose_format.torch.representation.point_line_distance"]], "training (pose_format.torch.representation.point_line_distance.pointlinedistancerepresentation attribute)": [[54, "pose_format.torch.representation.point_line_distance.PointLineDistanceRepresentation.training"]], "testpointlinedistancerepresentation (class in pose_format.torch.representation.point_line_distance_test)": [[55, "pose_format.torch.representation.point_line_distance_test.TestPointLineDistanceRepresentation"]], "pose_format.torch.representation.point_line_distance_test": [[55, "module-pose_format.torch.representation.point_line_distance_test"]], "test_call_masked_value_should_be_zero() (pose_format.torch.representation.point_line_distance_test.testpointlinedistancerepresentation method)": [[55, "pose_format.torch.representation.point_line_distance_test.TestPointLineDistanceRepresentation.test_call_masked_value_should_be_zero"]], "test_call_value_should_be_distance() (pose_format.torch.representation.point_line_distance_test.testpointlinedistancerepresentation method)": [[55, "pose_format.torch.representation.point_line_distance_test.TestPointLineDistanceRepresentation.test_call_value_should_be_distance"]], "pointsrepresentation (class in pose_format.torch.representation.points)": [[56, "pose_format.torch.representation.points.PointsRepresentation"]], "forward() (pose_format.torch.representation.points.pointsrepresentation method)": [[56, "pose_format.torch.representation.points.PointsRepresentation.forward"]], "pose_format.torch.representation.points": [[56, "module-pose_format.torch.representation.points"]], "training (pose_format.torch.representation.points.pointsrepresentation attribute)": [[56, "pose_format.torch.representation.points.PointsRepresentation.training"]], "distance_batch() (in module pose_format.utils.fast_math)": [[58, "pose_format.utils.fast_math.distance_batch"]], "pose_format.utils.fast_math": [[58, "module-pose_format.utils.fast_math"]], "face_points() (in module pose_format.utils.holistic)": [[59, "pose_format.utils.holistic.FACE_POINTS"]], "face_points_num() (in module pose_format.utils.holistic)": [[59, "pose_format.utils.holistic.FACE_POINTS_NUM"]], "body_points() (in module pose_format.utils.holistic)": [[59, "pose_format.utils.holistic.body_points"]], "component_points() (in module pose_format.utils.holistic)": [[59, "pose_format.utils.holistic.component_points"]], "formatted_holistic_pose() (in module pose_format.utils.holistic)": [[59, "pose_format.utils.holistic.formatted_holistic_pose"]], "holistic_components() (in module pose_format.utils.holistic)": [[59, "pose_format.utils.holistic.holistic_components"]], "holistic_hand_component() (in module pose_format.utils.holistic)": [[59, "pose_format.utils.holistic.holistic_hand_component"]], "load_holistic() (in module pose_format.utils.holistic)": [[59, "pose_format.utils.holistic.load_holistic"]], "load_mediapipe_directory() (in module pose_format.utils.holistic)": [[59, "pose_format.utils.holistic.load_mediapipe_directory"]], "pose_format.utils.holistic": [[59, "module-pose_format.utils.holistic"]], "process_holistic() (in module pose_format.utils.holistic)": [[59, "pose_format.utils.holistic.process_holistic"]], "posenormalizer (class in pose_format.utils.normalization_3d)": [[60, "pose_format.utils.normalization_3d.PoseNormalizer"]], "get_normal() (pose_format.utils.normalization_3d.posenormalizer method)": [[60, "pose_format.utils.normalization_3d.PoseNormalizer.get_normal"]], "get_rotation_angle() (pose_format.utils.normalization_3d.posenormalizer method)": [[60, "pose_format.utils.normalization_3d.PoseNormalizer.get_rotation_angle"]], "normalize_pose() (pose_format.utils.normalization_3d.posenormalizer method)": [[60, "pose_format.utils.normalization_3d.PoseNormalizer.normalize_pose"]], "pose_format.utils.normalization_3d": [[60, "module-pose_format.utils.normalization_3d"]], "rotate() (pose_format.utils.normalization_3d.posenormalizer method)": [[60, "pose_format.utils.normalization_3d.PoseNormalizer.rotate"]], "rotate_to_normal() (pose_format.utils.normalization_3d.posenormalizer method)": [[60, "pose_format.utils.normalization_3d.PoseNormalizer.rotate_to_normal"]], "scale() (pose_format.utils.normalization_3d.posenormalizer method)": [[60, "pose_format.utils.normalization_3d.PoseNormalizer.scale"]], "openpose_hand_component() (in module pose_format.utils.openpose)": [[61, "pose_format.utils.openpose.OpenPose_Hand_Component"]], "get_frame_id() (in module pose_format.utils.openpose)": [[61, "pose_format.utils.openpose.get_frame_id"]], "limbs_index() (in module pose_format.utils.openpose)": [[61, "pose_format.utils.openpose.limbs_index"]], "load_frames_directory_dict() (in module pose_format.utils.openpose)": [[61, "pose_format.utils.openpose.load_frames_directory_dict"]], "load_openpose() (in module pose_format.utils.openpose)": [[61, "pose_format.utils.openpose.load_openpose"]], "load_openpose_directory() (in module pose_format.utils.openpose)": [[61, "pose_format.utils.openpose.load_openpose_directory"]], "pose_format.utils.openpose": [[61, "module-pose_format.utils.openpose"]], "load_openpose_135_directory() (in module pose_format.utils.openpose_135)": [[62, "pose_format.utils.openpose_135.load_openpose_135_directory"]], "pose_format.utils.openpose_135": [[62, "module-pose_format.utils.openpose_135"]], "testloadopenpose (class in pose_format.utils.openpose_test)": [[63, "pose_format.utils.openpose_test.TestLoadOpenpose"]], "testloadopenposedirectory (class in pose_format.utils.openpose_test)": [[63, "pose_format.utils.openpose_test.TestLoadOpenposeDirectory"]], "testopenposecomponents (class in pose_format.utils.openpose_test)": [[63, "pose_format.utils.openpose_test.TestOpenposeComponents"]], "pose_format.utils.openpose_test": [[63, "module-pose_format.utils.openpose_test"]], "test_get_frame_id_no_prefix() (pose_format.utils.openpose_test.testloadopenposedirectory method)": [[63, "pose_format.utils.openpose_test.TestLoadOpenposeDirectory.test_get_frame_id_no_prefix"]], "test_get_frame_id_nonzero() (pose_format.utils.openpose_test.testloadopenposedirectory method)": [[63, "pose_format.utils.openpose_test.TestLoadOpenposeDirectory.test_get_frame_id_nonzero"]], "test_get_frame_id_several_digits() (pose_format.utils.openpose_test.testloadopenposedirectory method)": [[63, "pose_format.utils.openpose_test.TestLoadOpenposeDirectory.test_get_frame_id_several_digits"]], "test_get_frame_id_zero() (pose_format.utils.openpose_test.testloadopenposedirectory method)": [[63, "pose_format.utils.openpose_test.TestLoadOpenposeDirectory.test_get_frame_id_zero"]], "test_load_openpose_data_shape() (pose_format.utils.openpose_test.testloadopenpose method)": [[63, "pose_format.utils.openpose_test.TestLoadOpenpose.test_load_openpose_data_shape"]], "test_load_openpose_data_shape_missing_frames() (pose_format.utils.openpose_test.testloadopenpose method)": [[63, "pose_format.utils.openpose_test.TestLoadOpenpose.test_load_openpose_data_shape_missing_frames"]], "test_load_openpose_directory_data_shape() (pose_format.utils.openpose_test.testloadopenposedirectory method)": [[63, "pose_format.utils.openpose_test.TestLoadOpenposeDirectory.test_load_openpose_directory_data_shape"]], "test_load_openpose_directory_data_shape_add_empty_keys() (pose_format.utils.openpose_test.testloadopenposedirectory method)": [[63, "pose_format.utils.openpose_test.TestLoadOpenposeDirectory.test_load_openpose_directory_data_shape_add_empty_keys"]], "test_load_openpose_directory_data_shape_missing_frames() (pose_format.utils.openpose_test.testloadopenposedirectory method)": [[63, "pose_format.utils.openpose_test.TestLoadOpenposeDirectory.test_load_openpose_directory_data_shape_missing_frames"]], "test_load_openpose_directory_data_shape_no_file_prefix() (pose_format.utils.openpose_test.testloadopenposedirectory method)": [[63, "pose_format.utils.openpose_test.TestLoadOpenposeDirectory.test_load_openpose_directory_data_shape_no_file_prefix"]], "test_load_openpose_directory_extracts_correct_number_of_people() (pose_format.utils.openpose_test.testloadopenposedirectory method)": [[63, "pose_format.utils.openpose_test.TestLoadOpenposeDirectory.test_load_openpose_directory_extracts_correct_number_of_people"]], "test_load_openpose_directory_returns_pose_object() (pose_format.utils.openpose_test.testloadopenposedirectory method)": [[63, "pose_format.utils.openpose_test.TestLoadOpenposeDirectory.test_load_openpose_directory_returns_pose_object"]], "test_load_openpose_extracts_correct_number_of_people() (pose_format.utils.openpose_test.testloadopenpose method)": [[63, "pose_format.utils.openpose_test.TestLoadOpenpose.test_load_openpose_extracts_correct_number_of_people"]], "test_load_openpose_fixed_num_frames() (pose_format.utils.openpose_test.testloadopenpose method)": [[63, "pose_format.utils.openpose_test.TestLoadOpenpose.test_load_openpose_fixed_num_frames"]], "test_load_openpose_fixed_num_frames_and_missing_frames() (pose_format.utils.openpose_test.testloadopenpose method)": [[63, "pose_format.utils.openpose_test.TestLoadOpenpose.test_load_openpose_fixed_num_frames_and_missing_frames"]], "test_load_openpose_returns_pose_object() (pose_format.utils.openpose_test.testloadopenpose method)": [[63, "pose_format.utils.openpose_test.TestLoadOpenpose.test_load_openpose_returns_pose_object"]], "test_openpose_components_names() (pose_format.utils.openpose_test.testopenposecomponents method)": [[63, "pose_format.utils.openpose_test.TestOpenposeComponents.test_openpose_components_names"]], "test_openpose_components_total_points() (pose_format.utils.openpose_test.testopenposecomponents method)": [[63, "pose_format.utils.openpose_test.TestOpenposeComponents.test_openpose_components_total_points"]], "test_openpose_num_points_per_component_face() (pose_format.utils.openpose_test.testopenposecomponents method)": [[63, "pose_format.utils.openpose_test.TestOpenposeComponents.test_openpose_num_points_per_component_face"]], "test_openpose_num_points_per_component_hand_left() (pose_format.utils.openpose_test.testopenposecomponents method)": [[63, "pose_format.utils.openpose_test.TestOpenposeComponents.test_openpose_num_points_per_component_hand_left"]], "test_openpose_num_points_per_component_hand_right() (pose_format.utils.openpose_test.testopenposecomponents method)": [[63, "pose_format.utils.openpose_test.TestOpenposeComponents.test_openpose_num_points_per_component_hand_right"]], "test_openpose_num_points_per_component_pose() (pose_format.utils.openpose_test.testopenposecomponents method)": [[63, "pose_format.utils.openpose_test.TestOpenposeComponents.test_openpose_num_points_per_component_pose"]], "opticalflowcalculator (class in pose_format.utils.optical_flow)": [[64, "pose_format.utils.optical_flow.OpticalFlowCalculator"]], "pose_format.utils.optical_flow": [[64, "module-pose_format.utils.optical_flow"]], "convert_pose() (in module pose_format.utils.pose_converter)": [[65, "pose_format.utils.pose_converter.convert_pose"]], "pose_format.utils.pose_converter": [[65, "module-pose_format.utils.pose_converter"]], "save_image() (in module pose_format.utils.pose_converter)": [[65, "pose_format.utils.pose_converter.save_image"]], "bufferreader (class in pose_format.utils.reader)": [[66, "pose_format.utils.reader.BufferReader"]], "conststructs (class in pose_format.utils.reader)": [[66, "pose_format.utils.reader.ConstStructs"]], "advance() (pose_format.utils.reader.bufferreader method)": [[66, "pose_format.utils.reader.BufferReader.advance"]], "bytes_left() (pose_format.utils.reader.bufferreader method)": [[66, "pose_format.utils.reader.BufferReader.bytes_left"]], "double_ushort (pose_format.utils.reader.conststructs attribute)": [[66, "pose_format.utils.reader.ConstStructs.double_ushort"]], "float (pose_format.utils.reader.conststructs attribute)": [[66, "pose_format.utils.reader.ConstStructs.float"]], "pose_format.utils.reader": [[66, "module-pose_format.utils.reader"]], "short (pose_format.utils.reader.conststructs attribute)": [[66, "pose_format.utils.reader.ConstStructs.short"]], "triple_ushort (pose_format.utils.reader.conststructs attribute)": [[66, "pose_format.utils.reader.ConstStructs.triple_ushort"]], "unpack() (pose_format.utils.reader.bufferreader method)": [[66, "pose_format.utils.reader.BufferReader.unpack"]], "unpack_f() (pose_format.utils.reader.bufferreader method)": [[66, "pose_format.utils.reader.BufferReader.unpack_f"]], "unpack_numpy() (pose_format.utils.reader.bufferreader method)": [[66, "pose_format.utils.reader.BufferReader.unpack_numpy"]], "unpack_str() (pose_format.utils.reader.bufferreader method)": [[66, "pose_format.utils.reader.BufferReader.unpack_str"]], "unpack_tensorflow() (pose_format.utils.reader.bufferreader method)": [[66, "pose_format.utils.reader.BufferReader.unpack_tensorflow"]], "unpack_torch() (pose_format.utils.reader.bufferreader method)": [[66, "pose_format.utils.reader.BufferReader.unpack_torch"]], "ushort (pose_format.utils.reader.conststructs attribute)": [[66, "pose_format.utils.reader.ConstStructs.ushort"]], "testbufferreader (class in pose_format.utils.reader_test)": [[67, "pose_format.utils.reader_test.TestBufferReader"]], "pose_format.utils.reader_test": [[67, "module-pose_format.utils.reader_test"]], "test_advance() (pose_format.utils.reader_test.testbufferreader method)": [[67, "pose_format.utils.reader_test.TestBufferReader.test_advance"]], "test_bytes_left() (pose_format.utils.reader_test.testbufferreader method)": [[67, "pose_format.utils.reader_test.TestBufferReader.test_bytes_left"]], "test_unpack() (pose_format.utils.reader_test.testbufferreader method)": [[67, "pose_format.utils.reader_test.TestBufferReader.test_unpack"]], "test_unpack_f() (pose_format.utils.reader_test.testbufferreader method)": [[67, "pose_format.utils.reader_test.TestBufferReader.test_unpack_f"]], "test_unpack_numpy() (pose_format.utils.reader_test.testbufferreader method)": [[67, "pose_format.utils.reader_test.TestBufferReader.test_unpack_numpy"]], "test_unpack_numpy_writeable() (pose_format.utils.reader_test.testbufferreader method)": [[67, "pose_format.utils.reader_test.TestBufferReader.test_unpack_numpy_writeable"]], "test_unpack_str() (pose_format.utils.reader_test.testbufferreader method)": [[67, "pose_format.utils.reader_test.TestBufferReader.test_unpack_str"]], "test_unpack_tensorflow() (pose_format.utils.reader_test.testbufferreader method)": [[67, "pose_format.utils.reader_test.TestBufferReader.test_unpack_tensorflow"]], "test_unpack_torch() (pose_format.utils.reader_test.testbufferreader method)": [[67, "pose_format.utils.reader_test.TestBufferReader.test_unpack_torch"]], "posedataset (class in pose_format.utils.siren)": [[68, "pose_format.utils.siren.PoseDataset"]], "sinelayer (class in pose_format.utils.siren)": [[68, "pose_format.utils.siren.SineLayer"]], "siren (class in pose_format.utils.siren)": [[68, "pose_format.utils.siren.Siren"]], "forward() (pose_format.utils.siren.sinelayer method)": [[68, "pose_format.utils.siren.SineLayer.forward"]], "forward() (pose_format.utils.siren.siren method)": [[68, "pose_format.utils.siren.Siren.forward"]], "forward_with_activations() (pose_format.utils.siren.siren method)": [[68, "pose_format.utils.siren.Siren.forward_with_activations"]], "forward_with_intermediate() (pose_format.utils.siren.sinelayer method)": [[68, "pose_format.utils.siren.SineLayer.forward_with_intermediate"]], "get_coords() (pose_format.utils.siren.posedataset static method)": [[68, "pose_format.utils.siren.PoseDataset.get_coords"]], "get_pose_siren() (in module pose_format.utils.siren)": [[68, "pose_format.utils.siren.get_pose_siren"]], "init_weights() (pose_format.utils.siren.sinelayer method)": [[68, "pose_format.utils.siren.SineLayer.init_weights"]], "is_first (pose_format.utils.siren.sinelayer attribute)": [[68, "pose_format.utils.siren.SineLayer.is_first"]], "masked_mse_loss() (in module pose_format.utils.siren)": [[68, "pose_format.utils.siren.masked_mse_loss"]], "omega_0 (pose_format.utils.siren.sinelayer attribute)": [[68, "pose_format.utils.siren.SineLayer.omega_0"]], "pose_format.utils.siren": [[68, "module-pose_format.utils.siren"]], "training (pose_format.utils.siren.sinelayer attribute)": [[68, "pose_format.utils.siren.SineLayer.training"]], "training (pose_format.utils.siren.siren attribute)": [[68, "pose_format.utils.siren.Siren.training"]], "test3dnormalization (class in tests.hand_normalization_test)": [[81, "tests.hand_normalization_test.Test3DNormalization"]], "test_hand_normalization() (tests.hand_normalization_test.test3dnormalization method)": [[81, "tests.hand_normalization_test.Test3DNormalization.test_hand_normalization"]], "test_hand_normalization_results() (tests.hand_normalization_test.test3dnormalization method)": [[81, "tests.hand_normalization_test.Test3DNormalization.test_hand_normalization_results"]], "test_normal() (tests.hand_normalization_test.test3dnormalization method)": [[81, "tests.hand_normalization_test.Test3DNormalization.test_normal"]], "test_rotate_vector_by_90_degrees() (tests.hand_normalization_test.test3dnormalization method)": [[81, "tests.hand_normalization_test.Test3DNormalization.test_rotate_vector_by_90_degrees"]], "tests.hand_normalization_test": [[81, "module-tests.hand_normalization_test"]], "testopticalflow (class in tests.optical_flow_test)": [[82, "tests.optical_flow_test.TestOpticalFlow"]], "test_optical_flow() (tests.optical_flow_test.testopticalflow method)": [[82, "tests.optical_flow_test.TestOpticalFlow.test_optical_flow"]], "tests.optical_flow_test": [[82, "module-tests.optical_flow_test"]], "testpose (class in tests.pose_test)": [[83, "tests.pose_test.TestPose"]], "testposenumpyposebody (class in tests.pose_test)": [[83, "tests.pose_test.TestPoseNumpyPoseBody"]], "testposetensorflowposebody (class in tests.pose_test)": [[83, "tests.pose_test.TestPoseTensorflowPoseBody"]], "test_pose_frame_dropout_normal_can_be_used_in_tf_dataset_map() (tests.pose_test.testposetensorflowposebody method)": [[83, "tests.pose_test.TestPoseTensorflowPoseBody.test_pose_frame_dropout_normal_can_be_used_in_tf_dataset_map"]], "test_pose_frame_dropout_uniform_can_be_used_in_tf_dataset_map() (tests.pose_test.testposetensorflowposebody method)": [[83, "tests.pose_test.TestPoseTensorflowPoseBody.test_pose_frame_dropout_uniform_can_be_used_in_tf_dataset_map"]], "test_pose_normalize_can_be_used_in_tf_dataset_map() (tests.pose_test.testposetensorflowposebody method)": [[83, "tests.pose_test.TestPoseTensorflowPoseBody.test_pose_normalize_can_be_used_in_tf_dataset_map"]], "test_pose_normalize_distribution_can_be_used_in_tf_dataset_map() (tests.pose_test.testposetensorflowposebody method)": [[83, "tests.pose_test.TestPoseTensorflowPoseBody.test_pose_normalize_distribution_can_be_used_in_tf_dataset_map"]], "test_pose_numpy_posebody_frame_dropout_normal_eager_mode_num_frames_not_zero() (tests.pose_test.testposenumpyposebody method)": [[83, "tests.pose_test.TestPoseNumpyPoseBody.test_pose_numpy_posebody_frame_dropout_normal_eager_mode_num_frames_not_zero"]], "test_pose_numpy_posebody_frame_dropout_uniform_eager_mode_num_frames_not_zero() (tests.pose_test.testposenumpyposebody method)": [[83, "tests.pose_test.TestPoseNumpyPoseBody.test_pose_numpy_posebody_frame_dropout_uniform_eager_mode_num_frames_not_zero"]], "test_pose_numpy_posebody_normalize_preserves_shape() (tests.pose_test.testposenumpyposebody method)": [[83, "tests.pose_test.TestPoseNumpyPoseBody.test_pose_numpy_posebody_normalize_preserves_shape"]], "test_pose_object_should_be_callable() (tests.pose_test.testpose method)": [[83, "tests.pose_test.TestPose.test_pose_object_should_be_callable"]], "test_pose_tf_posebody_frame_dropout_normal_eager_mode_num_frames_not_zero() (tests.pose_test.testposetensorflowposebody method)": [[83, "tests.pose_test.TestPoseTensorflowPoseBody.test_pose_tf_posebody_frame_dropout_normal_eager_mode_num_frames_not_zero"]], "test_pose_tf_posebody_frame_dropout_uniform_eager_mode_num_frames_not_zero() (tests.pose_test.testposetensorflowposebody method)": [[83, "tests.pose_test.TestPoseTensorflowPoseBody.test_pose_tf_posebody_frame_dropout_uniform_eager_mode_num_frames_not_zero"]], "test_pose_tf_posebody_normalize_distribution_eager_mode_correct_result() (tests.pose_test.testposetensorflowposebody method)": [[83, "tests.pose_test.TestPoseTensorflowPoseBody.test_pose_tf_posebody_normalize_distribution_eager_mode_correct_result"]], "test_pose_tf_posebody_normalize_eager_mode_preserves_shape() (tests.pose_test.testposetensorflowposebody method)": [[83, "tests.pose_test.TestPoseTensorflowPoseBody.test_pose_tf_posebody_normalize_eager_mode_preserves_shape"]], "tests.pose_test": [[83, "module-tests.pose_test"]], "testpose (class in tests.pose_tf_graph_mode_test)": [[84, "tests.pose_tf_graph_mode_test.TestPose"]], "test_pose_tf_posebody_frame_dropout_normal_graph_mode_does_not_fail() (tests.pose_tf_graph_mode_test.testpose method)": [[84, "tests.pose_tf_graph_mode_test.TestPose.test_pose_tf_posebody_frame_dropout_normal_graph_mode_does_not_fail"]], "test_pose_tf_posebody_frame_dropout_uniform_graph_mode_does_not_fail() (tests.pose_tf_graph_mode_test.testpose method)": [[84, "tests.pose_tf_graph_mode_test.TestPose.test_pose_tf_posebody_frame_dropout_uniform_graph_mode_does_not_fail"]], "test_pose_tf_posebody_normalize_graph_mode_does_not_fail() (tests.pose_tf_graph_mode_test.testpose method)": [[84, "tests.pose_tf_graph_mode_test.TestPose.test_pose_tf_posebody_normalize_graph_mode_does_not_fail"]], "tests.pose_tf_graph_mode_test": [[84, "module-tests.pose_tf_graph_mode_test"]]}})